{
  "$schema": "http://json-schema.org/schema#",
  "title": "Schema for OpenStack Heat Orchestration Templates",
  "description": "https://docs.openstack.org/heat/latest/template_guide/hot_spec.html",
  "markdownDescription": "https://docs.openstack.org/heat/latest/template_guide/hot_spec.html",
  "generatedBy": "https://github.com/vojtechhabarta/heat-template-schema",
  "type": "object",
  "properties": {
    "heat_template_version": {
      "description": "This key with value `2013-05-23` (or a later date) indicates that the YAML document is a HOT template of the specified version.",
      "markdownDescription": "This key with value `2013-05-23` (or a later date) indicates that the YAML document is a HOT template of the specified version.",
      "type": "string",
      "enum": [
        "2013-05-23",
        "2014-10-16",
        "2015-04-30",
        "2015-10-15",
        "2016-04-08",
        "2016-10-14",
        "newton",
        "2017-02-24",
        "ocata",
        "2017-09-01",
        "pike",
        "2018-03-02",
        "queens"
      ]
    },
    "description": {
      "description": "This optional key allows for giving a description of the template, or the workload that can be deployed using the template.",
      "markdownDescription": "This optional key allows for giving a description of the template, or the workload that can be deployed using the template.",
      "type": "string"
    },
    "parameter_groups": {
      "description": "This section allows for specifying how the input parameters should be grouped and the order to provide the parameters in. This section is optional and can be omitted when necessary.",
      "markdownDescription": "This section allows for specifying how the input parameters should be grouped and the order to provide the parameters in. This section is optional and can be omitted when necessary.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "label": {
            "description": "A human-readable label that defines the associated group of parameters.",
            "markdownDescription": "A human-readable label that defines the associated group of parameters.",
            "type": "string"
          },
          "description": {
            "description": "This attribute allows for giving a human-readable description of the parameter group.",
            "markdownDescription": "This attribute allows for giving a human-readable description of the parameter group.",
            "type": "string"
          },
          "parameters": {
            "description": "A list of parameters associated with this parameter group.",
            "markdownDescription": "A list of parameters associated with this parameter group.",
            "type": "array",
            "items": {
              "description": "The name of the parameter that is defined in the associated `parameters` section.",
              "markdownDescription": "The name of the parameter that is defined in the associated `parameters` section.",
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "parameters": {
      "description": "This section allows for specifying input parameters that have to be provided when instantiating the template. The section is optional and can be omitted when no input is required.",
      "markdownDescription": "This section allows for specifying input parameters that have to be provided when instantiating the template. The section is optional and can be omitted when no input is required.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the parameter. Supported types are `string`, `number`, `comma_delimited_list`, `json` and `boolean`. This attribute is required.",
            "markdownDescription": "The type of the parameter. Supported types are `string`, `number`, `comma_delimited_list`, `json` and `boolean`. This attribute is required.",
            "type": "string",
            "enum": [
              "string",
              "number",
              "comma_delimited_list",
              "json",
              "boolean"
            ]
          },
          "label": {
            "description": "A human readable name for the parameter. This attribute is optional.",
            "markdownDescription": "A human readable name for the parameter. This attribute is optional.",
            "type": "string"
          },
          "description": {
            "description": "A human readable description for the parameter. This attribute is optional.",
            "markdownDescription": "A human readable description for the parameter. This attribute is optional.",
            "type": "string"
          },
          "default": {
            "description": "A default value for the parameter. This value is used if the user doesn’t specify his own value during deployment. This attribute is optional.",
            "markdownDescription": "A default value for the parameter. This value is used if the user doesn’t specify his own value during deployment. This attribute is optional."
          },
          "hidden": {
            "description": "Defines whether the parameters should be hidden when a user requests information about a stack created from the template. This attribute can be used to hide passwords specified as parameters. This attribute is optional and defaults to `false`.",
            "markdownDescription": "Defines whether the parameters should be hidden when a user requests information about a stack created from the template. This attribute can be used to hide passwords specified as parameters. This attribute is optional and defaults to `false`.",
            "type": "boolean"
          },
          "constraints": {
            "description": "A list of constraints to apply. The constraints are validated by the Orchestration engine when a user deploys a stack. The stack creation fails if the parameter value doesn’t comply to the constraints. This attribute is optional.",
            "markdownDescription": "A list of constraints to apply. The constraints are validated by the Orchestration engine when a user deploys a stack. The stack creation fails if the parameter value doesn’t comply to the constraints. This attribute is optional.",
            "type": "array",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "length": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer"
                        },
                        "max": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    },
                    "description": {
                      "description": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "markdownDescription": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "length"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "range": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "number"
                        },
                        "max": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "description": {
                      "description": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "markdownDescription": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "range"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "modulo": {
                      "type": "object",
                      "properties": {
                        "step": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "step",
                        "offset"
                      ],
                      "additionalProperties": false
                    },
                    "description": {
                      "description": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "markdownDescription": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "modulo"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "allowed_values": {
                      "type": "array"
                    },
                    "description": {
                      "description": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "markdownDescription": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "allowed_values"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "allowed_pattern": {
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "markdownDescription": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "allowed_pattern"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "custom_constraint": {
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "markdownDescription": "A description of the constraint. The text is presented to the user when the value he defines violates the constraint. If omitted, a default validation message is presented to the user. This attribute is optional.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "custom_constraint"
                  ],
                  "additionalProperties": false
                }
              ],
              "additionalItems": false
            }
          },
          "immutable": {
            "description": "Defines whether the parameter is updatable. Stack update fails, if this is set to `true` and the parameter value is changed. This attribute is optional and defaults to `false`.",
            "markdownDescription": "Defines whether the parameter is updatable. Stack update fails, if this is set to `true` and the parameter value is changed. This attribute is optional and defaults to `false`.",
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ],
        "additionalProperties": false
      }
    },
    "resources": {
      "description": "This section contains the declaration of the single resources of the template. This section with at least one resource should be defined in any HOT template, or the template would not really do anything when being instantiated.",
      "markdownDescription": "This section contains the declaration of the single resources of the template. This section with at least one resource should be defined in any HOT template, or the template would not really do anything when being instantiated.",
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::AutoScaling::AutoScalingGroup"
                    ],
                    "description": "No description given\nProperties\n* AvailabilityZones: list - Not Implemented.\n* Cooldown: integer - Cooldown period, in seconds.\n* DesiredCapacity: integer - Desired initial number of instances.\n* InstanceId: string - The ID of an existing instance to use to create the Auto Scaling group. If specify this property, will create the group use an existing instance instead of a launch configuration.\n* LaunchConfigurationName: string - The reference to a LaunchConfiguration resource.\n* LoadBalancerNames: list - List of LoadBalancer resources.\n* MaxSize: integer - Maximum number of instances in the group.\n* MinSize: integer - Minimum number of instances in the group.\n* Tags: list - Tags to attach to this group.\n* VPCZoneIdentifier: list - Use only with Neutron, to list the internal subnet to which the instance will be attached; needed only if multiple exist; list length must be exactly 1.\n\nOutput Attributes\n* InstanceList: string - A comma-delimited list of server ip addresses. (Heat extension).\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **AvailabilityZones**: `list` - Not Implemented.\n* **Cooldown**: `integer` - Cooldown period, in seconds.\n* **DesiredCapacity**: `integer` - Desired initial number of instances.\n* **InstanceId**: `string` - The ID of an existing instance to use to create the Auto Scaling group. If specify this property, will create the group use an existing instance instead of a launch configuration.\n* **LaunchConfigurationName**: `string` - The reference to a LaunchConfiguration resource.\n* **LoadBalancerNames**: `list` - List of LoadBalancer resources.\n* **MaxSize**: `integer` - Maximum number of instances in the group.\n* **MinSize**: `integer` - Minimum number of instances in the group.\n* **Tags**: `list` - Tags to attach to this group.\n* **VPCZoneIdentifier**: `list` - Use only with Neutron, to list the internal subnet to which the instance will be attached; needed only if multiple exist; list length must be exactly 1.\n\n### Output Attributes\n* **InstanceList**: `string` - A comma-delimited list of server ip addresses. (Heat extension).\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "DesiredCapacity": {
                        "description": "Desired initial number of instances.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Desired initial number of instances.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Tags": {
                        "description": "Tags to attach to this group.\ntype: list",
                        "markdownDescription": "Tags to attach to this group.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "InstanceId": {
                        "description": "The ID of an existing instance to use to create the Auto Scaling group. If specify this property, will create the group use an existing instance instead of a launch configuration.\ntype: string",
                        "markdownDescription": "The ID of an existing instance to use to create the Auto Scaling group. If specify this property, will create the group use an existing instance instead of a launch configuration.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Cooldown": {
                        "description": "Cooldown period, in seconds.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Cooldown period, in seconds.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "MinSize": {
                        "description": "Minimum number of instances in the group.\ntype: integer\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Minimum number of instances in the group.\n\n*type*: `integer`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "MaxSize": {
                        "description": "Maximum number of instances in the group.\ntype: integer\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Maximum number of instances in the group.\n\n*type*: `integer`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "VPCZoneIdentifier": {
                        "description": "Use only with Neutron, to list the internal subnet to which the instance will be attached; needed only if multiple exist; list length must be exactly 1.\ntype: list",
                        "markdownDescription": "Use only with Neutron, to list the internal subnet to which the instance will be attached; needed only if multiple exist; list length must be exactly 1.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "UUID of the internal subnet to which the instance will be attached.\ntype: string",
                              "markdownDescription": "UUID of the internal subnet to which the instance will be attached.\n\n*type*: `string`",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "LaunchConfigurationName": {
                        "description": "The reference to a LaunchConfiguration resource.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The reference to a LaunchConfiguration resource.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AvailabilityZones": {
                        "description": "Not Implemented.\ntype: list\nrequired: true",
                        "markdownDescription": "Not Implemented.\n\n*type*: `list`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "LoadBalancerNames": {
                        "description": "List of LoadBalancer resources.\ntype: list",
                        "markdownDescription": "List of LoadBalancer resources.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "MinSize",
                      "MaxSize",
                      "AvailabilityZones"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::AutoScaling::LaunchConfiguration"
                    ],
                    "description": "No description given\nProperties\n* BlockDeviceMappings: list - Block device mappings to attach to instance.\n* ImageId: string - Glance image ID or name.\n* InstanceId: string - The ID of an existing instance you want to use to create the launch configuration. All properties are derived from the instance with the exception of BlockDeviceMapping.\n* InstanceType: string - Nova instance type (flavor).\n* KeyName: string - Optional Nova keypair name.\n* NovaSchedulerHints: list - Scheduler hints to pass to Nova (Heat extension).\n* SecurityGroups: list - Security group names to assign.\n* UserData: string - User data to pass to instance.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **BlockDeviceMappings**: `list` - Block device mappings to attach to instance.\n* **ImageId**: `string` - Glance image ID or name.\n* **InstanceId**: `string` - The ID of an existing instance you want to use to create the launch configuration. All properties are derived from the instance with the exception of BlockDeviceMapping.\n* **InstanceType**: `string` - Nova instance type (flavor).\n* **KeyName**: `string` - Optional Nova keypair name.\n* **NovaSchedulerHints**: `list` - Scheduler hints to pass to Nova (Heat extension).\n* **SecurityGroups**: `list` - Security group names to assign.\n* **UserData**: `string` - User data to pass to instance.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "UserData": {
                        "description": "User data to pass to instance.\ntype: string",
                        "markdownDescription": "User data to pass to instance.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "InstanceId": {
                        "description": "The ID of an existing instance you want to use to create the launch configuration. All properties are derived from the instance with the exception of BlockDeviceMapping.\ntype: string",
                        "markdownDescription": "The ID of an existing instance you want to use to create the launch configuration. All properties are derived from the instance with the exception of BlockDeviceMapping.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ImageId": {
                        "description": "Glance image ID or name.\ntype: string",
                        "markdownDescription": "Glance image ID or name.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "BlockDeviceMappings": {
                        "description": "Block device mappings to attach to instance.\ntype: list",
                        "markdownDescription": "Block device mappings to attach to instance.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Ebs": {
                                      "description": "The ebs volume to attach to the instance.\ntype: map",
                                      "markdownDescription": "The ebs volume to attach to the instance.\n\n*type*: `map`",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "SnapshotId": {
                                              "description": "The ID of the snapshot to create a volume from.\ntype: string",
                                              "markdownDescription": "The ID of the snapshot to create a volume from.\n\n*type*: `string`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "DeleteOnTermination": {
                                              "description": "Indicate whether the volume should be deleted when the instance is terminated.\ntype: boolean\ndefault: true",
                                              "markdownDescription": "Indicate whether the volume should be deleted when the instance is terminated.\n\n*type*: `boolean`\n\n*default*: `true`",
                                              "oneOf": [
                                                {
                                                  "type": "boolean"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "VolumeType": {
                                              "description": "The volume type.\ntype: string",
                                              "markdownDescription": "The volume type.\n\n*type*: `string`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "VolumeSize": {
                                              "description": "The size of the volume, in GB. Must be equal or greater than the size of the snapshot. It is safe to leave this blank and have the Compute service infer the size.\ntype: string",
                                              "markdownDescription": "The size of the volume, in GB. Must be equal or greater than the size of the snapshot. It is safe to leave this blank and have the Compute service infer the size.\n\n*type*: `string`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "Iops": {
                                              "description": "The number of I/O operations per second that the volume supports.\ntype: number",
                                              "markdownDescription": "The number of I/O operations per second that the volume supports.\n\n*type*: `number`",
                                              "oneOf": [
                                                {
                                                  "type": "number"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [],
                                          "additionalProperties": false
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "DeviceName": {
                                      "description": "A device name where the volume will be attached in the system at /dev/device_name.e.g. vdb\ntype: string\nrequired: true",
                                      "markdownDescription": "A device name where the volume will be attached in the system at /dev/device_name.e.g. vdb\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "VirtualName": {
                                      "description": "The name of the virtual device. The name must be in the form ephemeralX where X is a number starting from zero (0); for example, ephemeral0.\ntype: string",
                                      "markdownDescription": "The name of the virtual device. The name must be in the form ephemeralX where X is a number starting from zero (0); for example, ephemeral0.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "NoDevice": {
                                      "description": "The can be used to unmap a defined device.\ntype: map",
                                      "markdownDescription": "The can be used to unmap a defined device.\n\n*type*: `map`",
                                      "oneOf": [
                                        {
                                          "$ref": "#/definitions/object-with-intrinsic-functions"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "DeviceName"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "KeyName": {
                        "description": "Optional Nova keypair name.\ntype: string",
                        "markdownDescription": "Optional Nova keypair name.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "SecurityGroups": {
                        "description": "Security group names to assign.\ntype: list",
                        "markdownDescription": "Security group names to assign.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "NovaSchedulerHints": {
                        "description": "Scheduler hints to pass to Nova (Heat extension).\ntype: list",
                        "markdownDescription": "Scheduler hints to pass to Nova (Heat extension).\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "InstanceType": {
                        "description": "Nova instance type (flavor).\ntype: string",
                        "markdownDescription": "Nova instance type (flavor).\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::AutoScaling::ScalingPolicy"
                    ],
                    "description": "No description given\nProperties\n* AdjustmentType: string - Type of adjustment (absolute or percentage).\n* AutoScalingGroupName: string - AutoScaling group name to apply policy to.\n* Cooldown: integer - Cooldown period, in seconds.\n* MinAdjustmentStep: integer - Minimum number of resources that are added or removed when the AutoScaling group scales up or down. This can be used only when specifying PercentChangeInCapacity for the AdjustmentType property.\n* ScalingAdjustment: integer - Size of adjustment.\n\nOutput Attributes\n* AlarmUrl: string - A signed url to handle the alarm. (Heat extension).\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **AdjustmentType**: `string` - Type of adjustment (absolute or percentage).\n* **AutoScalingGroupName**: `string` - AutoScaling group name to apply policy to.\n* **Cooldown**: `integer` - Cooldown period, in seconds.\n* **MinAdjustmentStep**: `integer` - Minimum number of resources that are added or removed when the AutoScaling group scales up or down. This can be used only when specifying PercentChangeInCapacity for the AdjustmentType property.\n* **ScalingAdjustment**: `integer` - Size of adjustment.\n\n### Output Attributes\n* **AlarmUrl**: `string` - A signed url to handle the alarm. (Heat extension).\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "ScalingAdjustment": {
                        "description": "Size of adjustment.\ntype: integer\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Size of adjustment.\n\n*type*: `integer`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AutoScalingGroupName": {
                        "description": "AutoScaling group name to apply policy to.\ntype: string\nrequired: true",
                        "markdownDescription": "AutoScaling group name to apply policy to.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Cooldown": {
                        "description": "Cooldown period, in seconds.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Cooldown period, in seconds.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "MinAdjustmentStep": {
                        "description": "Minimum number of resources that are added or removed when the AutoScaling group scales up or down. This can be used only when specifying PercentChangeInCapacity for the AdjustmentType property.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Minimum number of resources that are added or removed when the AutoScaling group scales up or down. This can be used only when specifying PercentChangeInCapacity for the AdjustmentType property.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AdjustmentType": {
                        "description": "Type of adjustment (absolute or percentage).\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Type of adjustment (absolute or percentage).\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "ScalingAdjustment",
                      "AutoScalingGroupName",
                      "AdjustmentType"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::CloudFormation::Stack"
                    ],
                    "description": "Represents a child stack to allow composition of templates.\nProperties\n* Parameters: map - The set of parameters passed to this nested stack.\n* TemplateURL: string - The URL of a template that specifies the stack to be created as a resource.\n* TimeoutInMinutes: integer - The length of time, in minutes, to wait for the nested stack creation.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Represents a child stack to allow composition of templates.\n### Properties\n* **Parameters**: `map` - The set of parameters passed to this nested stack.\n* **TemplateURL**: `string` - The URL of a template that specifies the stack to be created as a resource.\n* **TimeoutInMinutes**: `integer` - The length of time, in minutes, to wait for the nested stack creation.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "TemplateURL": {
                        "description": "The URL of a template that specifies the stack to be created as a resource.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "The URL of a template that specifies the stack to be created as a resource.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "TimeoutInMinutes": {
                        "description": "The length of time, in minutes, to wait for the nested stack creation.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "The length of time, in minutes, to wait for the nested stack creation.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Parameters": {
                        "description": "The set of parameters passed to this nested stack.\ntype: map\nupdate_allowed: true",
                        "markdownDescription": "The set of parameters passed to this nested stack.\n\n*type*: `map`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "TemplateURL"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::CloudFormation::WaitCondition"
                    ],
                    "description": "No description given\nProperties\n* Count: integer - The number of success signals that must be received before the stack creation process continues.\n* Handle: string - A reference to the wait condition handle used to signal this wait condition.\n* Timeout: integer - The number of seconds to wait for the correct number of signals to arrive.\n\nOutput Attributes\n* Data: string - JSON string containing data associated with wait condition signals sent to the handle.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **Count**: `integer` - The number of success signals that must be received before the stack creation process continues.\n* **Handle**: `string` - A reference to the wait condition handle used to signal this wait condition.\n* **Timeout**: `integer` - The number of seconds to wait for the correct number of signals to arrive.\n\n### Output Attributes\n* **Data**: `string` - JSON string containing data associated with wait condition signals sent to the handle.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Count": {
                        "description": "The number of success signals that must be received before the stack creation process continues.\ntype: integer\ndefault: 1\nupdate_allowed: true",
                        "markdownDescription": "The number of success signals that must be received before the stack creation process continues.\n\n*type*: `integer`\n\n*default*: `1`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Handle": {
                        "description": "A reference to the wait condition handle used to signal this wait condition.\ntype: string\nrequired: true",
                        "markdownDescription": "A reference to the wait condition handle used to signal this wait condition.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Timeout": {
                        "description": "The number of seconds to wait for the correct number of signals to arrive.\ntype: integer\nrequired: true",
                        "markdownDescription": "The number of seconds to wait for the correct number of signals to arrive.\n\n*type*: `integer`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "Handle",
                      "Timeout"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::CloudFormation::WaitConditionHandle"
                    ],
                    "description": "AWS WaitConditionHandle resource.\nthe main point of this class is to : have no dependencies (so the instance can reference it) generate a unique url (to be returned in the reference) then the cfn-signal will use this url to post to and WaitCondition will poll it to see if has been written to.\nProperties\n\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "AWS WaitConditionHandle resource.\n\nthe main point of this class is to :\nhave no dependencies (so the instance can reference it)\ngenerate a unique url (to be returned in the reference)\nthen the cfn-signal will use this url to post to and\nWaitCondition will poll it to see if has been written to.\n\n### Properties\n\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {},
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::CloudWatch::Alarm"
                    ],
                    "description": "AWS::CloudWatch::Alarm using Aodh.\nProperties\n* AlarmActions: list\n* AlarmDescription: string\n* ComparisonOperator: string\n* Dimensions: list\n* EvaluationPeriods: string\n* InsufficientDataActions: list\n* MetricName: string\n* Namespace: string\n* OKActions: list\n* Period: string\n* Statistic: string\n* Threshold: string\n* Units: string\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "AWS::CloudWatch::Alarm using Aodh.\n### Properties\n* **AlarmActions**: `list`\n* **AlarmDescription**: `string`\n* **ComparisonOperator**: `string`\n* **Dimensions**: `list`\n* **EvaluationPeriods**: `string`\n* **InsufficientDataActions**: `list`\n* **MetricName**: `string`\n* **Namespace**: `string`\n* **OKActions**: `list`\n* **Period**: `string`\n* **Statistic**: `string`\n* **Threshold**: `string`\n* **Units**: `string`\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "EvaluationPeriods": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Dimensions": {
                        "description": "type: list\nupdate_allowed: true",
                        "markdownDescription": "*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AlarmActions": {
                        "description": "type: list\nupdate_allowed: true",
                        "markdownDescription": "*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AlarmDescription": {
                        "description": "type: string\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Namespace": {
                        "description": "type: string\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Period": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ComparisonOperator": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Statistic": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Threshold": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "InsufficientDataActions": {
                        "description": "type: list\nupdate_allowed: true",
                        "markdownDescription": "*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Units": {
                        "description": "type: string\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "OKActions": {
                        "description": "type: list\nupdate_allowed: true",
                        "markdownDescription": "*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "MetricName": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "EvaluationPeriods",
                      "Period",
                      "ComparisonOperator",
                      "Statistic",
                      "Threshold",
                      "MetricName"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::EIP"
                    ],
                    "description": "No description given\nProperties\n* Domain: string - Set to \"vpc\" to have IP address allocation associated to your VPC.\n* InstanceId: string - Instance ID to associate with EIP.\n\nOutput Attributes\n* AllocationId: string - ID that AWS assigns to represent the allocation of the address for use with Amazon VPC. Returned only for VPC elastic IP addresses.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **Domain**: `string` - Set to \"vpc\" to have IP address allocation associated to your VPC.\n* **InstanceId**: `string` - Instance ID to associate with EIP.\n\n### Output Attributes\n* **AllocationId**: `string` - ID that AWS assigns to represent the allocation of the address for use with Amazon VPC. Returned only for VPC elastic IP addresses.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "InstanceId": {
                        "description": "Instance ID to associate with EIP.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Instance ID to associate with EIP.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Domain": {
                        "description": "Set to \"vpc\" to have IP address allocation associated to your VPC.\ntype: string",
                        "markdownDescription": "Set to \"vpc\" to have IP address allocation associated to your VPC.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::EIPAssociation"
                    ],
                    "description": "No description given\nProperties\n* AllocationId: string - Allocation ID for VPC EIP address.\n* EIP: string - EIP address to associate with instance.\n* InstanceId: string - Instance ID to associate with EIP specified by EIP property.\n* NetworkInterfaceId: string - Network interface ID to associate with EIP.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **AllocationId**: `string` - Allocation ID for VPC EIP address.\n* **EIP**: `string` - EIP address to associate with instance.\n* **InstanceId**: `string` - Instance ID to associate with EIP specified by EIP property.\n* **NetworkInterfaceId**: `string` - Network interface ID to associate with EIP.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "InstanceId": {
                        "description": "Instance ID to associate with EIP specified by EIP property.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Instance ID to associate with EIP specified by EIP property.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "EIP": {
                        "description": "EIP address to associate with instance.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "EIP address to associate with instance.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "NetworkInterfaceId": {
                        "description": "Network interface ID to associate with EIP.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Network interface ID to associate with EIP.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AllocationId": {
                        "description": "Allocation ID for VPC EIP address.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Allocation ID for VPC EIP address.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::Instance"
                    ],
                    "description": "No description given\nProperties\n* AvailabilityZone: string - Availability zone to launch the instance in.\n* BlockDeviceMappings: list - Block device mappings to attach to instance.\n* ImageId: string - Glance image ID or name.\n* InstanceType: string - Nova instance type (flavor).\n* KeyName: string - Optional Nova keypair name.\n* NetworkInterfaces: list - Network interfaces to associate with instance.\n* NovaSchedulerHints: list - Scheduler hints to pass to Nova (Heat extension).\n* SecurityGroupIds: list - Security group IDs to assign.\n* SecurityGroups: list - Security group names to assign.\n* SubnetId: string - Subnet ID to launch instance in.\n* Tags: list - Tags to attach to instance.\n* UserData: string - User data to pass to instance.\n* Volumes: list - Volumes to attach to instance.\n\nOutput Attributes\n* AvailabilityZone: string - The Availability Zone where the specified instance is launched.\n* PrivateDnsName: string - Private DNS name of the specified instance.\n* PrivateIp: string - Private IP address of the specified instance.\n* PublicDnsName: string - Public DNS name of the specified instance.\n* PublicIp: string - Public IP address of the specified instance.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **AvailabilityZone**: `string` - Availability zone to launch the instance in.\n* **BlockDeviceMappings**: `list` - Block device mappings to attach to instance.\n* **ImageId**: `string` - Glance image ID or name.\n* **InstanceType**: `string` - Nova instance type (flavor).\n* **KeyName**: `string` - Optional Nova keypair name.\n* **NetworkInterfaces**: `list` - Network interfaces to associate with instance.\n* **NovaSchedulerHints**: `list` - Scheduler hints to pass to Nova (Heat extension).\n* **SecurityGroupIds**: `list` - Security group IDs to assign.\n* **SecurityGroups**: `list` - Security group names to assign.\n* **SubnetId**: `string` - Subnet ID to launch instance in.\n* **Tags**: `list` - Tags to attach to instance.\n* **UserData**: `string` - User data to pass to instance.\n* **Volumes**: `list` - Volumes to attach to instance.\n\n### Output Attributes\n* **AvailabilityZone**: `string` - The Availability Zone where the specified instance is launched.\n* **PrivateDnsName**: `string` - Private DNS name of the specified instance.\n* **PrivateIp**: `string` - Private IP address of the specified instance.\n* **PublicDnsName**: `string` - Public DNS name of the specified instance.\n* **PublicIp**: `string` - Public IP address of the specified instance.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "UserData": {
                        "description": "User data to pass to instance.\ntype: string",
                        "markdownDescription": "User data to pass to instance.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AvailabilityZone": {
                        "description": "Availability zone to launch the instance in.\ntype: string",
                        "markdownDescription": "Availability zone to launch the instance in.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Tags": {
                        "description": "Tags to attach to instance.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "Tags to attach to instance.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ImageId": {
                        "description": "Glance image ID or name.\ntype: string\nrequired: true",
                        "markdownDescription": "Glance image ID or name.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "KeyName": {
                        "description": "Optional Nova keypair name.\ntype: string",
                        "markdownDescription": "Optional Nova keypair name.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "BlockDeviceMappings": {
                        "description": "Block device mappings to attach to instance.\ntype: list",
                        "markdownDescription": "Block device mappings to attach to instance.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Ebs": {
                                      "description": "The ebs volume to attach to the instance.\ntype: map",
                                      "markdownDescription": "The ebs volume to attach to the instance.\n\n*type*: `map`",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "SnapshotId": {
                                              "description": "The ID of the snapshot to create a volume from.\ntype: string",
                                              "markdownDescription": "The ID of the snapshot to create a volume from.\n\n*type*: `string`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "DeleteOnTermination": {
                                              "description": "Indicate whether the volume should be deleted when the instance is terminated.\ntype: boolean\ndefault: true",
                                              "markdownDescription": "Indicate whether the volume should be deleted when the instance is terminated.\n\n*type*: `boolean`\n\n*default*: `true`",
                                              "oneOf": [
                                                {
                                                  "type": "boolean"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "VolumeType": {
                                              "description": "The volume type.\ntype: string",
                                              "markdownDescription": "The volume type.\n\n*type*: `string`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "VolumeSize": {
                                              "description": "The size of the volume, in GB. Must be equal or greater than the size of the snapshot. It is safe to leave this blank and have the Compute service infer the size.\ntype: string",
                                              "markdownDescription": "The size of the volume, in GB. Must be equal or greater than the size of the snapshot. It is safe to leave this blank and have the Compute service infer the size.\n\n*type*: `string`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "Iops": {
                                              "description": "The number of I/O operations per second that the volume supports.\ntype: number",
                                              "markdownDescription": "The number of I/O operations per second that the volume supports.\n\n*type*: `number`",
                                              "oneOf": [
                                                {
                                                  "type": "number"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [],
                                          "additionalProperties": false
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "DeviceName": {
                                      "description": "A device name where the volume will be attached in the system at /dev/device_name.e.g. vdb\ntype: string\nrequired: true",
                                      "markdownDescription": "A device name where the volume will be attached in the system at /dev/device_name.e.g. vdb\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "VirtualName": {
                                      "description": "The name of the virtual device. The name must be in the form ephemeralX where X is a number starting from zero (0); for example, ephemeral0.\ntype: string",
                                      "markdownDescription": "The name of the virtual device. The name must be in the form ephemeralX where X is a number starting from zero (0); for example, ephemeral0.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "NoDevice": {
                                      "description": "The can be used to unmap a defined device.\ntype: map",
                                      "markdownDescription": "The can be used to unmap a defined device.\n\n*type*: `map`",
                                      "oneOf": [
                                        {
                                          "$ref": "#/definitions/object-with-intrinsic-functions"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "DeviceName"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "SecurityGroups": {
                        "description": "Security group names to assign.\ntype: list",
                        "markdownDescription": "Security group names to assign.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "SecurityGroupIds": {
                        "description": "Security group IDs to assign.\ntype: list",
                        "markdownDescription": "Security group IDs to assign.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Volumes": {
                        "description": "Volumes to attach to instance.\ntype: list\ndefault: []",
                        "markdownDescription": "Volumes to attach to instance.\n\n*type*: `list`\n\n*default*: `[]`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Device": {
                                      "description": "The device where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\ntype: string\nrequired: true",
                                      "markdownDescription": "The device where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "VolumeId": {
                                      "description": "The ID of the volume to be attached.\ntype: string\nrequired: true",
                                      "markdownDescription": "The ID of the volume to be attached.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Device",
                                    "VolumeId"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "SubnetId": {
                        "description": "Subnet ID to launch instance in.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Subnet ID to launch instance in.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "NovaSchedulerHints": {
                        "description": "Scheduler hints to pass to Nova (Heat extension).\ntype: list",
                        "markdownDescription": "Scheduler hints to pass to Nova (Heat extension).\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "InstanceType": {
                        "description": "Nova instance type (flavor).\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Nova instance type (flavor).\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "NetworkInterfaces": {
                        "description": "Network interfaces to associate with instance.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "Network interfaces to associate with instance.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "ImageId",
                      "InstanceType"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::InternetGateway"
                    ],
                    "description": "No description given\nProperties\n* Tags: list\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **Tags**: `list`\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "description": "type: list",
                        "markdownDescription": "*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::NetworkInterface"
                    ],
                    "description": "No description given\nProperties\n* Description: string - Description for this interface.\n* GroupSet: list - List of security group IDs associated with this interface.\n* PrivateIpAddress: string\n* SubnetId: string - Subnet ID to associate with this interface.\n* Tags: list\n\nOutput Attributes\n* PrivateIpAddress: string - Private IP address of the network interface.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **Description**: `string` - Description for this interface.\n* **GroupSet**: `list` - List of security group IDs associated with this interface.\n* **PrivateIpAddress**: `string`\n* **SubnetId**: `string` - Subnet ID to associate with this interface.\n* **Tags**: `list`\n\n### Output Attributes\n* **PrivateIpAddress**: `string` - Private IP address of the network interface.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "SubnetId": {
                        "description": "Subnet ID to associate with this interface.\ntype: string\nrequired: true",
                        "markdownDescription": "Subnet ID to associate with this interface.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "GroupSet": {
                        "description": "List of security group IDs associated with this interface.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "List of security group IDs associated with this interface.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Description": {
                        "description": "Description for this interface.\ntype: string",
                        "markdownDescription": "Description for this interface.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "PrivateIpAddress": {
                        "description": "type: string",
                        "markdownDescription": "*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Tags": {
                        "description": "type: list",
                        "markdownDescription": "*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "List of tags associated with this interface.\ntype: map",
                              "markdownDescription": "List of tags associated with this interface.\n\n*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "SubnetId"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::RouteTable"
                    ],
                    "description": "No description given\nProperties\n* Tags: list\n* VpcId: string - VPC ID for where the route table is created.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **Tags**: `list`\n* **VpcId**: `string` - VPC ID for where the route table is created.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "VpcId": {
                        "description": "VPC ID for where the route table is created.\ntype: string\nrequired: true",
                        "markdownDescription": "VPC ID for where the route table is created.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Tags": {
                        "description": "type: list",
                        "markdownDescription": "*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "List of tags to be attached to this resource.\ntype: map",
                              "markdownDescription": "List of tags to be attached to this resource.\n\n*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "VpcId"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::SecurityGroup"
                    ],
                    "description": "No description given\nProperties\n* GroupDescription: string - Description of the security group.\n* SecurityGroupEgress: list\n* SecurityGroupIngress: list\n* VpcId: string - Physical ID of the VPC. Not implemented.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **GroupDescription**: `string` - Description of the security group.\n* **SecurityGroupEgress**: `list`\n* **SecurityGroupIngress**: `list`\n* **VpcId**: `string` - Physical ID of the VPC. Not implemented.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "SecurityGroupIngress": {
                        "description": "type: list\nupdate_allowed: true",
                        "markdownDescription": "*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "List of security group ingress rules.\ntype: map",
                              "markdownDescription": "List of security group ingress rules.\n\n*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "CidrIp": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "SourceSecurityGroupId": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "FromPort": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "SourceSecurityGroupOwnerId": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "SourceSecurityGroupName": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "ToPort": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "IpProtocol": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "VpcId": {
                        "description": "Physical ID of the VPC. Not implemented.\ntype: string",
                        "markdownDescription": "Physical ID of the VPC. Not implemented.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "GroupDescription": {
                        "description": "Description of the security group.\ntype: string\nrequired: true",
                        "markdownDescription": "Description of the security group.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "SecurityGroupEgress": {
                        "description": "type: list\nupdate_allowed: true",
                        "markdownDescription": "*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "List of security group egress rules.\ntype: map",
                              "markdownDescription": "List of security group egress rules.\n\n*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "CidrIp": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "SourceSecurityGroupId": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "FromPort": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "SourceSecurityGroupOwnerId": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "SourceSecurityGroupName": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "ToPort": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "IpProtocol": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "GroupDescription"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::Subnet"
                    ],
                    "description": "No description given\nProperties\n* AvailabilityZone: string - Availability zone in which you want the subnet.\n* CidrBlock: string - CIDR block to apply to subnet.\n* Tags: list\n* VpcId: string - Ref structure that contains the ID of the VPC on which you want to create the subnet.\n\nOutput Attributes\n* AvailabilityZone: string - Availability Zone of the subnet.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **AvailabilityZone**: `string` - Availability zone in which you want the subnet.\n* **CidrBlock**: `string` - CIDR block to apply to subnet.\n* **Tags**: `list`\n* **VpcId**: `string` - Ref structure that contains the ID of the VPC on which you want to create the subnet.\n\n### Output Attributes\n* **AvailabilityZone**: `string` - Availability Zone of the subnet.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "description": "type: list",
                        "markdownDescription": "*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "List of tags to attach to this resource.\ntype: map",
                              "markdownDescription": "List of tags to attach to this resource.\n\n*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "VpcId": {
                        "description": "Ref structure that contains the ID of the VPC on which you want to create the subnet.\ntype: string\nrequired: true",
                        "markdownDescription": "Ref structure that contains the ID of the VPC on which you want to create the subnet.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "CidrBlock": {
                        "description": "CIDR block to apply to subnet.\ntype: string\nrequired: true",
                        "markdownDescription": "CIDR block to apply to subnet.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AvailabilityZone": {
                        "description": "Availability zone in which you want the subnet.\ntype: string",
                        "markdownDescription": "Availability zone in which you want the subnet.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "VpcId",
                      "CidrBlock"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::SubnetRouteTableAssociation"
                    ],
                    "description": "No description given\nProperties\n* RouteTableId: string - Route table ID.\n* SubnetId: string - Subnet ID.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **RouteTableId**: `string` - Route table ID.\n* **SubnetId**: `string` - Subnet ID.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "SubnetId": {
                        "description": "Subnet ID.\ntype: string\nrequired: true",
                        "markdownDescription": "Subnet ID.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "RouteTableId": {
                        "description": "Route table ID.\ntype: string\nrequired: true",
                        "markdownDescription": "Route table ID.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "SubnetId",
                      "RouteTableId"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::Volume"
                    ],
                    "description": "No description given\nProperties\n* AvailabilityZone: string - The availability zone in which the volume will be created.\n* Size: integer - The size of the volume in GB.\n* SnapshotId: string - If specified, the backup used as the source to create the volume.\n* Tags: list - The list of tags to associate with the volume.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **AvailabilityZone**: `string` - The availability zone in which the volume will be created.\n* **Size**: `integer` - The size of the volume in GB.\n* **SnapshotId**: `string` - If specified, the backup used as the source to create the volume.\n* **Tags**: `list` - The list of tags to associate with the volume.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Size": {
                        "description": "The size of the volume in GB.\ntype: integer\nimmutable: true",
                        "markdownDescription": "The size of the volume in GB.\n\n*type*: `integer`\n\n*immutable*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "SnapshotId": {
                        "description": "If specified, the backup used as the source to create the volume.\ntype: string\nimmutable: true",
                        "markdownDescription": "If specified, the backup used as the source to create the volume.\n\n*type*: `string`\n\n*immutable*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AvailabilityZone": {
                        "description": "The availability zone in which the volume will be created.\ntype: string\nrequired: true\nimmutable: true",
                        "markdownDescription": "The availability zone in which the volume will be created.\n\n*type*: `string`\n\n*required*: `true`\n\n*immutable*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Tags": {
                        "description": "The list of tags to associate with the volume.\ntype: list\nimmutable: true",
                        "markdownDescription": "The list of tags to associate with the volume.\n\n*type*: `list`\n\n*immutable*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "AvailabilityZone"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::VolumeAttachment"
                    ],
                    "description": "No description given\nProperties\n* Device: string - The device where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\n* InstanceId: string - The ID of the instance to which the volume attaches.\n* VolumeId: string - The ID of the volume to be attached.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **Device**: `string` - The device where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\n* **InstanceId**: `string` - The ID of the instance to which the volume attaches.\n* **VolumeId**: `string` - The ID of the volume to be attached.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "InstanceId": {
                        "description": "The ID of the instance to which the volume attaches.\ntype: string\nrequired: true\nimmutable: true",
                        "markdownDescription": "The ID of the instance to which the volume attaches.\n\n*type*: `string`\n\n*required*: `true`\n\n*immutable*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Device": {
                        "description": "The device where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\ntype: string\nrequired: true\nimmutable: true",
                        "markdownDescription": "The device where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\n\n*type*: `string`\n\n*required*: `true`\n\n*immutable*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "VolumeId": {
                        "description": "The ID of the volume to be attached.\ntype: string\nrequired: true\nimmutable: true",
                        "markdownDescription": "The ID of the volume to be attached.\n\n*type*: `string`\n\n*required*: `true`\n\n*immutable*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "InstanceId",
                      "Device",
                      "VolumeId"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::VPC"
                    ],
                    "description": "No description given\nProperties\n* CidrBlock: string - CIDR block to apply to the VPC.\n* Tags: list\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **CidrBlock**: `string` - CIDR block to apply to the VPC.\n* **Tags**: `list`\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "CidrBlock": {
                        "description": "CIDR block to apply to the VPC.\ntype: string",
                        "markdownDescription": "CIDR block to apply to the VPC.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Tags": {
                        "description": "type: list",
                        "markdownDescription": "*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "List of tags to attach to the instance.\ntype: map",
                              "markdownDescription": "List of tags to attach to the instance.\n\n*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "type: string\nrequired: true",
                                      "markdownDescription": "*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::EC2::VPCGatewayAttachment"
                    ],
                    "description": "No description given\nProperties\n* InternetGatewayId: string - ID of the InternetGateway.\n* VpcId: string - VPC ID for this gateway association.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **InternetGatewayId**: `string` - ID of the InternetGateway.\n* **VpcId**: `string` - VPC ID for this gateway association.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "VpcId": {
                        "description": "VPC ID for this gateway association.\ntype: string\nrequired: true",
                        "markdownDescription": "VPC ID for this gateway association.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "InternetGatewayId": {
                        "description": "ID of the InternetGateway.\ntype: string",
                        "markdownDescription": "ID of the InternetGateway.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "VpcId"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::ElasticLoadBalancing::LoadBalancer"
                    ],
                    "description": "Implements a HAProxy-bearing instance as a nested stack.\nThe template for the nested stack can be redefined with ``loadbalancer_template`` option in ``heat.conf``.\nGenerally the image used for the instance must have the following packages installed or available for installation at runtime::\n- heat-cfntools and its dependencies like python-psutil - cronie - socat - haproxy\nCurrent default builtin template uses Fedora 21 x86_64 base cloud image (https://getfedora.org/cloud/download/) and apart from installing packages goes through some hoops around SELinux due to pecularities of heat-cfntools.\nProperties\n* AvailabilityZones: list - The Availability Zones in which to create the load balancer.\n* HealthCheck: map - An application health check for the instances.\n* Instances: list - The list of instance IDs load balanced.\n* Listeners: list - One or more listeners for this load balancer.\n* SecurityGroups: list - List of Security Groups assigned on current LB.\n\nOutput Attributes\n* CanonicalHostedZoneName: string - The name of the hosted zone that is associated with the LoadBalancer.\n* CanonicalHostedZoneNameID: string - The ID of the hosted zone name that is associated with the LoadBalancer.\n* DNSName: string - The DNS name for the LoadBalancer.\n* SourceSecurityGroup.GroupName: string - The security group that you can use as part of your inbound rules for your LoadBalancer's back-end instances.\n* SourceSecurityGroup.OwnerAlias: string - Owner of the source security group.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Implements a HAProxy-bearing instance as a nested stack.\n\nThe template for the nested stack can be redefined with\n``loadbalancer_template`` option in ``heat.conf``.\n\nGenerally the image used for the instance must have the following\npackages installed or available for installation at runtime::\n\n- heat-cfntools and its dependencies like python-psutil\n- cronie\n- socat\n- haproxy\n\nCurrent default builtin template uses Fedora 21 x86_64 base cloud image\n(https://getfedora.org/cloud/download/)\nand apart from installing packages goes through some hoops\naround SELinux due to pecularities of heat-cfntools.\n\n### Properties\n* **AvailabilityZones**: `list` - The Availability Zones in which to create the load balancer.\n* **HealthCheck**: `map` - An application health check for the instances.\n* **Instances**: `list` - The list of instance IDs load balanced.\n* **Listeners**: `list` - One or more listeners for this load balancer.\n* **SecurityGroups**: `list` - List of Security Groups assigned on current LB.\n\n### Output Attributes\n* **CanonicalHostedZoneName**: `string` - The name of the hosted zone that is associated with the LoadBalancer.\n* **CanonicalHostedZoneNameID**: `string` - The ID of the hosted zone name that is associated with the LoadBalancer.\n* **DNSName**: `string` - The DNS name for the LoadBalancer.\n* **SourceSecurityGroup.GroupName**: `string` - The security group that you can use as part of your inbound rules for your LoadBalancer's back-end instances.\n* **SourceSecurityGroup.OwnerAlias**: `string` - Owner of the source security group.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Instances": {
                        "description": "The list of instance IDs load balanced.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "The list of instance IDs load balanced.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Listeners": {
                        "description": "One or more listeners for this load balancer.\ntype: list\nrequired: true",
                        "markdownDescription": "One or more listeners for this load balancer.\n\n*type*: `list`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "InstancePort": {
                                      "description": "TCP port on which the instance server is listening.\ntype: integer\nrequired: true",
                                      "markdownDescription": "TCP port on which the instance server is listening.\n\n*type*: `integer`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Protocol": {
                                      "description": "The load balancer transport protocol to use.\ntype: string\nrequired: true",
                                      "markdownDescription": "The load balancer transport protocol to use.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "LoadBalancerPort": {
                                      "description": "The external load balancer port number.\ntype: integer\nrequired: true",
                                      "markdownDescription": "The external load balancer port number.\n\n*type*: `integer`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "SSLCertificateId": {
                                      "description": "Not Implemented.\ntype: string",
                                      "markdownDescription": "Not Implemented.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "PolicyNames": {
                                      "description": "Not Implemented.\ntype: list",
                                      "markdownDescription": "Not Implemented.\n\n*type*: `list`",
                                      "oneOf": [
                                        {
                                          "$ref": "#/definitions/array-with-intrinsic-functions"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "InstancePort",
                                    "Protocol",
                                    "LoadBalancerPort"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AvailabilityZones": {
                        "description": "The Availability Zones in which to create the load balancer.\ntype: list\nrequired: true",
                        "markdownDescription": "The Availability Zones in which to create the load balancer.\n\n*type*: `list`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "SecurityGroups": {
                        "description": "List of Security Groups assigned on current LB.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "List of Security Groups assigned on current LB.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "HealthCheck": {
                        "description": "An application health check for the instances.\ntype: map",
                        "markdownDescription": "An application health check for the instances.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "HealthyThreshold": {
                                "description": "The number of consecutive health probe successes required before moving the instance to the healthy state.\ntype: integer\nrequired: true",
                                "markdownDescription": "The number of consecutive health probe successes required before moving the instance to the healthy state.\n\n*type*: `integer`\n\n*required*: `true`",
                                "oneOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "Interval": {
                                "description": "The approximate interval, in seconds, between health checks of an individual instance.\ntype: integer\nrequired: true",
                                "markdownDescription": "The approximate interval, in seconds, between health checks of an individual instance.\n\n*type*: `integer`\n\n*required*: `true`",
                                "oneOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "Target": {
                                "description": "The port being checked.\ntype: string\nrequired: true",
                                "markdownDescription": "The port being checked.\n\n*type*: `string`\n\n*required*: `true`",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "Timeout": {
                                "description": "Health probe timeout, in seconds.\ntype: integer\nrequired: true",
                                "markdownDescription": "Health probe timeout, in seconds.\n\n*type*: `integer`\n\n*required*: `true`",
                                "oneOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "UnhealthyThreshold": {
                                "description": "The number of consecutive health probe failures required before moving the instance to the unhealthy state\ntype: integer\nrequired: true",
                                "markdownDescription": "The number of consecutive health probe failures required before moving the instance to the unhealthy state\n\n*type*: `integer`\n\n*required*: `true`",
                                "oneOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "HealthyThreshold",
                              "Interval",
                              "Target",
                              "Timeout",
                              "UnhealthyThreshold"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "Listeners",
                      "AvailabilityZones"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::IAM::AccessKey"
                    ],
                    "description": "No description given\nProperties\n* UserName: string - The name of the user that the new key will belong to.\n\nOutput Attributes\n* SecretAccessKey: string - Keypair secret key.\n* UserName: string - Username associated with the AccessKey.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **UserName**: `string` - The name of the user that the new key will belong to.\n\n### Output Attributes\n* **SecretAccessKey**: `string` - Keypair secret key.\n* **UserName**: `string` - Username associated with the AccessKey.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "UserName": {
                        "description": "The name of the user that the new key will belong to.\ntype: string\nrequired: true",
                        "markdownDescription": "The name of the user that the new key will belong to.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "UserName"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::IAM::User"
                    ],
                    "description": "No description given\nProperties\n* Groups: list - Not Implemented.\n* LoginProfile: map - A login profile for the user.\n* Path: string - Not Implemented.\n* Policies: list - Access policies to apply to the user.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **Groups**: `list` - Not Implemented.\n* **LoginProfile**: `map` - A login profile for the user.\n* **Path**: `string` - Not Implemented.\n* **Policies**: `list` - Access policies to apply to the user.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Path": {
                        "description": "Not Implemented.\ntype: string",
                        "markdownDescription": "Not Implemented.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Groups": {
                        "description": "Not Implemented.\ntype: list",
                        "markdownDescription": "Not Implemented.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "LoginProfile": {
                        "description": "A login profile for the user.\ntype: map",
                        "markdownDescription": "A login profile for the user.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "Password": {
                                "description": "type: string",
                                "markdownDescription": "*type*: `string`",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Policies": {
                        "description": "Access policies to apply to the user.\ntype: list",
                        "markdownDescription": "Access policies to apply to the user.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "AWS::RDS::DBInstance"
                    ],
                    "description": "Builtin AWS::RDS::DBInstance\nProperties\n* AllocatedStorage: string\n* DBInstanceClass: string\n* DBName: string\n* DBSecurityGroups: list\n* Engine: string\n* KeyName: string\n* MasterUserPassword: string\n* MasterUsername: string\n* Port: string\n\nOutput Attributes\n* Endpoint.Address\n* Endpoint.Port\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Builtin AWS::RDS::DBInstance\n### Properties\n* **AllocatedStorage**: `string`\n* **DBInstanceClass**: `string`\n* **DBName**: `string`\n* **DBSecurityGroups**: `list`\n* **Engine**: `string`\n* **KeyName**: `string`\n* **MasterUserPassword**: `string`\n* **MasterUsername**: `string`\n* **Port**: `string`\n\n### Output Attributes\n* **Endpoint.Address**\n* **Endpoint.Port**\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Engine": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "DBSecurityGroups": {
                        "description": "type: list\nupdate_allowed: true",
                        "markdownDescription": "*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "MasterUsername": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "MasterUserPassword": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Port": {
                        "description": "type: string\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "KeyName": {
                        "description": "type: string\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AllocatedStorage": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "DBInstanceClass": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "DBName": {
                        "description": "type: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "Engine",
                      "MasterUsername",
                      "MasterUserPassword",
                      "AllocatedStorage",
                      "DBInstanceClass",
                      "DBName"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Aodh::CombinationAlarm"
                    ],
                    "description": "A resource that implements combination of Aodh alarms.\nAllows to use alarm as a combination of other alarms with some operator: activate this alarm if any alarm in combination has been activated or if all alarms in combination have been activated.\nProperties\n* alarm_actions: list - A list of URLs (webhooks) to invoke when state transitions to alarm.\n* alarm_ids: list - List of alarm identifiers to combine.\n* alarm_queues: list - A list of Zaqar queues to post to when state transitions to alarm.\n* description: string - Description for the alarm.\n* enabled: boolean - True if alarm evaluation/actioning is enabled.\n* insufficient_data_actions: list - A list of URLs (webhooks) to invoke when state transitions to insufficient-data.\n* insufficient_data_queues: list - A list of Zaqar queues to post to when state transitions to insufficient-data.\n* ok_actions: list - A list of URLs (webhooks) to invoke when state transitions to ok.\n* ok_queues: list - A list of Zaqar queues to post to when state transitions to ok.\n* operator: string - Operator used to combine the alarms.\n* repeat_actions: boolean - False to trigger actions when the threshold is reached AND the alarm's state has changed. By default, actions are called each time the threshold is reached.\n* severity: string - Severity of the alarm.\n* time_constraints: list - Describe time constraints for the alarm. Only evaluate the alarm if the time at evaluation is within this time constraint. Start point(s) of the constraint are specified with a cron expression, whereas its duration is given in seconds.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource that implements combination of Aodh alarms.\n\nAllows to use alarm as a combination of other alarms with some operator:\nactivate this alarm if any alarm in combination has been activated or\nif all alarms in combination have been activated.\n\n### Properties\n* **alarm_actions**: `list` - A list of URLs (webhooks) to invoke when state transitions to alarm.\n* **alarm_ids**: `list` - List of alarm identifiers to combine.\n* **alarm_queues**: `list` - A list of Zaqar queues to post to when state transitions to alarm.\n* **description**: `string` - Description for the alarm.\n* **enabled**: `boolean` - True if alarm evaluation/actioning is enabled.\n* **insufficient_data_actions**: `list` - A list of URLs (webhooks) to invoke when state transitions to insufficient-data.\n* **insufficient_data_queues**: `list` - A list of Zaqar queues to post to when state transitions to insufficient-data.\n* **ok_actions**: `list` - A list of URLs (webhooks) to invoke when state transitions to ok.\n* **ok_queues**: `list` - A list of Zaqar queues to post to when state transitions to ok.\n* **operator**: `string` - Operator used to combine the alarms.\n* **repeat_actions**: `boolean` - False to trigger actions when the threshold is reached AND the alarm's state has changed. By default, actions are called each time the threshold is reached.\n* **severity**: `string` - Severity of the alarm.\n* **time_constraints**: `list` - Describe time constraints for the alarm. Only evaluate the alarm if the time at evaluation is within this time constraint. Start point(s) of the constraint are specified with a cron expression, whereas its duration is given in seconds.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "alarm_actions": {
                        "description": "A list of URLs (webhooks) to invoke when state transitions to alarm.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "A list of URLs (webhooks) to invoke when state transitions to alarm.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ok_actions": {
                        "description": "A list of URLs (webhooks) to invoke when state transitions to ok.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "A list of URLs (webhooks) to invoke when state transitions to ok.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "description": {
                        "description": "Description for the alarm.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Description for the alarm.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "enabled": {
                        "description": "True if alarm evaluation/actioning is enabled.\ntype: boolean\ndefault: \"true\"\nupdate_allowed: true",
                        "markdownDescription": "True if alarm evaluation/actioning is enabled.\n\n*type*: `boolean`\n\n*default*: `\"true\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "alarm_ids": {
                        "description": "List of alarm identifiers to combine.\ntype: list\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "List of alarm identifiers to combine.\n\n*type*: `list`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "time_constraints": {
                        "description": "Describe time constraints for the alarm. Only evaluate the alarm if the time at evaluation is within this time constraint. Start point(s) of the constraint are specified with a cron expression, whereas its duration is given in seconds.\ntype: list\ndefault: []",
                        "markdownDescription": "Describe time constraints for the alarm. Only evaluate the alarm if the time at evaluation is within this time constraint. Start point(s) of the constraint are specified with a cron expression, whereas its duration is given in seconds.\n\n*type*: `list`\n\n*default*: `[]`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "duration": {
                                      "description": "Duration for the time constraint.\ntype: integer\nrequired: true",
                                      "markdownDescription": "Duration for the time constraint.\n\n*type*: `integer`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "start": {
                                      "description": "Start time for the time constraint. A CRON expression property.\ntype: string\nrequired: true",
                                      "markdownDescription": "Start time for the time constraint. A CRON expression property.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "description": {
                                      "description": "Description for the time constraint.\ntype: string",
                                      "markdownDescription": "Description for the time constraint.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Name for the time constraint.\ntype: string\nrequired: true",
                                      "markdownDescription": "Name for the time constraint.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "timezone": {
                                      "description": "Timezone for the time constraint (eg. 'Taiwan/Taipei', 'Europe/Amsterdam').\ntype: string",
                                      "markdownDescription": "Timezone for the time constraint (eg. 'Taiwan/Taipei', 'Europe/Amsterdam').\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "duration",
                                    "start",
                                    "name"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "insufficient_data_queues": {
                        "description": "A list of Zaqar queues to post to when state transitions to insufficient-data.\ntype: list\ndefault: []\nupdate_allowed: true",
                        "markdownDescription": "A list of Zaqar queues to post to when state transitions to insufficient-data.\n\n*type*: `list`\n\n*default*: `[]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: string",
                              "markdownDescription": "*type*: `string`",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ok_queues": {
                        "description": "A list of Zaqar queues to post to when state transitions to ok.\ntype: list\ndefault: []\nupdate_allowed: true",
                        "markdownDescription": "A list of Zaqar queues to post to when state transitions to ok.\n\n*type*: `list`\n\n*default*: `[]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: string",
                              "markdownDescription": "*type*: `string`",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "insufficient_data_actions": {
                        "description": "A list of URLs (webhooks) to invoke when state transitions to insufficient-data.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "A list of URLs (webhooks) to invoke when state transitions to insufficient-data.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "repeat_actions": {
                        "description": "False to trigger actions when the threshold is reached AND the alarm's state has changed. By default, actions are called each time the threshold is reached.\ntype: boolean\ndefault: \"true\"\nupdate_allowed: true",
                        "markdownDescription": "False to trigger actions when the threshold is reached AND the alarm's state has changed. By default, actions are called each time the threshold is reached.\n\n*type*: `boolean`\n\n*default*: `\"true\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "operator": {
                        "description": "Operator used to combine the alarms.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Operator used to combine the alarms.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "alarm_queues": {
                        "description": "A list of Zaqar queues to post to when state transitions to alarm.\ntype: list\ndefault: []\nupdate_allowed: true",
                        "markdownDescription": "A list of Zaqar queues to post to when state transitions to alarm.\n\n*type*: `list`\n\n*default*: `[]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: string",
                              "markdownDescription": "*type*: `string`",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "severity": {
                        "description": "Severity of the alarm.\ntype: string\ndefault: \"low\"\nupdate_allowed: true",
                        "markdownDescription": "Severity of the alarm.\n\n*type*: `string`\n\n*default*: `\"low\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "alarm_ids"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Cinder::Volume"
                    ],
                    "description": "A resource that implements Cinder volumes.\nCinder volume is a storage in the form of block devices. It can be used, for example, for providing storage to instance. Volume supports creation from snapshot, backup or image. Also volume can be created only by size.\nProperties\n* availability_zone: string - The availability zone in which the volume will be created.\n* backup_id: string - If specified, the backup to create the volume from.\n* description: string - A description of the volume.\n* image: string - If specified, the name or ID of the image to create the volume from.\n* metadata: map - Key/value pairs to associate with the volume.\n* multiattach: boolean - Whether allow the volume to be attached more than once.\n* name: string - A name used to distinguish the volume.\n* read_only: boolean - Enables or disables read-only access mode of volume.\n* scheduler_hints: map - Arbitrary key-value pairs specified by the client to help the Cinder scheduler creating a volume.\n* size: integer - The size of the volume in GB. On update only increase in size is supported. This property is required unless property backup_id or source_volid or snapshot_id is specified.\n* snapshot_id: string - If specified, the snapshot to create the volume from.\n* source_volid: string - If specified, the volume to use as source.\n* volume_type: string - If specified, the type of volume to use, mapping to a specific backend.\n\nOutput Attributes\n* attachments: string - The list of attachments of the volume.\n* availability_zone: string - The availability zone in which the volume is located.\n* bootable: string - Boolean indicating if the volume can be booted or not.\n* created_at: string - The timestamp indicating volume creation.\n* display_description: string - Description of the volume.\n* display_name: string - Name of the volume.\n* encrypted: string - Boolean indicating if the volume is encrypted or not.\n* metadata: string - Key/value pairs associated with the volume.\n* metadata_values: map - Key/value pairs associated with the volume in raw dict form.\n* multiattach: boolean - Boolean indicating whether allow the volume to be attached more than once.\n* show: map - Detailed information about resource.\n* size: string - The size of the volume in GB.\n* snapshot_id: string - The snapshot the volume was created from, if any.\n* source_volid: string - The volume used as source, if any.\n* status: string - The current status of the volume.\n* volume_type: string - The type of the volume mapping to a backend, if any.",
                    "markdownDescription": "A resource that implements Cinder volumes.\n\nCinder volume is a storage in the form of block devices. It can be used,\nfor example, for providing storage to instance. Volume supports creation\nfrom snapshot, backup or image. Also volume can be created only by size.\n\n### Properties\n* **availability_zone**: `string` - The availability zone in which the volume will be created.\n* **backup_id**: `string` - If specified, the backup to create the volume from.\n* **description**: `string` - A description of the volume.\n* **image**: `string` - If specified, the name or ID of the image to create the volume from.\n* **metadata**: `map` - Key/value pairs to associate with the volume.\n* **multiattach**: `boolean` - Whether allow the volume to be attached more than once.\n* **name**: `string` - A name used to distinguish the volume.\n* **read_only**: `boolean` - Enables or disables read-only access mode of volume.\n* **scheduler_hints**: `map` - Arbitrary key-value pairs specified by the client to help the Cinder scheduler creating a volume.\n* **size**: `integer` - The size of the volume in GB. On update only increase in size is supported. This property is required unless property backup_id or source_volid or snapshot_id is specified.\n* **snapshot_id**: `string` - If specified, the snapshot to create the volume from.\n* **source_volid**: `string` - If specified, the volume to use as source.\n* **volume_type**: `string` - If specified, the type of volume to use, mapping to a specific backend.\n\n### Output Attributes\n* **attachments**: `string` - The list of attachments of the volume.\n* **availability_zone**: `string` - The availability zone in which the volume is located.\n* **bootable**: `string` - Boolean indicating if the volume can be booted or not.\n* **created_at**: `string` - The timestamp indicating volume creation.\n* **display_description**: `string` - Description of the volume.\n* **display_name**: `string` - Name of the volume.\n* **encrypted**: `string` - Boolean indicating if the volume is encrypted or not.\n* **metadata**: `string` - Key/value pairs associated with the volume.\n* **metadata_values**: `map` - Key/value pairs associated with the volume in raw dict form.\n* **multiattach**: `boolean` - Boolean indicating whether allow the volume to be attached more than once.\n* **show**: `map` - Detailed information about resource.\n* **size**: `string` - The size of the volume in GB.\n* **snapshot_id**: `string` - The snapshot the volume was created from, if any.\n* **source_volid**: `string` - The volume used as source, if any.\n* **status**: `string` - The current status of the volume.\n* **volume_type**: `string` - The type of the volume mapping to a backend, if any."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "read_only": {
                        "description": "Enables or disables read-only access mode of volume.\ntype: boolean\nupdate_allowed: true",
                        "markdownDescription": "Enables or disables read-only access mode of volume.\n\n*type*: `boolean`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "backup_id": {
                        "description": "If specified, the backup to create the volume from.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "If specified, the backup to create the volume from.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "description": {
                        "description": "A description of the volume.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "A description of the volume.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "multiattach": {
                        "description": "Whether allow the volume to be attached more than once.\ntype: boolean\ndefault: false",
                        "markdownDescription": "Whether allow the volume to be attached more than once.\n\n*type*: `boolean`\n\n*default*: `false`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "image": {
                        "description": "If specified, the name or ID of the image to create the volume from.\ntype: string",
                        "markdownDescription": "If specified, the name or ID of the image to create the volume from.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "availability_zone": {
                        "description": "The availability zone in which the volume will be created.\ntype: string",
                        "markdownDescription": "The availability zone in which the volume will be created.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "metadata": {
                        "description": "Key/value pairs to associate with the volume.\ntype: map\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Key/value pairs to associate with the volume.\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "source_volid": {
                        "description": "If specified, the volume to use as source.\ntype: string",
                        "markdownDescription": "If specified, the volume to use as source.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "A name used to distinguish the volume.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "A name used to distinguish the volume.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "volume_type": {
                        "description": "If specified, the type of volume to use, mapping to a specific backend.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "If specified, the type of volume to use, mapping to a specific backend.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "snapshot_id": {
                        "description": "If specified, the snapshot to create the volume from.\ntype: string",
                        "markdownDescription": "If specified, the snapshot to create the volume from.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "scheduler_hints": {
                        "description": "Arbitrary key-value pairs specified by the client to help the Cinder scheduler creating a volume.\ntype: map",
                        "markdownDescription": "Arbitrary key-value pairs specified by the client to help the Cinder scheduler creating a volume.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "size": {
                        "description": "The size of the volume in GB. On update only increase in size is supported. This property is required unless property backup_id or source_volid or snapshot_id is specified.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "The size of the volume in GB. On update only increase in size is supported. This property is required unless property backup_id or source_volid or snapshot_id is specified.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Cinder::VolumeAttachment"
                    ],
                    "description": "Resource for associating volume to instance.\nResource for associating existing volume to instance. Also, the location where the volume is exposed on the instance can be specified.\nProperties\n* instance_uuid: string - The ID of the server to which the volume attaches.\n* mountpoint: string - The location where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\n* volume_id: string - The ID of the volume to be attached.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Resource for associating volume to instance.\n\nResource for associating existing volume to instance. Also, the location\nwhere the volume is exposed on the instance can be specified.\n\n### Properties\n* **instance_uuid**: `string` - The ID of the server to which the volume attaches.\n* **mountpoint**: `string` - The location where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\n* **volume_id**: `string` - The ID of the volume to be attached.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "instance_uuid": {
                        "description": "The ID of the server to which the volume attaches.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "The ID of the server to which the volume attaches.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "mountpoint": {
                        "description": "The location where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The location where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "volume_id": {
                        "description": "The ID of the volume to be attached.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "The ID of the volume to be attached.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "instance_uuid",
                      "volume_id"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Glance::Image"
                    ],
                    "description": "A resource managing images in Glance.\nA resource provides managing images that are meant to be used with other services.\nProperties\n* architecture: string - Operating system architecture.\n* container_format: string - Container format of image.\n* disk_format: string - Disk format of image.\n* extra_properties: map - Arbitrary properties to associate with the image.\n* id: string - The image ID. Glance will generate a UUID if not specified.\n* is_public: boolean - Scope of image accessibility. Public or private. Default value is False means private. Note: The policy setting of glance allows only users with admin roles to create public image by default.\n* kernel_id: string - ID of image stored in Glance that should be used as the kernel when booting an AMI-style image.\n* location: string - URL where the data for this image already resides. For example, if the image data is stored in swift, you could specify \"swift://example.com/container/obj\".\n* min_disk: integer - Amount of disk space (in GB) required to boot image. Default value is 0 if not specified and means no limit on the disk size.\n* min_ram: integer - Amount of ram (in MB) required to boot image. Default value is 0 if not specified and means no limit on the ram size.\n* name: string - Name for the image. The name of an image is not unique to a Image Service node.\n* os_distro: string - The common name of the operating system distribution in lowercase.\n* owner: string - Owner of the image.\n* protected: boolean - Whether the image can be deleted. If the value is True, the image is protected and cannot be deleted.\n* ramdisk_id: string - ID of image stored in Glance that should be used as the ramdisk when booting an AMI-style image.\n* tags: list - List of image tags.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource managing images in Glance.\n\nA resource provides managing images that are meant to be used with other\nservices.\n\n### Properties\n* **architecture**: `string` - Operating system architecture.\n* **container_format**: `string` - Container format of image.\n* **disk_format**: `string` - Disk format of image.\n* **extra_properties**: `map` - Arbitrary properties to associate with the image.\n* **id**: `string` - The image ID. Glance will generate a UUID if not specified.\n* **is_public**: `boolean` - Scope of image accessibility. Public or private. Default value is False means private. Note: The policy setting of glance allows only users with admin roles to create public image by default.\n* **kernel_id**: `string` - ID of image stored in Glance that should be used as the kernel when booting an AMI-style image.\n* **location**: `string` - URL where the data for this image already resides. For example, if the image data is stored in swift, you could specify \"swift://example.com/container/obj\".\n* **min_disk**: `integer` - Amount of disk space (in GB) required to boot image. Default value is 0 if not specified and means no limit on the disk size.\n* **min_ram**: `integer` - Amount of ram (in MB) required to boot image. Default value is 0 if not specified and means no limit on the ram size.\n* **name**: `string` - Name for the image. The name of an image is not unique to a Image Service node.\n* **os_distro**: `string` - The common name of the operating system distribution in lowercase.\n* **owner**: `string` - Owner of the image.\n* **protected**: `boolean` - Whether the image can be deleted. If the value is True, the image is protected and cannot be deleted.\n* **ramdisk_id**: `string` - ID of image stored in Glance that should be used as the ramdisk when booting an AMI-style image.\n* **tags**: `list` - List of image tags.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "os_distro": {
                        "description": "The common name of the operating system distribution in lowercase.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The common name of the operating system distribution in lowercase.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name for the image. The name of an image is not unique to a Image Service node.\ntype: string",
                        "markdownDescription": "Name for the image. The name of an image is not unique to a Image Service node.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "extra_properties": {
                        "description": "Arbitrary properties to associate with the image.\ntype: map\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Arbitrary properties to associate with the image.\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "tags": {
                        "description": "List of image tags.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "List of image tags.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "kernel_id": {
                        "description": "ID of image stored in Glance that should be used as the kernel when booting an AMI-style image.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "ID of image stored in Glance that should be used as the kernel when booting an AMI-style image.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "container_format": {
                        "description": "Container format of image.\ntype: string\nrequired: true",
                        "markdownDescription": "Container format of image.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "min_ram": {
                        "description": "Amount of ram (in MB) required to boot image. Default value is 0 if not specified and means no limit on the ram size.\ntype: integer\ndefault: 0",
                        "markdownDescription": "Amount of ram (in MB) required to boot image. Default value is 0 if not specified and means no limit on the ram size.\n\n*type*: `integer`\n\n*default*: `0`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ramdisk_id": {
                        "description": "ID of image stored in Glance that should be used as the ramdisk when booting an AMI-style image.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "ID of image stored in Glance that should be used as the ramdisk when booting an AMI-style image.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "disk_format": {
                        "description": "Disk format of image.\ntype: string\nrequired: true",
                        "markdownDescription": "Disk format of image.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "min_disk": {
                        "description": "Amount of disk space (in GB) required to boot image. Default value is 0 if not specified and means no limit on the disk size.\ntype: integer\ndefault: 0",
                        "markdownDescription": "Amount of disk space (in GB) required to boot image. Default value is 0 if not specified and means no limit on the disk size.\n\n*type*: `integer`\n\n*default*: `0`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "protected": {
                        "description": "Whether the image can be deleted. If the value is True, the image is protected and cannot be deleted.\ntype: boolean\ndefault: false",
                        "markdownDescription": "Whether the image can be deleted. If the value is True, the image is protected and cannot be deleted.\n\n*type*: `boolean`\n\n*default*: `false`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "location": {
                        "description": "URL where the data for this image already resides. For example, if the image data is stored in swift, you could specify \"swift://example.com/container/obj\".\ntype: string\nrequired: true",
                        "markdownDescription": "URL where the data for this image already resides. For example, if the image data is stored in swift, you could specify \"swift://example.com/container/obj\".\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "owner": {
                        "description": "Owner of the image.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Owner of the image.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "is_public": {
                        "description": "Scope of image accessibility. Public or private. Default value is False means private. Note: The policy setting of glance allows only users with admin roles to create public image by default.\ntype: boolean\ndefault: false",
                        "markdownDescription": "Scope of image accessibility. Public or private. Default value is False means private. Note: The policy setting of glance allows only users with admin roles to create public image by default.\n\n*type*: `boolean`\n\n*default*: `false`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "id": {
                        "description": "The image ID. Glance will generate a UUID if not specified.\ntype: string",
                        "markdownDescription": "The image ID. Glance will generate a UUID if not specified.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "architecture": {
                        "description": "Operating system architecture.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Operating system architecture.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "container_format",
                      "disk_format",
                      "location"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::AccessPolicy"
                    ],
                    "description": "Resource for defining which resources can be accessed by users.\nNOTE: Now this resource is actually associated with an AWS user resource, not any OS:: resource though it is registered under the OS namespace below.\nResource for defining resources that users are allowed to access by the DescribeStackResource API.\nProperties\n* AllowedResources: list - Resources that users are allowed to access by the DescribeStackResource API.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Resource for defining which resources can be accessed by users.\n\nNOTE: Now this resource is actually associated with an AWS user resource,\nnot any OS:: resource though it is registered under the OS namespace below.\n\nResource for defining resources that users are allowed to access by the\nDescribeStackResource API.\n\n### Properties\n* **AllowedResources**: `list` - Resources that users are allowed to access by the DescribeStackResource API.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "AllowedResources": {
                        "description": "Resources that users are allowed to access by the DescribeStackResource API.\ntype: list\nrequired: true",
                        "markdownDescription": "Resources that users are allowed to access by the DescribeStackResource API.\n\n*type*: `list`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "AllowedResources"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::AutoScalingGroup"
                    ],
                    "description": "An autoscaling group that can scale arbitrary resources.\nAn autoscaling group allows the creation of a desired count of similar resources, which are defined with the resource property in HOT format. If there is a need to create many of the same resources (e.g. one hundred sets of Server, WaitCondition and WaitConditionHandle or even Neutron Nets), AutoScalingGroup is a convenient and easy way to do that.\nProperties\n* cooldown: integer - Cooldown period, in seconds.\n* desired_capacity: integer - Desired initial number of resources.\n* max_size: integer - Maximum number of resources in the group.\n* min_size: integer - Minimum number of resources in the group.\n* resource: map - Resource definition for the resources in the group, in HOT format. The value of this property is the definition of a resource just as if it had been declared in the template itself.\n* rolling_updates: map - Policy for rolling updates for this scaling group.\n\nOutput Attributes\n* current_size: integer - The current size of AutoscalingResourceGroup.\n* outputs: map - A map of resource names to the specified attribute of each individual resource that is part of the AutoScalingGroup. This map specifies output parameters that are available once the AutoScalingGroup has been instantiated.\n* outputs_list: list - A list of the specified attribute of each individual resource that is part of the AutoScalingGroup. This list of attributes is available as an output once the AutoScalingGroup has been instantiated.\n* refs: list - A list of resource IDs for the resources in the group.\n* refs_map: map - A map of resource names to IDs for the resources in the group.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "An autoscaling group that can scale arbitrary resources.\n\nAn autoscaling group allows the creation of a desired count of similar\nresources, which are defined with the resource property in HOT format.\nIf there is a need to create many of the same resources (e.g. one\nhundred sets of Server, WaitCondition and WaitConditionHandle or even\nNeutron Nets), AutoScalingGroup is a convenient and easy way to do that.\n\n### Properties\n* **cooldown**: `integer` - Cooldown period, in seconds.\n* **desired_capacity**: `integer` - Desired initial number of resources.\n* **max_size**: `integer` - Maximum number of resources in the group.\n* **min_size**: `integer` - Minimum number of resources in the group.\n* **resource**: `map` - Resource definition for the resources in the group, in HOT format. The value of this property is the definition of a resource just as if it had been declared in the template itself.\n* **rolling_updates**: `map` - Policy for rolling updates for this scaling group.\n\n### Output Attributes\n* **current_size**: `integer` - The current size of AutoscalingResourceGroup.\n* **outputs**: `map` - A map of resource names to the specified attribute of each individual resource that is part of the AutoScalingGroup. This map specifies output parameters that are available once the AutoScalingGroup has been instantiated.\n* **outputs_list**: `list` - A list of the specified attribute of each individual resource that is part of the AutoScalingGroup. This list of attributes is available as an output once the AutoScalingGroup has been instantiated.\n* **refs**: `list` - A list of resource IDs for the resources in the group.\n* **refs_map**: `map` - A map of resource names to IDs for the resources in the group.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "description": "Resource definition for the resources in the group, in HOT format. The value of this property is the definition of a resource just as if it had been declared in the template itself.\ntype: map\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Resource definition for the resources in the group, in HOT format. The value of this property is the definition of a resource just as if it had been declared in the template itself.\n\n*type*: `map`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "min_size": {
                        "description": "Minimum number of resources in the group.\ntype: integer\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Minimum number of resources in the group.\n\n*type*: `integer`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "desired_capacity": {
                        "description": "Desired initial number of resources.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Desired initial number of resources.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "cooldown": {
                        "description": "Cooldown period, in seconds.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Cooldown period, in seconds.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "rolling_updates": {
                        "description": "Policy for rolling updates for this scaling group.\ntype: map\ndefault: {\n    \"min_in_service\": 0,\n    \"pause_time\": 0,\n    \"max_batch_size\": 1\n}\nupdate_allowed: true",
                        "markdownDescription": "Policy for rolling updates for this scaling group.\n\n*type*: `map`\n\n*default*: `{\n    \"min_in_service\": 0,\n    \"pause_time\": 0,\n    \"max_batch_size\": 1\n}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "min_in_service": {
                                "description": "The minimum number of resources in service while rolling updates are being executed.\ntype: integer\ndefault: 0",
                                "markdownDescription": "The minimum number of resources in service while rolling updates are being executed.\n\n*type*: `integer`\n\n*default*: `0`",
                                "oneOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "pause_time": {
                                "description": "The number of seconds to wait between batches of updates.\ntype: number\ndefault: 0",
                                "markdownDescription": "The number of seconds to wait between batches of updates.\n\n*type*: `number`\n\n*default*: `0`",
                                "oneOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "max_batch_size": {
                                "description": "The maximum number of resources to replace at once.\ntype: integer\ndefault: 1",
                                "markdownDescription": "The maximum number of resources to replace at once.\n\n*type*: `integer`\n\n*default*: `1`",
                                "oneOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "max_size": {
                        "description": "Maximum number of resources in the group.\ntype: integer\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Maximum number of resources in the group.\n\n*type*: `integer`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "resource",
                      "min_size",
                      "max_size"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::CloudConfig"
                    ],
                    "description": "A configuration resource for representing cloud-init cloud-config.\nThis resource allows cloud-config YAML to be defined and stored by the config API. Any intrinsic functions called in the config will be resolved before storing the result.\nThis resource will generally be referenced by OS::Nova::Server user_data, or OS::Heat::MultipartMime parts config. Since cloud-config is boot-only configuration, any changes to the definition will result in the replacement of all servers which reference it.\nProperties\n* cloud_config: map - Map representing the cloud-config data structure which will be formatted as YAML.\n\nOutput Attributes\n* config: string - The config value of the software config.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A configuration resource for representing cloud-init cloud-config.\n\nThis resource allows cloud-config YAML to be defined and stored by the\nconfig API. Any intrinsic functions called in the config will be resolved\nbefore storing the result.\n\nThis resource will generally be referenced by OS::Nova::Server user_data,\nor OS::Heat::MultipartMime parts config. Since cloud-config is boot-only\nconfiguration, any changes to the definition will result in the\nreplacement of all servers which reference it.\n\n### Properties\n* **cloud_config**: `map` - Map representing the cloud-config data structure which will be formatted as YAML.\n\n### Output Attributes\n* **config**: `string` - The config value of the software config.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "cloud_config": {
                        "description": "Map representing the cloud-config data structure which will be formatted as YAML.\ntype: map",
                        "markdownDescription": "Map representing the cloud-config data structure which will be formatted as YAML.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::DeployedServer"
                    ],
                    "description": "A resource for managing servers that are already deployed.\nA DeployedServer resource manages resources for servers that have been deployed externally from OpenStack. These servers can be associated with SoftwareDeployments for further orchestration via Heat.\nProperties\n* metadata: map - Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).\n* name: string - Server name.\n* software_config_transport: string - How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials. POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling.\n\nOutput Attributes\n* name: string - Name of the server.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for managing servers that are already deployed.\n\nA DeployedServer resource manages resources for servers that have been\ndeployed externally from OpenStack. These servers can be associated with\nSoftwareDeployments for further orchestration via Heat.\n\n### Properties\n* **metadata**: `map` - Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).\n* **name**: `string` - Server name.\n* **software_config_transport**: `string` - How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials. POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling.\n\n### Output Attributes\n* **name**: `string` - Name of the server.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "description": "Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).\ntype: map\nupdate_allowed: true",
                        "markdownDescription": "Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).\n\n*type*: `map`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Server name.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Server name.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "software_config_transport": {
                        "description": "How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials. POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling.\ntype: string\ndefault: \"POLL_SERVER_CFN\"\nupdate_allowed: true",
                        "markdownDescription": "How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials. POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling.\n\n*type*: `string`\n\n*default*: `\"POLL_SERVER_CFN\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::HARestarter"
                    ],
                    "description": "No description given\nProperties\n* InstanceId: string - Instance ID to be restarted.\n\nOutput Attributes\n* AlarmUrl: string - A signed url to handle the alarm (Heat extension).\n* show: map - Detailed information about resource.",
                    "markdownDescription": "No description given\n### Properties\n* **InstanceId**: `string` - Instance ID to be restarted.\n\n### Output Attributes\n* **AlarmUrl**: `string` - A signed url to handle the alarm (Heat extension).\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "InstanceId": {
                        "description": "Instance ID to be restarted.\ntype: string\nrequired: true",
                        "markdownDescription": "Instance ID to be restarted.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "InstanceId"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::InstanceGroup"
                    ],
                    "description": "An instance group that can scale arbitrary instances.\nA resource allowing for the creating number of defined with AWS::AutoScaling::LaunchConfiguration instances. Allows to associate scaled resources with loadbalancer resources.\nProperties\n* AvailabilityZones: list - Not Implemented.\n* LaunchConfigurationName: string - The reference to a LaunchConfiguration resource.\n* LoadBalancerNames: list - List of LoadBalancer resources.\n* Size: integer - Desired number of instances.\n* Tags: list - Tags to attach to this group.\n\nOutput Attributes\n* InstanceList: string - A comma-delimited list of server ip addresses. (Heat extension).\n* show: map - Detailed information about resource.",
                    "markdownDescription": "An instance group that can scale arbitrary instances.\n\nA resource allowing for the creating number of defined with\nAWS::AutoScaling::LaunchConfiguration instances. Allows to associate\nscaled resources with loadbalancer resources.\n\n### Properties\n* **AvailabilityZones**: `list` - Not Implemented.\n* **LaunchConfigurationName**: `string` - The reference to a LaunchConfiguration resource.\n* **LoadBalancerNames**: `list` - List of LoadBalancer resources.\n* **Size**: `integer` - Desired number of instances.\n* **Tags**: `list` - Tags to attach to this group.\n\n### Output Attributes\n* **InstanceList**: `string` - A comma-delimited list of server ip addresses. (Heat extension).\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "Tags": {
                        "description": "Tags to attach to this group.\ntype: list",
                        "markdownDescription": "Tags to attach to this group.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "Key": {
                                      "description": "Tag key.\ntype: string\nrequired: true",
                                      "markdownDescription": "Tag key.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "Value": {
                                      "description": "Tag value.\ntype: string\nrequired: true",
                                      "markdownDescription": "Tag value.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "Key",
                                    "Value"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "LoadBalancerNames": {
                        "description": "List of LoadBalancer resources.\ntype: list",
                        "markdownDescription": "List of LoadBalancer resources.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "AvailabilityZones": {
                        "description": "Not Implemented.\ntype: list\nrequired: true",
                        "markdownDescription": "Not Implemented.\n\n*type*: `list`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "LaunchConfigurationName": {
                        "description": "The reference to a LaunchConfiguration resource.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "The reference to a LaunchConfiguration resource.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "Size": {
                        "description": "Desired number of instances.\ntype: integer\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Desired number of instances.\n\n*type*: `integer`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "AvailabilityZones",
                      "LaunchConfigurationName",
                      "Size"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::MultipartMime"
                    ],
                    "description": "Assembles a collection of software configurations as a multi-part mime.\nParts in the message can be populated with inline configuration or references to other config resources. If the referenced resource is itself a valid multi-part mime message, that will be broken into parts and those parts appended to this message.\nThe resulting multi-part mime message will be stored by the configs API and can be referenced in properties such as OS::Nova::Server user_data.\nThis resource is generally used to build a list of cloud-init configuration elements including scripts and cloud-config. Since cloud-init is boot-only configuration, any changes to the definition will result in the replacement of all servers which reference it.\nProperties\n* parts: list - Parts belonging to this message.\n\nOutput Attributes\n* config: string - The config value of the software config.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Assembles a collection of software configurations as a multi-part mime.\n\nParts in the message can be populated with inline configuration or\nreferences to other config resources. If the referenced resource is itself\na valid multi-part mime message, that will be broken into parts and\nthose parts appended to this message.\n\nThe resulting multi-part mime message will be stored by the configs API\nand can be referenced in properties such as OS::Nova::Server user_data.\n\nThis resource is generally used to build a list of cloud-init\nconfiguration elements including scripts and cloud-config. Since\ncloud-init is boot-only configuration, any changes to the definition\nwill result in the replacement of all servers which reference it.\n\n### Properties\n* **parts**: `list` - Parts belonging to this message.\n\n### Output Attributes\n* **config**: `string` - The config value of the software config.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "parts": {
                        "description": "Parts belonging to this message.\ntype: list\ndefault: []",
                        "markdownDescription": "Parts belonging to this message.\n\n*type*: `list`\n\n*default*: `[]`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "subtype": {
                                      "description": "Optional subtype to specify with the type.\ntype: string",
                                      "markdownDescription": "Optional subtype to specify with the type.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "description": "Whether the part content is text or multipart.\ntype: string\ndefault: \"text\"",
                                      "markdownDescription": "Whether the part content is text or multipart.\n\n*type*: `string`\n\n*default*: `\"text\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "config": {
                                      "description": "Content of part to attach, either inline or by referencing the ID of another software config resource.\ntype: string\nrequired: true",
                                      "markdownDescription": "Content of part to attach, either inline or by referencing the ID of another software config resource.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "filename": {
                                      "description": "Optional filename to associate with part.\ntype: string",
                                      "markdownDescription": "Optional filename to associate with part.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "config"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::None"
                    ],
                    "description": "Enables easily disabling certain resources via the resource_registry.\nIt does nothing, but can effectively stub out any other resource because it will accept any properties and return any attribute (as None). Note this resource always does nothing on update (e.g it is not replaced even if a change to the stubbed resource properties would cause replacement).\nProperties\n\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Enables easily disabling certain resources via the resource_registry.\n\nIt does nothing, but can effectively stub out any other resource because it\nwill accept any properties and return any attribute (as None). Note this\nresource always does nothing on update (e.g it is not replaced even if a\nchange to the stubbed resource properties would cause replacement).\n\n### Properties\n\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {},
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::RandomString"
                    ],
                    "description": "A resource which generates a random string.\nThis is useful for configuring passwords and secrets on services. Random string can be generated from specified character sequences, which means that all characters will be randomly chosen from specified sequences, or with some classes, e.g. letterdigits, which means that all character will be randomly chosen from union of ascii letters and digits. Output string will be randomly generated string with specified length (or with length of 32, if length property doesn't specified).\nProperties\n* character_classes: list - A list of character class and their constraints to generate the random string from.\n* character_sequences: list - A list of character sequences and their constraints to generate the random string from.\n* length: integer - Length of the string to generate.\n* salt: string - Value which can be set or changed on stack update to trigger the resource for replacement with a new random string. The salt value itself is ignored by the random generator.\n\nOutput Attributes\n* show: map - Detailed information about resource.\n* value: string - The random string generated by this resource. This value is also available by referencing the resource.",
                    "markdownDescription": "A resource which generates a random string.\n\nThis is useful for configuring passwords and secrets on services. Random\nstring can be generated from specified character sequences, which means\nthat all characters will be randomly chosen from specified sequences, or\nwith some classes, e.g. letterdigits, which means that all character will\nbe randomly chosen from union of ascii letters and digits. Output string\nwill be randomly generated string with specified length (or with length of\n32, if length property doesn't specified).\n\n### Properties\n* **character_classes**: `list` - A list of character class and their constraints to generate the random string from.\n* **character_sequences**: `list` - A list of character sequences and their constraints to generate the random string from.\n* **length**: `integer` - Length of the string to generate.\n* **salt**: `string` - Value which can be set or changed on stack update to trigger the resource for replacement with a new random string. The salt value itself is ignored by the random generator.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource.\n* **value**: `string` - The random string generated by this resource. This value is also available by referencing the resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "length": {
                        "description": "Length of the string to generate.\ntype: integer\ndefault: 32",
                        "markdownDescription": "Length of the string to generate.\n\n*type*: `integer`\n\n*default*: `32`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "salt": {
                        "description": "Value which can be set or changed on stack update to trigger the resource for replacement with a new random string. The salt value itself is ignored by the random generator.\ntype: string",
                        "markdownDescription": "Value which can be set or changed on stack update to trigger the resource for replacement with a new random string. The salt value itself is ignored by the random generator.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "character_sequences": {
                        "description": "A list of character sequences and their constraints to generate the random string from.\ntype: list",
                        "markdownDescription": "A list of character sequences and their constraints to generate the random string from.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "sequence": {
                                      "description": "A character sequence and its corresponding min constraint to generate the random string from.\ntype: string\nrequired: true",
                                      "markdownDescription": "A character sequence and its corresponding min constraint to generate the random string from.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "min": {
                                      "description": "The minimum number of characters from this sequence that will be in the generated string.\ntype: integer\ndefault: 1",
                                      "markdownDescription": "The minimum number of characters from this sequence that will be in the generated string.\n\n*type*: `integer`\n\n*default*: `1`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "sequence"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "character_classes": {
                        "description": "A list of character class and their constraints to generate the random string from.\ntype: list\ndefault: [\n    {\n        \"class\": \"lettersdigits\",\n        \"min\": 1\n    }\n]",
                        "markdownDescription": "A list of character class and their constraints to generate the random string from.\n\n*type*: `list`\n\n*default*: `[\n    {\n        \"class\": \"lettersdigits\",\n        \"min\": 1\n    }\n]`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "class": {
                                      "description": "A character class and its corresponding min constraint to generate the random string from.\ntype: string\ndefault: \"lettersdigits\"",
                                      "markdownDescription": "A character class and its corresponding min constraint to generate the random string from.\n\n*type*: `string`\n\n*default*: `\"lettersdigits\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "min": {
                                      "description": "The minimum number of characters from this character class that will be in the generated string.\ntype: integer\ndefault: 1",
                                      "markdownDescription": "The minimum number of characters from this character class that will be in the generated string.\n\n*type*: `integer`\n\n*default*: `1`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::ResourceChain"
                    ],
                    "description": "Creates one or more resources with the same configuration.\nThe types of resources to be created are passed into the chain through the ``resources`` property. One resource will be created for each type listed. Each is passed the configuration specified under ``resource_properties``.\nThe ``concurrent`` property controls if the resources will be created concurrently. If omitted or set to false, each resource will be treated as having a dependency on the resource before it in the list.\nProperties\n* concurrent: boolean - If true, the resources in the chain will be created concurrently. If false or omitted, each resource will be treated as having a dependency on the previous resource in the list.\n* resource_properties: map - Properties to pass to each resource being created in the chain.\n* resources: list - The list of resource types to create. This list may contain type names or aliases defined in the resource registry. Specific template names are not supported.\n\nOutput Attributes\n* attributes: map - A map of resource names to the specified attribute of each individual resource.\n* refs: list - A list of resource IDs for the resources in the chain.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Creates one or more resources with the same configuration.\n\nThe types of resources to be created are passed into the chain\nthrough the ``resources`` property. One resource will be created for each\ntype listed. Each is passed the configuration specified\nunder ``resource_properties``.\n\nThe ``concurrent`` property controls if the resources will be created\nconcurrently. If omitted or set to false, each resource will be treated\nas having a dependency on the resource before it in the list.\n\n### Properties\n* **concurrent**: `boolean` - If true, the resources in the chain will be created concurrently. If false or omitted, each resource will be treated as having a dependency on the previous resource in the list.\n* **resource_properties**: `map` - Properties to pass to each resource being created in the chain.\n* **resources**: `list` - The list of resource types to create. This list may contain type names or aliases defined in the resource registry. Specific template names are not supported.\n\n### Output Attributes\n* **attributes**: `map` - A map of resource names to the specified attribute of each individual resource.\n* **refs**: `list` - A list of resource IDs for the resources in the chain.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "concurrent": {
                        "description": "If true, the resources in the chain will be created concurrently. If false or omitted, each resource will be treated as having a dependency on the previous resource in the list.\ntype: boolean\ndefault: false",
                        "markdownDescription": "If true, the resources in the chain will be created concurrently. If false or omitted, each resource will be treated as having a dependency on the previous resource in the list.\n\n*type*: `boolean`\n\n*default*: `false`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "resource_properties": {
                        "description": "Properties to pass to each resource being created in the chain.\ntype: map",
                        "markdownDescription": "Properties to pass to each resource being created in the chain.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "resources": {
                        "description": "The list of resource types to create. This list may contain type names or aliases defined in the resource registry. Specific template names are not supported.\ntype: list\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "The list of resource types to create. This list may contain type names or aliases defined in the resource registry. Specific template names are not supported.\n\n*type*: `list`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "resources"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::ResourceGroup"
                    ],
                    "description": "Creates one or more identically configured nested resources.\nIn addition to the `refs` attribute, this resource implements synthetic attributes that mirror those of the resources in the group. When getting an attribute from this resource, however, a list of attribute values for each resource in the group is returned. To get attribute values for a single resource in the group, synthetic attributes of the form `resource.{resource index}.{attribute name}` can be used. The resource ID of a particular resource in the group can be obtained via the synthetic attribute `resource.{resource index}`. Note, that if you get attribute without `{resource index}`, e.g. `[resource, {attribute_name}]`, you'll get a list of this attribute's value for all resources in group.\nWhile each resource in the group will be identically configured, this resource does allow for some index-based customization of the properties of the resources in the group. For example::\nresources: my_indexed_group: type: OS::Heat::ResourceGroup properties: count: 3 resource_def: type: OS::Nova::Server properties: # create a unique name for each server # using its index in the group name: my_server_%index% image: CentOS 6.5 flavor: 4GB Performance\nwould result in a group of three servers having the same image and flavor, but names of `my_server_0`, `my_server_1`, and `my_server_2`. The variable used for substitution can be customized by using the `index_var` property.\nProperties\n* count: integer - The number of resources to create.\n* index_var: string - A variable that this resource will use to replace with the current index of a given resource in the group. Can be used, for example, to customize the name property of grouped servers in order to differentiate them when listed with nova client.\n* removal_policies: list - Policies for removal of resources on update.\n* resource_def: map - Resource definition for the resources in the group. The value of this property is the definition of a resource just as if it had been declared in the template itself.\n\nOutput Attributes\n* attributes: map - A map of resource names to the specified attribute of each individual resource. Requires heat_template_version: 2014-10-16.\n* refs: list - A list of resource IDs for the resources in the group.\n* refs_map: map - A map of resource names to IDs for the resources in the group.\n* removed_rsrc_list: list - A list of removed resource names.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Creates one or more identically configured nested resources.\n\nIn addition to the `refs` attribute, this resource implements synthetic\nattributes that mirror those of the resources in the group. When\ngetting an attribute from this resource, however, a list of attribute\nvalues for each resource in the group is returned. To get attribute values\nfor a single resource in the group, synthetic attributes of the form\n`resource.{resource index}.{attribute name}` can be used. The resource ID\nof a particular resource in the group can be obtained via the synthetic\nattribute `resource.{resource index}`. Note, that if you get attribute\nwithout `{resource index}`, e.g. `[resource, {attribute_name}]`, you'll get\na list of this attribute's value for all resources in group.\n\nWhile each resource in the group will be identically configured, this\nresource does allow for some index-based customization of the properties\nof the resources in the group. For example::\n\nresources:\nmy_indexed_group:\ntype: OS::Heat::ResourceGroup\nproperties:\ncount: 3\nresource_def:\ntype: OS::Nova::Server\nproperties:\n# create a unique name for each server\n# using its index in the group\nname: my_server_%index%\nimage: CentOS 6.5\nflavor: 4GB Performance\n\nwould result in a group of three servers having the same image and flavor,\nbut names of `my_server_0`, `my_server_1`, and `my_server_2`. The variable\nused for substitution can be customized by using the `index_var` property.\n\n### Properties\n* **count**: `integer` - The number of resources to create.\n* **index_var**: `string` - A variable that this resource will use to replace with the current index of a given resource in the group. Can be used, for example, to customize the name property of grouped servers in order to differentiate them when listed with nova client.\n* **removal_policies**: `list` - Policies for removal of resources on update.\n* **resource_def**: `map` - Resource definition for the resources in the group. The value of this property is the definition of a resource just as if it had been declared in the template itself.\n\n### Output Attributes\n* **attributes**: `map` - A map of resource names to the specified attribute of each individual resource. Requires heat_template_version: 2014-10-16.\n* **refs**: `list` - A list of resource IDs for the resources in the group.\n* **refs_map**: `map` - A map of resource names to IDs for the resources in the group.\n* **removed_rsrc_list**: `list` - A list of removed resource names.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The number of resources to create.\ntype: integer\ndefault: 1\nupdate_allowed: true",
                        "markdownDescription": "The number of resources to create.\n\n*type*: `integer`\n\n*default*: `1`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "resource_def": {
                        "description": "Resource definition for the resources in the group. The value of this property is the definition of a resource just as if it had been declared in the template itself.\ntype: map\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Resource definition for the resources in the group. The value of this property is the definition of a resource just as if it had been declared in the template itself.\n\n*type*: `map`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the resources in the group.\ntype: string\nrequired: true",
                                "markdownDescription": "The type of the resources in the group.\n\n*type*: `string`\n\n*required*: `true`",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "properties": {
                                "description": "Property values for the resources in the group.\ntype: map",
                                "markdownDescription": "Property values for the resources in the group.\n\n*type*: `map`",
                                "oneOf": [
                                  {
                                    "$ref": "#/definitions/object-with-intrinsic-functions"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "metadata": {
                                "description": "Supplied metadata for the resources in the group.\ntype: map",
                                "markdownDescription": "Supplied metadata for the resources in the group.\n\n*type*: `map`",
                                "oneOf": [
                                  {
                                    "$ref": "#/definitions/object-with-intrinsic-functions"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "removal_policies": {
                        "description": "Policies for removal of resources on update.\ntype: list\ndefault: []\nupdate_allowed: true",
                        "markdownDescription": "Policies for removal of resources on update.\n\n*type*: `list`\n\n*default*: `[]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "Policy to be processed when doing an update which requires removal of specific resources.\ntype: map",
                              "markdownDescription": "Policy to be processed when doing an update which requires removal of specific resources.\n\n*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "resource_list": {
                                      "description": "List of resources to be removed when doing an update which requires removal of specific resources. The resource may be specified several ways: (1) The resource name, as in the nested stack, (2) The resource reference returned from get_resource in a template, as available via the 'refs' attribute. Note this is destructive on update when specified; even if the count is not being reduced, and once a resource name is removed, it's name is never reused in subsequent updates.\ntype: list\ndefault: []",
                                      "markdownDescription": "List of resources to be removed when doing an update which requires removal of specific resources. The resource may be specified several ways: (1) The resource name, as in the nested stack, (2) The resource reference returned from get_resource in a template, as available via the 'refs' attribute. Note this is destructive on update when specified; even if the count is not being reduced, and once a resource name is removed, it's name is never reused in subsequent updates.\n\n*type*: `list`\n\n*default*: `[]`",
                                      "oneOf": [
                                        {
                                          "$ref": "#/definitions/array-with-intrinsic-functions"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "index_var": {
                        "description": "A variable that this resource will use to replace with the current index of a given resource in the group. Can be used, for example, to customize the name property of grouped servers in order to differentiate them when listed with nova client.\ntype: string\ndefault: \"%index%\"",
                        "markdownDescription": "A variable that this resource will use to replace with the current index of a given resource in the group. Can be used, for example, to customize the name property of grouped servers in order to differentiate them when listed with nova client.\n\n*type*: `string`\n\n*default*: `\"%index%\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "resource_def"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::ScalingPolicy"
                    ],
                    "description": "A resource to manage scaling of `OS::Heat::AutoScalingGroup`.\n**Note** while it may incidentally support `AWS::AutoScaling::AutoScalingGroup` for now, please don't use it for that purpose and use `AWS::AutoScaling::ScalingPolicy` instead.\nResource to manage scaling for `OS::Heat::AutoScalingGroup`, i.e. define which metric should be scaled and scaling adjustment, set cooldown etc.\nProperties\n* adjustment_type: string - Type of adjustment (absolute or percentage).\n* auto_scaling_group_id: string - AutoScaling group ID to apply policy to.\n* cooldown: number - Cooldown period, in seconds.\n* min_adjustment_step: integer - Minimum number of resources that are added or removed when the AutoScaling group scales up or down. This can be used only when specifying percent_change_in_capacity for the adjustment_type property.\n* scaling_adjustment: number - Size of adjustment.\n\nOutput Attributes\n* alarm_url: string - A signed url to handle the alarm.\n* show: map - Detailed information about resource.\n* signal_url: string - A url to handle the alarm using native API.",
                    "markdownDescription": "A resource to manage scaling of `OS::Heat::AutoScalingGroup`.\n\n**Note** while it may incidentally support\n`AWS::AutoScaling::AutoScalingGroup` for now, please don't use it for that\npurpose and use `AWS::AutoScaling::ScalingPolicy` instead.\n\nResource to manage scaling for `OS::Heat::AutoScalingGroup`, i.e. define\nwhich metric should be scaled and scaling adjustment, set cooldown etc.\n\n### Properties\n* **adjustment_type**: `string` - Type of adjustment (absolute or percentage).\n* **auto_scaling_group_id**: `string` - AutoScaling group ID to apply policy to.\n* **cooldown**: `number` - Cooldown period, in seconds.\n* **min_adjustment_step**: `integer` - Minimum number of resources that are added or removed when the AutoScaling group scales up or down. This can be used only when specifying percent_change_in_capacity for the adjustment_type property.\n* **scaling_adjustment**: `number` - Size of adjustment.\n\n### Output Attributes\n* **alarm_url**: `string` - A signed url to handle the alarm.\n* **show**: `map` - Detailed information about resource.\n* **signal_url**: `string` - A url to handle the alarm using native API."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "auto_scaling_group_id": {
                        "description": "AutoScaling group ID to apply policy to.\ntype: string\nrequired: true",
                        "markdownDescription": "AutoScaling group ID to apply policy to.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "adjustment_type": {
                        "description": "Type of adjustment (absolute or percentage).\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Type of adjustment (absolute or percentage).\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "min_adjustment_step": {
                        "description": "Minimum number of resources that are added or removed when the AutoScaling group scales up or down. This can be used only when specifying percent_change_in_capacity for the adjustment_type property.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Minimum number of resources that are added or removed when the AutoScaling group scales up or down. This can be used only when specifying percent_change_in_capacity for the adjustment_type property.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "scaling_adjustment": {
                        "description": "Size of adjustment.\ntype: number\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Size of adjustment.\n\n*type*: `number`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "number"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "cooldown": {
                        "description": "Cooldown period, in seconds.\ntype: number\nupdate_allowed: true",
                        "markdownDescription": "Cooldown period, in seconds.\n\n*type*: `number`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "number"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "auto_scaling_group_id",
                      "adjustment_type",
                      "scaling_adjustment"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::SoftwareComponent"
                    ],
                    "description": "A resource for describing and storing a software component.\nThis resource is similar to OS::Heat::SoftwareConfig. In contrast to SoftwareConfig which allows for storing only one configuration (e.g. one script), SoftwareComponent allows for storing multiple configurations to address handling of all lifecycle hooks (CREATE, UPDATE, SUSPEND, RESUME, DELETE) for a software component in one place.\nThis resource is backed by the persistence layer and the API of the SoftwareConfig resource, and only adds handling for the additional 'configs' property and attribute.\nProperties\n* configs: list - The list of configurations for the different lifecycle actions of the represented software component.\n* inputs: list - Schema representing the inputs that this software config is expecting.\n* options: map - Map containing options specific to the configuration management tool used by this resource.\n* outputs: list - Schema representing the outputs that this software config will produce.\n\nOutput Attributes\n* config: string - The config value of the software config.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for describing and storing a software component.\n\nThis resource is similar to OS::Heat::SoftwareConfig. In contrast to\nSoftwareConfig which allows for storing only one configuration (e.g. one\nscript), SoftwareComponent allows for storing multiple configurations to\naddress handling of all lifecycle hooks (CREATE, UPDATE, SUSPEND, RESUME,\nDELETE) for a software component in one place.\n\nThis resource is backed by the persistence layer and the API of the\nSoftwareConfig resource, and only adds handling for the additional\n'configs' property and attribute.\n\n### Properties\n* **configs**: `list` - The list of configurations for the different lifecycle actions of the represented software component.\n* **inputs**: `list` - Schema representing the inputs that this software config is expecting.\n* **options**: `map` - Map containing options specific to the configuration management tool used by this resource.\n* **outputs**: `list` - Schema representing the outputs that this software config will produce.\n\n### Output Attributes\n* **config**: `string` - The config value of the software config.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "inputs": {
                        "description": "Schema representing the inputs that this software config is expecting.\ntype: list",
                        "markdownDescription": "Schema representing the inputs that this software config is expecting.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "default": {
                                      "description": "Default value for the input if none is specified.\ntype: string",
                                      "markdownDescription": "Default value for the input if none is specified.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "description": "Type of the value of the input.\ntype: string\ndefault: \"String\"",
                                      "markdownDescription": "Type of the value of the input.\n\n*type*: `string`\n\n*default*: `\"String\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the input.\ntype: string\nrequired: true",
                                      "markdownDescription": "Name of the input.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "replace_on_change": {
                                      "description": "Replace the deployment instead of updating it when the input value changes.\ntype: boolean\ndefault: false",
                                      "markdownDescription": "Replace the deployment instead of updating it when the input value changes.\n\n*type*: `boolean`\n\n*default*: `false`",
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "description": {
                                      "description": "Description of the input.\ntype: string",
                                      "markdownDescription": "Description of the input.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "configs": {
                        "description": "The list of configurations for the different lifecycle actions of the represented software component.\ntype: list\nrequired: true",
                        "markdownDescription": "The list of configurations for the different lifecycle actions of the represented software component.\n\n*type*: `list`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "tool": {
                                      "description": "The configuration tool used to actually apply the configuration on a server. This string property has to be understood by in-instance tools running inside deployed servers.\ntype: string\nrequired: true",
                                      "markdownDescription": "The configuration tool used to actually apply the configuration on a server. This string property has to be understood by in-instance tools running inside deployed servers.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "config": {
                                      "description": "Configuration script or manifest which specifies what actual configuration is performed.\ntype: string",
                                      "markdownDescription": "Configuration script or manifest which specifies what actual configuration is performed.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "actions": {
                                      "description": "Lifecycle actions to which the configuration applies. The string values provided for this property can include the standard resource actions CREATE, DELETE, UPDATE, SUSPEND and RESUME supported by Heat.\ntype: list\ndefault: [\n    \"CREATE\",\n    \"UPDATE\"\n]",
                                      "markdownDescription": "Lifecycle actions to which the configuration applies. The string values provided for this property can include the standard resource actions CREATE, DELETE, UPDATE, SUSPEND and RESUME supported by Heat.\n\n*type*: `list`\n\n*default*: `[\n    \"CREATE\",\n    \"UPDATE\"\n]`",
                                      "oneOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "description": "type: string",
                                            "markdownDescription": "*type*: `string`",
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "$ref": "#/definitions/intrinsic-function"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "tool"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "options": {
                        "description": "Map containing options specific to the configuration management tool used by this resource.\ntype: map",
                        "markdownDescription": "Map containing options specific to the configuration management tool used by this resource.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "outputs": {
                        "description": "Schema representing the outputs that this software config will produce.\ntype: list",
                        "markdownDescription": "Schema representing the outputs that this software config will produce.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Type of the value of the output.\ntype: string\ndefault: \"String\"",
                                      "markdownDescription": "Type of the value of the output.\n\n*type*: `string`\n\n*default*: `\"String\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the output.\ntype: string\nrequired: true",
                                      "markdownDescription": "Name of the output.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "error_output": {
                                      "description": "Denotes that the deployment is in an error state if this output has a value.\ntype: boolean\ndefault: false",
                                      "markdownDescription": "Denotes that the deployment is in an error state if this output has a value.\n\n*type*: `boolean`\n\n*default*: `false`",
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "description": {
                                      "description": "Description of the output.\ntype: string",
                                      "markdownDescription": "Description of the output.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "configs"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::SoftwareConfig"
                    ],
                    "description": "A resource for describing and storing software configuration.\nThe software_configs API which backs this resource creates immutable configs, so any change to the template resource definition will result in a new config being created, and the old one being deleted.\nConfigs can be defined in the same template which uses them, or they can be created in one stack, and passed to another stack via a parameter.\nA config resource can be referenced in other resource properties which are config-aware. This includes the properties OS::Nova::Server user_data, OS::Heat::SoftwareDeployment config and OS::Heat::MultipartMime parts config.\nAlong with the config script itself, this resource can define schemas for inputs and outputs which the config script is expected to consume and produce. Inputs and outputs are optional and will map to concepts which are specific to the configuration tool being used.\nProperties\n* config: string - Configuration script or manifest which specifies what actual configuration is performed.\n* group: string - Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.\n* inputs: list - Schema representing the inputs that this software config is expecting.\n* options: map - Map containing options specific to the configuration management tool used by this resource.\n* outputs: list - Schema representing the outputs that this software config will produce.\n\nOutput Attributes\n* config: string - The config value of the software config.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for describing and storing software configuration.\n\nThe software_configs API which backs this resource creates immutable\nconfigs, so any change to the template resource definition will result\nin a new config being created, and the old one being deleted.\n\nConfigs can be defined in the same template which uses them, or they can\nbe created in one stack, and passed to another stack via a parameter.\n\nA config resource can be referenced in other resource properties which\nare config-aware. This includes the properties OS::Nova::Server user_data,\nOS::Heat::SoftwareDeployment config and OS::Heat::MultipartMime parts\nconfig.\n\nAlong with the config script itself, this resource can define schemas for\ninputs and outputs which the config script is expected to consume and\nproduce. Inputs and outputs are optional and will map to concepts which\nare specific to the configuration tool being used.\n\n### Properties\n* **config**: `string` - Configuration script or manifest which specifies what actual configuration is performed.\n* **group**: `string` - Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.\n* **inputs**: `list` - Schema representing the inputs that this software config is expecting.\n* **options**: `map` - Map containing options specific to the configuration management tool used by this resource.\n* **outputs**: `list` - Schema representing the outputs that this software config will produce.\n\n### Output Attributes\n* **config**: `string` - The config value of the software config.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "inputs": {
                        "description": "Schema representing the inputs that this software config is expecting.\ntype: list",
                        "markdownDescription": "Schema representing the inputs that this software config is expecting.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "default": {
                                      "description": "Default value for the input if none is specified.\ntype: string",
                                      "markdownDescription": "Default value for the input if none is specified.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "description": "Type of the value of the input.\ntype: string\ndefault: \"String\"",
                                      "markdownDescription": "Type of the value of the input.\n\n*type*: `string`\n\n*default*: `\"String\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the input.\ntype: string\nrequired: true",
                                      "markdownDescription": "Name of the input.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "replace_on_change": {
                                      "description": "Replace the deployment instead of updating it when the input value changes.\ntype: boolean\ndefault: false",
                                      "markdownDescription": "Replace the deployment instead of updating it when the input value changes.\n\n*type*: `boolean`\n\n*default*: `false`",
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "description": {
                                      "description": "Description of the input.\ntype: string",
                                      "markdownDescription": "Description of the input.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "config": {
                        "description": "Configuration script or manifest which specifies what actual configuration is performed.\ntype: string",
                        "markdownDescription": "Configuration script or manifest which specifies what actual configuration is performed.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "options": {
                        "description": "Map containing options specific to the configuration management tool used by this resource.\ntype: map",
                        "markdownDescription": "Map containing options specific to the configuration management tool used by this resource.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "outputs": {
                        "description": "Schema representing the outputs that this software config will produce.\ntype: list",
                        "markdownDescription": "Schema representing the outputs that this software config will produce.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Type of the value of the output.\ntype: string\ndefault: \"String\"",
                                      "markdownDescription": "Type of the value of the output.\n\n*type*: `string`\n\n*default*: `\"String\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the output.\ntype: string\nrequired: true",
                                      "markdownDescription": "Name of the output.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "error_output": {
                                      "description": "Denotes that the deployment is in an error state if this output has a value.\ntype: boolean\ndefault: false",
                                      "markdownDescription": "Denotes that the deployment is in an error state if this output has a value.\n\n*type*: `boolean`\n\n*default*: `false`",
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "description": {
                                      "description": "Description of the output.\ntype: string",
                                      "markdownDescription": "Description of the output.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "group": {
                        "description": "Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.\ntype: string\ndefault: \"Heat::Ungrouped\"",
                        "markdownDescription": "Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.\n\n*type*: `string`\n\n*default*: `\"Heat::Ungrouped\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::SoftwareDeployment"
                    ],
                    "description": "This resource associates a server with some configuration.\nThe configuration is to be deployed to that server.\nA deployment allows input values to be specified which map to the inputs schema defined in the config resource. These input values are interpreted by the configuration tool in a tool-specific manner.\nWhenever this resource goes to an IN_PROGRESS state, it creates an ephemeral config that includes the inputs values plus a number of extra inputs which have names prefixed with deploy_. The extra inputs relate to the current state of the stack, along with the information and credentials required to signal back the deployment results.\nUnless signal_transport=NO_SIGNAL, this resource will remain in an IN_PROGRESS state until the server signals it with the output values for that deployment. Those output values are then available as resource attributes, along with the default attributes deploy_stdout, deploy_stderr and deploy_status_code.\nSpecifying actions other than the default CREATE and UPDATE will result in the deployment being triggered in those actions. For example this would allow cleanup configuration to be performed during actions SUSPEND and DELETE. A config could be designed to only work with some specific actions, or a config can read the value of the deploy_action input to allow conditional logic to perform different configuration for different actions.\nProperties\n* actions: list - Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n* config: string - ID of software configuration resource to execute when applying to the server.\n* input_values: map - Input values to apply to the software configuration on this server.\n* name: string - Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n* server: string - ID of resource to apply configuration to. Normally this should be a Nova server ID.\n* signal_transport: string - How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\nOutput Attributes\n* deploy_status_code: string - Returned status code from the configuration execution.\n* deploy_stderr: string - Captured stderr from the configuration execution.\n* deploy_stdout: string - Captured stdout from the configuration execution.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "This resource associates a server with some configuration.\n\nThe configuration is to be deployed to that server.\n\nA deployment allows input values to be specified which map to the inputs\nschema defined in the config resource. These input values are interpreted\nby the configuration tool in a tool-specific manner.\n\nWhenever this resource goes to an IN_PROGRESS state, it creates an\nephemeral config that includes the inputs values plus a number of extra\ninputs which have names prefixed with deploy_. The extra inputs relate\nto the current state of the stack, along with the information and\ncredentials required to signal back the deployment results.\n\nUnless signal_transport=NO_SIGNAL, this resource will remain in an\nIN_PROGRESS state until the server signals it with the output values\nfor that deployment. Those output values are then available as resource\nattributes, along with the default attributes deploy_stdout,\ndeploy_stderr and deploy_status_code.\n\nSpecifying actions other than the default CREATE and UPDATE will result\nin the deployment being triggered in those actions. For example this would\nallow cleanup configuration to be performed during actions SUSPEND and\nDELETE. A config could be designed to only work with some specific\nactions, or a config can read the value of the deploy_action input to\nallow conditional logic to perform different configuration for different\nactions.\n\n### Properties\n* **actions**: `list` - Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n* **config**: `string` - ID of software configuration resource to execute when applying to the server.\n* **input_values**: `map` - Input values to apply to the software configuration on this server.\n* **name**: `string` - Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n* **server**: `string` - ID of resource to apply configuration to. Normally this should be a Nova server ID.\n* **signal_transport**: `string` - How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\n### Output Attributes\n* **deploy_status_code**: `string` - Returned status code from the configuration execution.\n* **deploy_stderr**: `string` - Captured stderr from the configuration execution.\n* **deploy_stdout**: `string` - Captured stdout from the configuration execution.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "signal_transport": {
                        "description": "How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\ntype: string\ndefault: \"CFN_SIGNAL\"",
                        "markdownDescription": "How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\n*type*: `string`\n\n*default*: `\"CFN_SIGNAL\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "actions": {
                        "description": "Which lifecycle actions of the deployment resource will result in this deployment being triggered.\ntype: list\ndefault: [\n    \"CREATE\",\n    \"UPDATE\"\n]\nupdate_allowed: true",
                        "markdownDescription": "Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n\n*type*: `list`\n\n*default*: `[\n    \"CREATE\",\n    \"UPDATE\"\n]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "server": {
                        "description": "ID of resource to apply configuration to. Normally this should be a Nova server ID.\ntype: string\nrequired: true",
                        "markdownDescription": "ID of resource to apply configuration to. Normally this should be a Nova server ID.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "input_values": {
                        "description": "Input values to apply to the software configuration on this server.\ntype: map\nupdate_allowed: true",
                        "markdownDescription": "Input values to apply to the software configuration on this server.\n\n*type*: `map`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "config": {
                        "description": "ID of software configuration resource to execute when applying to the server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "ID of software configuration resource to execute when applying to the server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "server"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::SoftwareDeploymentGroup"
                    ],
                    "description": "This resource associates a group of servers with some configuration.\nThe configuration is to be deployed to all servers in the group.\nThe properties work in a similar way to OS::Heat::SoftwareDeployment, and in addition to the attributes documented, you may pass any attribute supported by OS::Heat::SoftwareDeployment, including those exposing arbitrary outputs, and return a map of deployment names to the specified attribute.\nProperties\n* actions: list - Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n* config: string - ID of software configuration resource to execute when applying to the server.\n* input_values: map - Input values to apply to the software configuration on this server.\n* name: string - Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n* servers: map - A map of names and server IDs to apply configuration to. The name is arbitrary and is used as the Heat resource name for the corresponding deployment.\n* signal_transport: string - How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\nOutput Attributes\n* deploy_status_codes: map - A map of Nova names and returned status code from the configuration execution.\n* deploy_stderrs: map - A map of Nova names and captured stderrs from the configuration execution to each server.\n* deploy_stdouts: map - A map of Nova names and captured stdouts from the configuration execution to each server.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "This resource associates a group of servers with some configuration.\n\nThe configuration is to be deployed to all servers in the group.\n\nThe properties work in a similar way to OS::Heat::SoftwareDeployment,\nand in addition to the attributes documented, you may pass any\nattribute supported by OS::Heat::SoftwareDeployment, including those\nexposing arbitrary outputs, and return a map of deployment names to\nthe specified attribute.\n\n### Properties\n* **actions**: `list` - Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n* **config**: `string` - ID of software configuration resource to execute when applying to the server.\n* **input_values**: `map` - Input values to apply to the software configuration on this server.\n* **name**: `string` - Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n* **servers**: `map` - A map of names and server IDs to apply configuration to. The name is arbitrary and is used as the Heat resource name for the corresponding deployment.\n* **signal_transport**: `string` - How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\n### Output Attributes\n* **deploy_status_codes**: `map` - A map of Nova names and returned status code from the configuration execution.\n* **deploy_stderrs**: `map` - A map of Nova names and captured stderrs from the configuration execution to each server.\n* **deploy_stdouts**: `map` - A map of Nova names and captured stdouts from the configuration execution to each server.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "signal_transport": {
                        "description": "How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\ntype: string\ndefault: \"CFN_SIGNAL\"",
                        "markdownDescription": "How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\n*type*: `string`\n\n*default*: `\"CFN_SIGNAL\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "actions": {
                        "description": "Which lifecycle actions of the deployment resource will result in this deployment being triggered.\ntype: list\ndefault: [\n    \"CREATE\",\n    \"UPDATE\"\n]\nupdate_allowed: true",
                        "markdownDescription": "Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n\n*type*: `list`\n\n*default*: `[\n    \"CREATE\",\n    \"UPDATE\"\n]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "servers": {
                        "description": "A map of names and server IDs to apply configuration to. The name is arbitrary and is used as the Heat resource name for the corresponding deployment.\ntype: map\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "A map of names and server IDs to apply configuration to. The name is arbitrary and is used as the Heat resource name for the corresponding deployment.\n\n*type*: `map`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "input_values": {
                        "description": "Input values to apply to the software configuration on this server.\ntype: map\nupdate_allowed: true",
                        "markdownDescription": "Input values to apply to the software configuration on this server.\n\n*type*: `map`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "config": {
                        "description": "ID of software configuration resource to execute when applying to the server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "ID of software configuration resource to execute when applying to the server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "servers"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::Stack"
                    ],
                    "description": "A Resource representing a stack.\nA resource that allowing for the creating stack, where should be defined stack template in HOT format, parameters (if template has any parameters with no default value), and timeout of creating. After creating current stack will have remote stack.\nProperties\n* context: map - Context for this stack.\n* parameters: map - Set of parameters passed to this stack.\n* template: string - Template that specifies the stack to be created as a resource.\n* timeout: integer - Number of minutes to wait for this stack creation.\n\nOutput Attributes\n* outputs: map - A dict of key-value pairs output from the stack.\n* show: map - Detailed information about resource.\n* stack_name: string - Name of the stack.",
                    "markdownDescription": "A Resource representing a stack.\n\nA resource that allowing for the creating stack, where should be defined\nstack template in HOT format, parameters (if template has any parameters\nwith no default value), and timeout of creating. After creating current\nstack will have remote stack.\n\n### Properties\n* **context**: `map` - Context for this stack.\n* **parameters**: `map` - Set of parameters passed to this stack.\n* **template**: `string` - Template that specifies the stack to be created as a resource.\n* **timeout**: `integer` - Number of minutes to wait for this stack creation.\n\n### Output Attributes\n* **outputs**: `map` - A dict of key-value pairs output from the stack.\n* **show**: `map` - Detailed information about resource.\n* **stack_name**: `string` - Name of the stack."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "context": {
                        "description": "Context for this stack.\ntype: map",
                        "markdownDescription": "Context for this stack.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "region_name": {
                                "description": "Region name in which this stack will be created.\ntype: string\nrequired: true",
                                "markdownDescription": "Region name in which this stack will be created.\n\n*type*: `string`\n\n*required*: `true`",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "region_name"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "parameters": {
                        "description": "Set of parameters passed to this stack.\ntype: map\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Set of parameters passed to this stack.\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "timeout": {
                        "description": "Number of minutes to wait for this stack creation.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Number of minutes to wait for this stack creation.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "template": {
                        "description": "Template that specifies the stack to be created as a resource.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Template that specifies the stack to be created as a resource.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "template"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::StructuredConfig"
                    ],
                    "description": "A resource which has same logic with OS::Heat::SoftwareConfig.\nThis resource is like OS::Heat::SoftwareConfig except that the config property is represented by a Map rather than a String.\nThis is useful for configuration tools which use YAML or JSON as their configuration syntax. The resulting configuration is transferred, stored and returned by the software_configs API as parsed JSON.\nProperties\n* config: map - Map representing the configuration data structure which will be serialized to JSON format.\n* group: string - Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.\n* inputs: list - Schema representing the inputs that this software config is expecting.\n* options: map - Map containing options specific to the configuration management tool used by this resource.\n* outputs: list - Schema representing the outputs that this software config will produce.\n\nOutput Attributes\n* config: string - The config value of the software config.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource which has same logic with OS::Heat::SoftwareConfig.\n\nThis resource is like OS::Heat::SoftwareConfig except that the config\nproperty is represented by a Map rather than a String.\n\nThis is useful for configuration tools which use YAML or JSON as their\nconfiguration syntax. The resulting configuration is transferred,\nstored and returned by the software_configs API as parsed JSON.\n\n### Properties\n* **config**: `map` - Map representing the configuration data structure which will be serialized to JSON format.\n* **group**: `string` - Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.\n* **inputs**: `list` - Schema representing the inputs that this software config is expecting.\n* **options**: `map` - Map containing options specific to the configuration management tool used by this resource.\n* **outputs**: `list` - Schema representing the outputs that this software config will produce.\n\n### Output Attributes\n* **config**: `string` - The config value of the software config.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "inputs": {
                        "description": "Schema representing the inputs that this software config is expecting.\ntype: list",
                        "markdownDescription": "Schema representing the inputs that this software config is expecting.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "default": {
                                      "description": "Default value for the input if none is specified.\ntype: string",
                                      "markdownDescription": "Default value for the input if none is specified.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "description": "Type of the value of the input.\ntype: string\ndefault: \"String\"",
                                      "markdownDescription": "Type of the value of the input.\n\n*type*: `string`\n\n*default*: `\"String\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the input.\ntype: string\nrequired: true",
                                      "markdownDescription": "Name of the input.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "replace_on_change": {
                                      "description": "Replace the deployment instead of updating it when the input value changes.\ntype: boolean\ndefault: false",
                                      "markdownDescription": "Replace the deployment instead of updating it when the input value changes.\n\n*type*: `boolean`\n\n*default*: `false`",
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "description": {
                                      "description": "Description of the input.\ntype: string",
                                      "markdownDescription": "Description of the input.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "config": {
                        "description": "Map representing the configuration data structure which will be serialized to JSON format.\ntype: map",
                        "markdownDescription": "Map representing the configuration data structure which will be serialized to JSON format.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "options": {
                        "description": "Map containing options specific to the configuration management tool used by this resource.\ntype: map",
                        "markdownDescription": "Map containing options specific to the configuration management tool used by this resource.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "outputs": {
                        "description": "Schema representing the outputs that this software config will produce.\ntype: list",
                        "markdownDescription": "Schema representing the outputs that this software config will produce.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Type of the value of the output.\ntype: string\ndefault: \"String\"",
                                      "markdownDescription": "Type of the value of the output.\n\n*type*: `string`\n\n*default*: `\"String\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the output.\ntype: string\nrequired: true",
                                      "markdownDescription": "Name of the output.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "error_output": {
                                      "description": "Denotes that the deployment is in an error state if this output has a value.\ntype: boolean\ndefault: false",
                                      "markdownDescription": "Denotes that the deployment is in an error state if this output has a value.\n\n*type*: `boolean`\n\n*default*: `false`",
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "description": {
                                      "description": "Description of the output.\ntype: string",
                                      "markdownDescription": "Description of the output.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "group": {
                        "description": "Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.\ntype: string\ndefault: \"Heat::Ungrouped\"",
                        "markdownDescription": "Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.\n\n*type*: `string`\n\n*default*: `\"Heat::Ungrouped\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::StructuredDeployment"
                    ],
                    "description": "A resource which has same logic with OS::Heat::SoftwareDeployment.\nA deployment resource like OS::Heat::SoftwareDeployment, but which performs input value substitution on the config defined by a OS::Heat::StructuredConfig resource.\nSome configuration tools have no concept of inputs, so the input value substitution needs to occur in the deployment resource. An example of this is the JSON metadata consumed by the cfn-init tool.\nWhere the config contains {get_input: input_name} this will be substituted with the value of input_name in this resource's input_values. If get_input needs to be passed through to the substituted configuration then a different input_key property value can be specified.\nProperties\n* actions: list - Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n* config: string - ID of software configuration resource to execute when applying to the server.\n* input_key: string - Name of key to use for substituting inputs during deployment.\n* input_values: map - Input values to apply to the software configuration on this server.\n* input_values_validate: string - Perform a check on the input values passed to verify that each required input has a corresponding value. When the property is set to STRICT and no value is passed, an exception is raised.\n* name: string - Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n* server: string - ID of resource to apply configuration to. Normally this should be a Nova server ID.\n* signal_transport: string - How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\nOutput Attributes\n* deploy_status_code: string - Returned status code from the configuration execution.\n* deploy_stderr: string - Captured stderr from the configuration execution.\n* deploy_stdout: string - Captured stdout from the configuration execution.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource which has same logic with OS::Heat::SoftwareDeployment.\n\nA deployment resource like OS::Heat::SoftwareDeployment, but which\nperforms input value substitution on the config defined by a\nOS::Heat::StructuredConfig resource.\n\nSome configuration tools have no concept of inputs, so the input value\nsubstitution needs to occur in the deployment resource. An example of this\nis the JSON metadata consumed by the cfn-init tool.\n\nWhere the config contains {get_input: input_name} this will be substituted\nwith the value of input_name in this resource's input_values. If get_input\nneeds to be passed through to the substituted configuration then a\ndifferent input_key property value can be specified.\n\n### Properties\n* **actions**: `list` - Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n* **config**: `string` - ID of software configuration resource to execute when applying to the server.\n* **input_key**: `string` - Name of key to use for substituting inputs during deployment.\n* **input_values**: `map` - Input values to apply to the software configuration on this server.\n* **input_values_validate**: `string` - Perform a check on the input values passed to verify that each required input has a corresponding value. When the property is set to STRICT and no value is passed, an exception is raised.\n* **name**: `string` - Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n* **server**: `string` - ID of resource to apply configuration to. Normally this should be a Nova server ID.\n* **signal_transport**: `string` - How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\n### Output Attributes\n* **deploy_status_code**: `string` - Returned status code from the configuration execution.\n* **deploy_stderr**: `string` - Captured stderr from the configuration execution.\n* **deploy_stdout**: `string` - Captured stdout from the configuration execution.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "input_key": {
                        "description": "Name of key to use for substituting inputs during deployment.\ntype: string\ndefault: \"get_input\"",
                        "markdownDescription": "Name of key to use for substituting inputs during deployment.\n\n*type*: `string`\n\n*default*: `\"get_input\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "signal_transport": {
                        "description": "How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\ntype: string\ndefault: \"CFN_SIGNAL\"",
                        "markdownDescription": "How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\n*type*: `string`\n\n*default*: `\"CFN_SIGNAL\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "actions": {
                        "description": "Which lifecycle actions of the deployment resource will result in this deployment being triggered.\ntype: list\ndefault: [\n    \"CREATE\",\n    \"UPDATE\"\n]\nupdate_allowed: true",
                        "markdownDescription": "Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n\n*type*: `list`\n\n*default*: `[\n    \"CREATE\",\n    \"UPDATE\"\n]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "input_values_validate": {
                        "description": "Perform a check on the input values passed to verify that each required input has a corresponding value. When the property is set to STRICT and no value is passed, an exception is raised.\ntype: string\ndefault: \"LAX\"",
                        "markdownDescription": "Perform a check on the input values passed to verify that each required input has a corresponding value. When the property is set to STRICT and no value is passed, an exception is raised.\n\n*type*: `string`\n\n*default*: `\"LAX\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "input_values": {
                        "description": "Input values to apply to the software configuration on this server.\ntype: map\nupdate_allowed: true",
                        "markdownDescription": "Input values to apply to the software configuration on this server.\n\n*type*: `map`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "server": {
                        "description": "ID of resource to apply configuration to. Normally this should be a Nova server ID.\ntype: string\nrequired: true",
                        "markdownDescription": "ID of resource to apply configuration to. Normally this should be a Nova server ID.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "config": {
                        "description": "ID of software configuration resource to execute when applying to the server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "ID of software configuration resource to execute when applying to the server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "server"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::StructuredDeploymentGroup"
                    ],
                    "description": "This resource associates a group of servers with some configuration.\nThis resource works similar as OS::Heat::SoftwareDeploymentGroup, but for structured resources.\nProperties\n* actions: list - Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n* config: string - ID of software configuration resource to execute when applying to the server.\n* input_key: string - Name of key to use for substituting inputs during deployment.\n* input_values: map - Input values to apply to the software configuration on this server.\n* input_values_validate: string - Perform a check on the input values passed to verify that each required input has a corresponding value. When the property is set to STRICT and no value is passed, an exception is raised.\n* name: string - Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n* servers: map - A map of names and server IDs to apply configuration to. The name is arbitrary and is used as the Heat resource name for the corresponding deployment.\n* signal_transport: string - How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\nOutput Attributes\n* deploy_status_codes: map - A map of Nova names and returned status code from the configuration execution.\n* deploy_stderrs: map - A map of Nova names and captured stderrs from the configuration execution to each server.\n* deploy_stdouts: map - A map of Nova names and captured stdouts from the configuration execution to each server.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "This resource associates a group of servers with some configuration.\n\nThis resource works similar as OS::Heat::SoftwareDeploymentGroup, but for\nstructured resources.\n\n### Properties\n* **actions**: `list` - Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n* **config**: `string` - ID of software configuration resource to execute when applying to the server.\n* **input_key**: `string` - Name of key to use for substituting inputs during deployment.\n* **input_values**: `map` - Input values to apply to the software configuration on this server.\n* **input_values_validate**: `string` - Perform a check on the input values passed to verify that each required input has a corresponding value. When the property is set to STRICT and no value is passed, an exception is raised.\n* **name**: `string` - Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n* **servers**: `map` - A map of names and server IDs to apply configuration to. The name is arbitrary and is used as the Heat resource name for the corresponding deployment.\n* **signal_transport**: `string` - How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\n### Output Attributes\n* **deploy_status_codes**: `map` - A map of Nova names and returned status code from the configuration execution.\n* **deploy_stderrs**: `map` - A map of Nova names and captured stderrs from the configuration execution to each server.\n* **deploy_stdouts**: `map` - A map of Nova names and captured stdouts from the configuration execution to each server.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "input_key": {
                        "description": "Name of key to use for substituting inputs during deployment.\ntype: string\ndefault: \"get_input\"",
                        "markdownDescription": "Name of key to use for substituting inputs during deployment.\n\n*type*: `string`\n\n*default*: `\"get_input\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "signal_transport": {
                        "description": "How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\ntype: string\ndefault: \"CFN_SIGNAL\"",
                        "markdownDescription": "How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.\n\n*type*: `string`\n\n*default*: `\"CFN_SIGNAL\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "actions": {
                        "description": "Which lifecycle actions of the deployment resource will result in this deployment being triggered.\ntype: list\ndefault: [\n    \"CREATE\",\n    \"UPDATE\"\n]\nupdate_allowed: true",
                        "markdownDescription": "Which lifecycle actions of the deployment resource will result in this deployment being triggered.\n\n*type*: `list`\n\n*default*: `[\n    \"CREATE\",\n    \"UPDATE\"\n]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "input_values_validate": {
                        "description": "Perform a check on the input values passed to verify that each required input has a corresponding value. When the property is set to STRICT and no value is passed, an exception is raised.\ntype: string\ndefault: \"LAX\"",
                        "markdownDescription": "Perform a check on the input values passed to verify that each required input has a corresponding value. When the property is set to STRICT and no value is passed, an exception is raised.\n\n*type*: `string`\n\n*default*: `\"LAX\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "input_values": {
                        "description": "Input values to apply to the software configuration on this server.\ntype: map\nupdate_allowed: true",
                        "markdownDescription": "Input values to apply to the software configuration on this server.\n\n*type*: `map`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "servers": {
                        "description": "A map of names and server IDs to apply configuration to. The name is arbitrary and is used as the Heat resource name for the corresponding deployment.\ntype: map\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "A map of names and server IDs to apply configuration to. The name is arbitrary and is used as the Heat resource name for the corresponding deployment.\n\n*type*: `map`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "config": {
                        "description": "ID of software configuration resource to execute when applying to the server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "ID of software configuration resource to execute when applying to the server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "servers"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::TestResource"
                    ],
                    "description": "A resource which stores the string value that was provided.\nThis resource is to be used only for testing. It has control knobs such as 'update_replace', 'fail', 'wait_secs'.\nProperties\n* action_wait_secs: map - Options for simulating waiting.\n* attr_wait_secs: number - Number value for timeout during resolving output value.\n* client_name: string - Client to poll.\n* constraint_prop_secs: number - Number value for delay during resolve constraint.\n* entity_name: string - Client entity to poll.\n* fail: boolean - Value which can be set to fail the resource operation to test failure scenarios.\n* update_replace: boolean - Value which can be set to trigger update replace for the particular resource.\n* update_replace_value: string - Some value that can be stored but can not be updated.\n* value: string - The input string to be stored.\n* wait_secs: number - Seconds to wait after an action (-1 is infinite).\n\nOutput Attributes\n* output - The string that was stored. This value is also available by referencing the resource.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource which stores the string value that was provided.\n\nThis resource is to be used only for testing.\nIt has control knobs such as 'update_replace', 'fail', 'wait_secs'.\n\n### Properties\n* **action_wait_secs**: `map` - Options for simulating waiting.\n* **attr_wait_secs**: `number` - Number value for timeout during resolving output value.\n* **client_name**: `string` - Client to poll.\n* **constraint_prop_secs**: `number` - Number value for delay during resolve constraint.\n* **entity_name**: `string` - Client entity to poll.\n* **fail**: `boolean` - Value which can be set to fail the resource operation to test failure scenarios.\n* **update_replace**: `boolean` - Value which can be set to trigger update replace for the particular resource.\n* **update_replace_value**: `string` - Some value that can be stored but can not be updated.\n* **value**: `string` - The input string to be stored.\n* **wait_secs**: `number` - Seconds to wait after an action (-1 is infinite).\n\n### Output Attributes\n* **output** - The string that was stored. This value is also available by referencing the resource.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "wait_secs": {
                        "description": "Seconds to wait after an action (-1 is infinite).\ntype: number\ndefault: 0\nupdate_allowed: true",
                        "markdownDescription": "Seconds to wait after an action (-1 is infinite).\n\n*type*: `number`\n\n*default*: `0`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "number"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "entity_name": {
                        "description": "Client entity to poll.\ntype: string\ndefault: \"\"\nupdate_allowed: true",
                        "markdownDescription": "Client entity to poll.\n\n*type*: `string`\n\n*default*: `\"\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "update_replace_value": {
                        "description": "Some value that can be stored but can not be updated.\ntype: string",
                        "markdownDescription": "Some value that can be stored but can not be updated.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "client_name": {
                        "description": "Client to poll.\ntype: string\ndefault: \"\"\nupdate_allowed: true",
                        "markdownDescription": "Client to poll.\n\n*type*: `string`\n\n*default*: `\"\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "value": {
                        "description": "The input string to be stored.\ntype: string\ndefault: \"test_string\"\nupdate_allowed: true",
                        "markdownDescription": "The input string to be stored.\n\n*type*: `string`\n\n*default*: `\"test_string\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "action_wait_secs": {
                        "description": "Options for simulating waiting.\ntype: map\nupdate_allowed: true",
                        "markdownDescription": "Options for simulating waiting.\n\n*type*: `map`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "create": {
                                "description": "Seconds to wait after a create. Defaults to the global wait_secs.\ntype: number\nupdate_allowed: true",
                                "markdownDescription": "Seconds to wait after a create. Defaults to the global wait_secs.\n\n*type*: `number`\n\n*update_allowed*: `true`",
                                "oneOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "update": {
                                "description": "Seconds to wait after an update. Defaults to the global wait_secs.\ntype: number\nupdate_allowed: true",
                                "markdownDescription": "Seconds to wait after an update. Defaults to the global wait_secs.\n\n*type*: `number`\n\n*update_allowed*: `true`",
                                "oneOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "delete": {
                                "description": "Seconds to wait after a delete. Defaults to the global wait_secs.\ntype: number\nupdate_allowed: true",
                                "markdownDescription": "Seconds to wait after a delete. Defaults to the global wait_secs.\n\n*type*: `number`\n\n*update_allowed*: `true`",
                                "oneOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              }
                            },
                            "required": [],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "attr_wait_secs": {
                        "description": "Number value for timeout during resolving output value.\ntype: number\ndefault: 0\nupdate_allowed: true",
                        "markdownDescription": "Number value for timeout during resolving output value.\n\n*type*: `number`\n\n*default*: `0`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "number"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "constraint_prop_secs": {
                        "description": "Number value for delay during resolve constraint.\ntype: number\ndefault: 0\nupdate_allowed: true",
                        "markdownDescription": "Number value for delay during resolve constraint.\n\n*type*: `number`\n\n*default*: `0`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "number"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "fail": {
                        "description": "Value which can be set to fail the resource operation to test failure scenarios.\ntype: boolean\ndefault: false\nupdate_allowed: true",
                        "markdownDescription": "Value which can be set to fail the resource operation to test failure scenarios.\n\n*type*: `boolean`\n\n*default*: `false`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "update_replace": {
                        "description": "Value which can be set to trigger update replace for the particular resource.\ntype: boolean\ndefault: false\nupdate_allowed: true",
                        "markdownDescription": "Value which can be set to trigger update replace for the particular resource.\n\n*type*: `boolean`\n\n*default*: `false`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::UpdateWaitConditionHandle"
                    ],
                    "description": "WaitConditionHandle that clears signals and changes handle on update.\nThis works identically to a regular WaitConditionHandle, except that on update it clears all signals received and changes the handle. Using this handle means that you must setup the signal senders to send their signals again any time the update handle changes. This allows us to roll out new configurations and be confident that they are rolled out once UPDATE COMPLETE is reached.\nProperties\n\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "WaitConditionHandle that clears signals and changes handle on update.\n\nThis works identically to a regular WaitConditionHandle, except that\non update it clears all signals received and changes the handle. Using\nthis handle means that you must setup the signal senders to send their\nsignals again any time the update handle changes. This allows us to roll\nout new configurations and be confident that they are rolled out once\nUPDATE COMPLETE is reached.\n\n### Properties\n\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {},
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::Value"
                    ],
                    "description": "A resource which exposes its value property as an attribute.\nThis is useful for exposing a value that is a simple manipulation of other template parameters and/or other resources.\nProperties\n* type: string - The type of the \"value\" property.\n* value: any - The expression to generate the \"value\" attribute.\n\nOutput Attributes\n* show: map - Detailed information about resource.\n* value - The value generated by this resource's properties \"value\" expression, with type determined from the properties \"type\".",
                    "markdownDescription": "A resource which exposes its value property as an attribute.\n\nThis is useful for exposing a value that is a simple manipulation\nof other template parameters and/or other resources.\n\n### Properties\n* **type**: `string` - The type of the \"value\" property.\n* **value**: `any` - The expression to generate the \"value\" attribute.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource.\n* **value** - The value generated by this resource's properties \"value\" expression, with type determined from the properties \"type\"."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of the \"value\" property.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The type of the \"value\" property.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "value": {
                        "description": "The expression to generate the \"value\" attribute.\ntype: any\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "The expression to generate the \"value\" attribute.\n\n*type*: `any`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {},
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "value"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::WaitCondition"
                    ],
                    "description": "Resource for handling signals received by WaitConditionHandle.\nResource takes WaitConditionHandle and starts to create. Resource is in CREATE_IN_PROGRESS status until WaitConditionHandle doesn't receive sufficient number of successful signals (this number can be specified with count property) and successfully creates after that, or fails due to timeout.\nProperties\n* count: integer - The number of success signals that must be received before the stack creation process continues.\n* handle: string - A reference to the wait condition handle used to signal this wait condition.\n* timeout: number - The number of seconds to wait for the correct number of signals to arrive.\n\nOutput Attributes\n* data: string - JSON string containing data associated with wait condition signals sent to the handle.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Resource for handling signals received by WaitConditionHandle.\n\nResource takes WaitConditionHandle and starts to create. Resource is in\nCREATE_IN_PROGRESS status until WaitConditionHandle doesn't receive\nsufficient number of successful signals (this number can be specified with\ncount property) and successfully creates after that, or fails due to\ntimeout.\n\n### Properties\n* **count**: `integer` - The number of success signals that must be received before the stack creation process continues.\n* **handle**: `string` - A reference to the wait condition handle used to signal this wait condition.\n* **timeout**: `number` - The number of seconds to wait for the correct number of signals to arrive.\n\n### Output Attributes\n* **data**: `string` - JSON string containing data associated with wait condition signals sent to the handle.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The number of success signals that must be received before the stack creation process continues.\ntype: integer\ndefault: 1\nupdate_allowed: true",
                        "markdownDescription": "The number of success signals that must be received before the stack creation process continues.\n\n*type*: `integer`\n\n*default*: `1`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "handle": {
                        "description": "A reference to the wait condition handle used to signal this wait condition.\ntype: string\nrequired: true",
                        "markdownDescription": "A reference to the wait condition handle used to signal this wait condition.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "timeout": {
                        "description": "The number of seconds to wait for the correct number of signals to arrive.\ntype: number\nrequired: true",
                        "markdownDescription": "The number of seconds to wait for the correct number of signals to arrive.\n\n*type*: `number`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "number"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "handle",
                      "timeout"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Heat::WaitConditionHandle"
                    ],
                    "description": "Resource for managing instance signals.\nThe main points of this resource are: - have no dependencies (so the instance can reference it). - create credentials to allow for signalling from the instance. - handle signals from the instance, validate and store result.\nProperties\n* signal_transport: string - How the client will signal the wait condition. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signalled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signalled using the provided keystone credentials. TOKEN_SIGNAL will allow and HTTP POST to a Heat API endpoint with the provided keystone token. NO_SIGNAL will result in the resource going to a signalled state without waiting for any signal.\n\nOutput Attributes\n* curl_cli: string - Convenience attribute, provides curl CLI command prefix, which can be used for signalling handle completion or failure when signal_transport is set to TOKEN_SIGNAL. You can signal success by adding --data-binary '{\"status\": \"SUCCESS\"}' , or signal failure by adding --data-binary '{\"status\": \"FAILURE\"}'. This attribute is set to None for all other signal transports.\n* endpoint: string - Endpoint/url which can be used for signalling handle when signal_transport is set to TOKEN_SIGNAL. None for all other signal transports.\n* show: map - Detailed information about resource.\n* signal: string - JSON serialized map that includes the endpoint, token and/or other attributes the client must use for signalling this handle. The contents of this map depend on the type of signal selected in the signal_transport property.\n* token: string - Token for stack-user which can be used for signalling handle when signal_transport is set to TOKEN_SIGNAL. None for all other signal transports.",
                    "markdownDescription": "Resource for managing instance signals.\n\nThe main points of this resource are:\n- have no dependencies (so the instance can reference it).\n- create credentials to allow for signalling from the instance.\n- handle signals from the instance, validate and store result.\n\n### Properties\n* **signal_transport**: `string` - How the client will signal the wait condition. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signalled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signalled using the provided keystone credentials. TOKEN_SIGNAL will allow and HTTP POST to a Heat API endpoint with the provided keystone token. NO_SIGNAL will result in the resource going to a signalled state without waiting for any signal.\n\n### Output Attributes\n* **curl_cli**: `string` - Convenience attribute, provides curl CLI command prefix, which can be used for signalling handle completion or failure when signal_transport is set to TOKEN_SIGNAL. You can signal success by adding --data-binary '{\"status\": \"SUCCESS\"}' , or signal failure by adding --data-binary '{\"status\": \"FAILURE\"}'. This attribute is set to None for all other signal transports.\n* **endpoint**: `string` - Endpoint/url which can be used for signalling handle when signal_transport is set to TOKEN_SIGNAL. None for all other signal transports.\n* **show**: `map` - Detailed information about resource.\n* **signal**: `string` - JSON serialized map that includes the endpoint, token and/or other attributes the client must use for signalling this handle. The contents of this map depend on the type of signal selected in the signal_transport property.\n* **token**: `string` - Token for stack-user which can be used for signalling handle when signal_transport is set to TOKEN_SIGNAL. None for all other signal transports."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "signal_transport": {
                        "description": "How the client will signal the wait condition. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signalled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signalled using the provided keystone credentials. TOKEN_SIGNAL will allow and HTTP POST to a Heat API endpoint with the provided keystone token. NO_SIGNAL will result in the resource going to a signalled state without waiting for any signal.\ntype: string\ndefault: \"TOKEN_SIGNAL\"",
                        "markdownDescription": "How the client will signal the wait condition. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. TEMP_URL_SIGNAL will create a Swift TempURL to be signalled via HTTP PUT. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signalled using the provided keystone credentials. TOKEN_SIGNAL will allow and HTTP POST to a Heat API endpoint with the provided keystone token. NO_SIGNAL will result in the resource going to a signalled state without waiting for any signal.\n\n*type*: `string`\n\n*default*: `\"TOKEN_SIGNAL\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::AddressScope"
                    ],
                    "description": "A resource for Neutron address scope.\nThis resource can be associated with multiple subnet pools in a one-to-many relationship. The subnet pools under an address scope must not overlap.\nProperties\n* ip_version: integer - Address family of the address scope, which is 4 or 6.\n* name: string - The name for the address scope.\n* shared: boolean - Whether the address scope should be shared to other tenants. Note that the default policy setting restricts usage of this attribute to administrative users only, and restricts changing of shared address scope to unshared with update.\n* tenant_id: string - The owner tenant ID of the address scope. Only administrative users can specify a tenant ID other than their own.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for Neutron address scope.\n\nThis resource can be associated with multiple subnet pools\nin a one-to-many relationship. The subnet pools under an\naddress scope must not overlap.\n\n### Properties\n* **ip_version**: `integer` - Address family of the address scope, which is 4 or 6.\n* **name**: `string` - The name for the address scope.\n* **shared**: `boolean` - Whether the address scope should be shared to other tenants. Note that the default policy setting restricts usage of this attribute to administrative users only, and restricts changing of shared address scope to unshared with update.\n* **tenant_id**: `string` - The owner tenant ID of the address scope. Only administrative users can specify a tenant ID other than their own.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "ip_version": {
                        "description": "Address family of the address scope, which is 4 or 6.\ntype: integer\ndefault: 4",
                        "markdownDescription": "Address family of the address scope, which is 4 or 6.\n\n*type*: `integer`\n\n*default*: `4`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "shared": {
                        "description": "Whether the address scope should be shared to other tenants. Note that the default policy setting restricts usage of this attribute to administrative users only, and restricts changing of shared address scope to unshared with update.\ntype: boolean\ndefault: false\nupdate_allowed: true",
                        "markdownDescription": "Whether the address scope should be shared to other tenants. Note that the default policy setting restricts usage of this attribute to administrative users only, and restricts changing of shared address scope to unshared with update.\n\n*type*: `boolean`\n\n*default*: `false`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "The name for the address scope.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The name for the address scope.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "tenant_id": {
                        "description": "The owner tenant ID of the address scope. Only administrative users can specify a tenant ID other than their own.\ntype: string",
                        "markdownDescription": "The owner tenant ID of the address scope. Only administrative users can specify a tenant ID other than their own.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::ExtraRoute"
                    ],
                    "description": "Resource for specifying extra routes for Neutron router.\nResource allows to specify nexthop IP and destination network for router.\nProperties\n* destination: string - Network in CIDR notation.\n* nexthop: string - Nexthop IP address.\n* router_id: string - The router id.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Resource for specifying extra routes for Neutron router.\n\nResource allows to specify nexthop IP and destination network for router.\n\n### Properties\n* **destination**: `string` - Network in CIDR notation.\n* **nexthop**: `string` - Nexthop IP address.\n* **router_id**: `string` - The router id.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "router_id": {
                        "description": "The router id.\ntype: string\nrequired: true",
                        "markdownDescription": "The router id.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "destination": {
                        "description": "Network in CIDR notation.\ntype: string\nrequired: true",
                        "markdownDescription": "Network in CIDR notation.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "nexthop": {
                        "description": "Nexthop IP address.\ntype: string\nrequired: true",
                        "markdownDescription": "Nexthop IP address.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "router_id",
                      "destination",
                      "nexthop"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::FloatingIP"
                    ],
                    "description": "A resource for managing Neutron floating ips.\nFloating IP addresses can change their association between routers by action of the user. One of the most common use cases for floating IPs is to provide public IP addresses to a private cloud, where there are a limited number of IP addresses available. Another is for a public cloud user to have a \"static\" IP address that can be reassigned when an instance is upgraded or moved.\nProperties\n* dns_domain: string - DNS domain associated with floating ip.\n* dns_name: string - DNS name associated with floating ip.\n* fixed_ip_address: string - IP address to use if the port has multiple addresses.\n* floating_ip_address: string - IP address of the floating IP. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\n* floating_network: string - Network to allocate floating IP from.\n* port_id: string - ID of an existing port with at least one IP address to associate with this floating IP.\n* value_specs: map - Extra parameters to include in the \"floatingip\" object in the creation request. Parameters are often specific to installed hardware or extensions.\n\nOutput Attributes\n* fixed_ip_address: string - IP address of the associated port, if specified.\n* floating_ip_address: string - The allocated address of this IP.\n* floating_network_id: string - ID of the network in which this IP is allocated.\n* port_id: string - ID of the port associated with this IP.\n* router_id: string - ID of the router used as gateway, set when associated with a port.\n* show: map - Detailed information about resource.\n* tenant_id: string - The tenant owning this floating IP.",
                    "markdownDescription": "A resource for managing Neutron floating ips.\n\nFloating IP addresses can change their association between routers by\naction of the user. One of the most common use cases for floating IPs is\nto provide public IP addresses to a private cloud, where there are a\nlimited number of IP addresses available. Another is for a public cloud\nuser to have a \"static\" IP address that can be reassigned when an instance\nis upgraded or moved.\n\n### Properties\n* **dns_domain**: `string` - DNS domain associated with floating ip.\n* **dns_name**: `string` - DNS name associated with floating ip.\n* **fixed_ip_address**: `string` - IP address to use if the port has multiple addresses.\n* **floating_ip_address**: `string` - IP address of the floating IP. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\n* **floating_network**: `string` - Network to allocate floating IP from.\n* **port_id**: `string` - ID of an existing port with at least one IP address to associate with this floating IP.\n* **value_specs**: `map` - Extra parameters to include in the \"floatingip\" object in the creation request. Parameters are often specific to installed hardware or extensions.\n\n### Output Attributes\n* **fixed_ip_address**: `string` - IP address of the associated port, if specified.\n* **floating_ip_address**: `string` - The allocated address of this IP.\n* **floating_network_id**: `string` - ID of the network in which this IP is allocated.\n* **port_id**: `string` - ID of the port associated with this IP.\n* **router_id**: `string` - ID of the router used as gateway, set when associated with a port.\n* **show**: `map` - Detailed information about resource.\n* **tenant_id**: `string` - The tenant owning this floating IP."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "floating_network": {
                        "description": "Network to allocate floating IP from.\ntype: string\nrequired: true",
                        "markdownDescription": "Network to allocate floating IP from.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "dns_name": {
                        "description": "DNS name associated with floating ip.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "DNS name associated with floating ip.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "dns_domain": {
                        "description": "DNS domain associated with floating ip.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "DNS domain associated with floating ip.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "fixed_ip_address": {
                        "description": "IP address to use if the port has multiple addresses.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "IP address to use if the port has multiple addresses.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "floating_ip_address": {
                        "description": "IP address of the floating IP. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\ntype: string",
                        "markdownDescription": "IP address of the floating IP. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "value_specs": {
                        "description": "Extra parameters to include in the \"floatingip\" object in the creation request. Parameters are often specific to installed hardware or extensions.\ntype: map\ndefault: {}",
                        "markdownDescription": "Extra parameters to include in the \"floatingip\" object in the creation request. Parameters are often specific to installed hardware or extensions.\n\n*type*: `map`\n\n*default*: `{}`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "port_id": {
                        "description": "ID of an existing port with at least one IP address to associate with this floating IP.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "ID of an existing port with at least one IP address to associate with this floating IP.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "floating_network"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::FloatingIPAssociation"
                    ],
                    "description": "A resource for associating floating ips and ports.\nThis resource allows associating a floating IP to a port with at least one IP address to associate with this floating IP.\nProperties\n* fixed_ip_address: string - IP address to use if the port has multiple addresses.\n* floatingip_id: string - ID of the floating IP to associate.\n* port_id: string - ID of an existing port with at least one IP address to associate with this floating IP.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for associating floating ips and ports.\n\nThis resource allows associating a floating IP to a port with at least one\nIP address to associate with this floating IP.\n\n### Properties\n* **fixed_ip_address**: `string` - IP address to use if the port has multiple addresses.\n* **floatingip_id**: `string` - ID of the floating IP to associate.\n* **port_id**: `string` - ID of an existing port with at least one IP address to associate with this floating IP.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "floatingip_id": {
                        "description": "ID of the floating IP to associate.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "ID of the floating IP to associate.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "fixed_ip_address": {
                        "description": "IP address to use if the port has multiple addresses.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "IP address to use if the port has multiple addresses.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "port_id": {
                        "description": "ID of an existing port with at least one IP address to associate with this floating IP.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "ID of an existing port with at least one IP address to associate with this floating IP.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "floatingip_id",
                      "port_id"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::FlowClassifier"
                    ],
                    "description": "\"Heat Template Resource for networking-sfc flow-classifier.\nThis resource used to select the traffic that can access the service chain. Traffic that matches any flow classifier will be directed to the first port in the chain.\nProperties\n* description: string - Description for the Flow Classifier.\n* destination_ip_prefix: string - Destination IP prefix or subnet.\n* destination_port_range_max: integer - Destination protocol port maximum.\n* destination_port_range_min: integer - Destination protocol port minimum.\n* ethertype: string - L2 ethertype.\n* l7_parameters: map - Dictionary of L7-parameters.\n* logical_destination_port: string - ID or name of the neutron destination port.\n* logical_source_port: string - ID or name of the neutron source port.\n* name: string - Name of the Flow Classifier.\n* protocol: string - IP Protocol for the Flow Classifier.\n* source_ip_prefix: string - Source IP prefix or subnet.\n* source_port_range_max: integer - Source protocol port Maximum.\n* source_port_range_min: integer - Source protocol port Minimum.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "\"Heat Template Resource for networking-sfc flow-classifier.\n\nThis resource used to select the traffic that can access the service chain.\nTraffic that matches any flow classifier will be directed to the first\nport in the chain.\n\n### Properties\n* **description**: `string` - Description for the Flow Classifier.\n* **destination_ip_prefix**: `string` - Destination IP prefix or subnet.\n* **destination_port_range_max**: `integer` - Destination protocol port maximum.\n* **destination_port_range_min**: `integer` - Destination protocol port minimum.\n* **ethertype**: `string` - L2 ethertype.\n* **l7_parameters**: `map` - Dictionary of L7-parameters.\n* **logical_destination_port**: `string` - ID or name of the neutron destination port.\n* **logical_source_port**: `string` - ID or name of the neutron source port.\n* **name**: `string` - Name of the Flow Classifier.\n* **protocol**: `string` - IP Protocol for the Flow Classifier.\n* **source_ip_prefix**: `string` - Source IP prefix or subnet.\n* **source_port_range_max**: `integer` - Source protocol port Maximum.\n* **source_port_range_min**: `integer` - Source protocol port Minimum.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "source_port_range_min": {
                        "description": "Source protocol port Minimum.\ntype: integer",
                        "markdownDescription": "Source protocol port Minimum.\n\n*type*: `integer`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "destination_ip_prefix": {
                        "description": "Destination IP prefix or subnet.\ntype: string",
                        "markdownDescription": "Destination IP prefix or subnet.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "protocol": {
                        "description": "IP Protocol for the Flow Classifier.\ntype: string",
                        "markdownDescription": "IP Protocol for the Flow Classifier.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "description": {
                        "description": "Description for the Flow Classifier.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Description for the Flow Classifier.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ethertype": {
                        "description": "L2 ethertype.\ntype: string\ndefault: \"IPv4\"",
                        "markdownDescription": "L2 ethertype.\n\n*type*: `string`\n\n*default*: `\"IPv4\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "l7_parameters": {
                        "description": "Dictionary of L7-parameters.\ntype: map",
                        "markdownDescription": "Dictionary of L7-parameters.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "source_port_range_max": {
                        "description": "Source protocol port Maximum.\ntype: integer",
                        "markdownDescription": "Source protocol port Maximum.\n\n*type*: `integer`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "source_ip_prefix": {
                        "description": "Source IP prefix or subnet.\ntype: string",
                        "markdownDescription": "Source IP prefix or subnet.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "logical_destination_port": {
                        "description": "ID or name of the neutron destination port.\ntype: string",
                        "markdownDescription": "ID or name of the neutron destination port.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "destination_port_range_min": {
                        "description": "Destination protocol port minimum.\ntype: integer",
                        "markdownDescription": "Destination protocol port minimum.\n\n*type*: `integer`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "destination_port_range_max": {
                        "description": "Destination protocol port maximum.\ntype: integer",
                        "markdownDescription": "Destination protocol port maximum.\n\n*type*: `integer`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "logical_source_port": {
                        "description": "ID or name of the neutron source port.\ntype: string",
                        "markdownDescription": "ID or name of the neutron source port.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name of the Flow Classifier.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Name of the Flow Classifier.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::MeteringLabel"
                    ],
                    "description": "A resource for creating neutron metering label.\nThe idea is to meter this at the L3 routers levels. The point is to allow operators to configure IP ranges and to assign a label to them. For example we will be able to set two labels; one for the internal traffic, and the other one for the external traffic. Each label will measure the traffic for a specific set of IP range. Then, bandwidth measurement will be sent for each label to the Oslo notification system and could be collected by Ceilometer.\nProperties\n* description: string - Description of the metering label.\n* name: string - Name of the metering label.\n* shared: boolean - Whether the metering label should be shared across all tenants.\n\nOutput Attributes\n* description: string - Description of the metering label.\n* name: string - Name of the metering label.\n* shared: string - Shared status of the metering label.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for creating neutron metering label.\n\nThe idea is to meter this at the L3 routers levels. The point is to allow\noperators to configure IP ranges and to assign a label to them. For example\nwe will be able to set two labels; one for the internal traffic, and the\nother one for the external traffic. Each label will measure the traffic for\na specific set of IP range. Then, bandwidth measurement will be sent for\neach label to the Oslo notification system and could be collected by\nCeilometer.\n\n### Properties\n* **description**: `string` - Description of the metering label.\n* **name**: `string` - Name of the metering label.\n* **shared**: `boolean` - Whether the metering label should be shared across all tenants.\n\n### Output Attributes\n* **description**: `string` - Description of the metering label.\n* **name**: `string` - Name of the metering label.\n* **shared**: `string` - Shared status of the metering label.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "shared": {
                        "description": "Whether the metering label should be shared across all tenants.\ntype: boolean\ndefault: false",
                        "markdownDescription": "Whether the metering label should be shared across all tenants.\n\n*type*: `boolean`\n\n*default*: `false`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name of the metering label.\ntype: string",
                        "markdownDescription": "Name of the metering label.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "description": {
                        "description": "Description of the metering label.\ntype: string",
                        "markdownDescription": "Description of the metering label.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::MeteringRule"
                    ],
                    "description": "A resource to create rule for some label.\nResource for allowing specified label to measure the traffic for a specific set of ip range.\nProperties\n* direction: string - The direction in which metering rule is applied, either ingress or egress.\n* excluded: boolean - Specify whether the remote_ip_prefix will be excluded or not from traffic counters of the metering label. For example to not count the traffic of a specific IP address of a range.\n* metering_label_id: string - The metering label ID to associate with this metering rule.\n* remote_ip_prefix: string - Indicates remote IP prefix to be associated with this metering rule.\n\nOutput Attributes\n* direction: string - The direction in which metering rule is applied.\n* excluded: string - Exclude state for cidr.\n* metering_label_id: string - The metering label ID to associate with this metering rule.\n* remote_ip_prefix: string - CIDR to be associated with this metering rule.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource to create rule for some label.\n\nResource for allowing specified label to measure the traffic for a specific\nset of ip range.\n\n### Properties\n* **direction**: `string` - The direction in which metering rule is applied, either ingress or egress.\n* **excluded**: `boolean` - Specify whether the remote_ip_prefix will be excluded or not from traffic counters of the metering label. For example to not count the traffic of a specific IP address of a range.\n* **metering_label_id**: `string` - The metering label ID to associate with this metering rule.\n* **remote_ip_prefix**: `string` - Indicates remote IP prefix to be associated with this metering rule.\n\n### Output Attributes\n* **direction**: `string` - The direction in which metering rule is applied.\n* **excluded**: `string` - Exclude state for cidr.\n* **metering_label_id**: `string` - The metering label ID to associate with this metering rule.\n* **remote_ip_prefix**: `string` - CIDR to be associated with this metering rule.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "remote_ip_prefix": {
                        "description": "Indicates remote IP prefix to be associated with this metering rule.\ntype: string\nrequired: true",
                        "markdownDescription": "Indicates remote IP prefix to be associated with this metering rule.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "direction": {
                        "description": "The direction in which metering rule is applied, either ingress or egress.\ntype: string\ndefault: \"ingress\"",
                        "markdownDescription": "The direction in which metering rule is applied, either ingress or egress.\n\n*type*: `string`\n\n*default*: `\"ingress\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "metering_label_id": {
                        "description": "The metering label ID to associate with this metering rule.\ntype: string\nrequired: true",
                        "markdownDescription": "The metering label ID to associate with this metering rule.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "excluded": {
                        "description": "Specify whether the remote_ip_prefix will be excluded or not from traffic counters of the metering label. For example to not count the traffic of a specific IP address of a range.\ntype: boolean\ndefault: \"False\"",
                        "markdownDescription": "Specify whether the remote_ip_prefix will be excluded or not from traffic counters of the metering label. For example to not count the traffic of a specific IP address of a range.\n\n*type*: `boolean`\n\n*default*: `\"False\"`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "remote_ip_prefix",
                      "metering_label_id"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::Net"
                    ],
                    "description": "A resource for managing Neutron net.\nA network is a virtual isolated layer-2 broadcast domain which is typically reserved to the tenant who created it, unless the network has been explicitly configured to be shared.\nProperties\n* admin_state_up: boolean - A boolean value specifying the administrative status of the network.\n* dhcp_agent_ids: list - The IDs of the DHCP agent to schedule the network. Note that the default policy setting in Neutron restricts usage of this property to administrative users only.\n* dns_domain: string - DNS domain associated with this network.\n* name: string - A string specifying a symbolic name for the network, which is not required to be unique.\n* port_security_enabled: boolean - Flag to enable/disable port security on the network. It provides the default value for the attribute of the ports created on this network.\n* qos_policy: string - The name or ID of QoS policy to attach to this network.\n* shared: boolean - Whether this network should be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.\n* tenant_id: string - The ID of the tenant which will own the network. Only administrative users can set the tenant identifier; this cannot be changed using authorization policies.\n* value_specs: map - Extra parameters to include in the request. Parameters are often specific to installed hardware or extensions.\n\nOutput Attributes\n* admin_state_up: string - The administrative status of the network.\n* mtu: integer - The maximum transmission unit size(in bytes) for the network.\n* name: string - The name of the network.\n* port_security_enabled: boolean - Port security enabled of the network.\n* qos_policy_id: string - The QoS policy ID attached to this network.\n* show: map - Detailed information about resource.\n* status: string - The status of the network.\n* subnets: list - Subnets of this network.\n* tenant_id: string - The tenant owning this network.",
                    "markdownDescription": "A resource for managing Neutron net.\n\nA network is a virtual isolated layer-2 broadcast domain which is typically\nreserved to the tenant who created it, unless the network has been\nexplicitly configured to be shared.\n\n### Properties\n* **admin_state_up**: `boolean` - A boolean value specifying the administrative status of the network.\n* **dhcp_agent_ids**: `list` - The IDs of the DHCP agent to schedule the network. Note that the default policy setting in Neutron restricts usage of this property to administrative users only.\n* **dns_domain**: `string` - DNS domain associated with this network.\n* **name**: `string` - A string specifying a symbolic name for the network, which is not required to be unique.\n* **port_security_enabled**: `boolean` - Flag to enable/disable port security on the network. It provides the default value for the attribute of the ports created on this network.\n* **qos_policy**: `string` - The name or ID of QoS policy to attach to this network.\n* **shared**: `boolean` - Whether this network should be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.\n* **tenant_id**: `string` - The ID of the tenant which will own the network. Only administrative users can set the tenant identifier; this cannot be changed using authorization policies.\n* **value_specs**: `map` - Extra parameters to include in the request. Parameters are often specific to installed hardware or extensions.\n\n### Output Attributes\n* **admin_state_up**: `string` - The administrative status of the network.\n* **mtu**: `integer` - The maximum transmission unit size(in bytes) for the network.\n* **name**: `string` - The name of the network.\n* **port_security_enabled**: `boolean` - Port security enabled of the network.\n* **qos_policy_id**: `string` - The QoS policy ID attached to this network.\n* **show**: `map` - Detailed information about resource.\n* **status**: `string` - The status of the network.\n* **subnets**: `list` - Subnets of this network.\n* **tenant_id**: `string` - The tenant owning this network."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "dhcp_agent_ids": {
                        "description": "The IDs of the DHCP agent to schedule the network. Note that the default policy setting in Neutron restricts usage of this property to administrative users only.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "The IDs of the DHCP agent to schedule the network. Note that the default policy setting in Neutron restricts usage of this property to administrative users only.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "A string specifying a symbolic name for the network, which is not required to be unique.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "A string specifying a symbolic name for the network, which is not required to be unique.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "admin_state_up": {
                        "description": "A boolean value specifying the administrative status of the network.\ntype: boolean\ndefault: true\nupdate_allowed: true",
                        "markdownDescription": "A boolean value specifying the administrative status of the network.\n\n*type*: `boolean`\n\n*default*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "tenant_id": {
                        "description": "The ID of the tenant which will own the network. Only administrative users can set the tenant identifier; this cannot be changed using authorization policies.\ntype: string",
                        "markdownDescription": "The ID of the tenant which will own the network. Only administrative users can set the tenant identifier; this cannot be changed using authorization policies.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "dns_domain": {
                        "description": "DNS domain associated with this network.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "DNS domain associated with this network.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "value_specs": {
                        "description": "Extra parameters to include in the request. Parameters are often specific to installed hardware or extensions.\ntype: map\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Extra parameters to include in the request. Parameters are often specific to installed hardware or extensions.\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "port_security_enabled": {
                        "description": "Flag to enable/disable port security on the network. It provides the default value for the attribute of the ports created on this network.\ntype: boolean\nupdate_allowed: true",
                        "markdownDescription": "Flag to enable/disable port security on the network. It provides the default value for the attribute of the ports created on this network.\n\n*type*: `boolean`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "shared": {
                        "description": "Whether this network should be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.\ntype: boolean\ndefault: false\nupdate_allowed: true",
                        "markdownDescription": "Whether this network should be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.\n\n*type*: `boolean`\n\n*default*: `false`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "qos_policy": {
                        "description": "The name or ID of QoS policy to attach to this network.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The name or ID of QoS policy to attach to this network.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::NetworkGateway"
                    ],
                    "description": "Network Gateway resource in Neutron Network Gateway.\nResource for connecting internal networks with specified devices.\nProperties\n* connections: list - Connection info for this network gateway.\n* devices: list - Device info for this network gateway.\n* name: string - The name of the network gateway.\n\nOutput Attributes\n* default: string - A boolean value of default flag.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "Network Gateway resource in Neutron Network Gateway.\n\nResource for connecting internal networks with specified devices.\n\n### Properties\n* **connections**: `list` - Connection info for this network gateway.\n* **devices**: `list` - Device info for this network gateway.\n* **name**: `string` - The name of the network gateway.\n\n### Output Attributes\n* **default**: `string` - A boolean value of default flag.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "connections": {
                        "description": "Connection info for this network gateway.\ntype: list\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Connection info for this network gateway.\n\n*type*: `list`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "network_id": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "segmentation_id": {
                                      "description": "The id for L2 segment on the external side of the network gateway. Must be specified when using vlan.\ntype: integer",
                                      "markdownDescription": "The id for L2 segment on the external side of the network gateway. Must be specified when using vlan.\n\n*type*: `integer`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "segmentation_type": {
                                      "description": "L2 segmentation strategy on the external side of the network gateway.\ntype: string\ndefault: \"flat\"",
                                      "markdownDescription": "L2 segmentation strategy on the external side of the network gateway.\n\n*type*: `string`\n\n*default*: `\"flat\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "network": {
                                      "description": "The internal network to connect on the network gateway.\ntype: string\nrequired: true",
                                      "markdownDescription": "The internal network to connect on the network gateway.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "network"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "The name of the network gateway.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The name of the network gateway.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "devices": {
                        "description": "Device info for this network gateway.\ntype: list\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Device info for this network gateway.\n\n*type*: `list`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "interface_name": {
                                      "description": "The interface name for the network gateway.\ntype: string\nrequired: true",
                                      "markdownDescription": "The interface name for the network gateway.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "id": {
                                      "description": "The device id for the network gateway.\ntype: string\nrequired: true",
                                      "markdownDescription": "The device id for the network gateway.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "interface_name",
                                    "id"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "devices"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::Port"
                    ],
                    "description": "A resource for managing Neutron ports.\nA port represents a virtual switch port on a logical network switch. Virtual instances attach their interfaces into ports. The logical port also defines the MAC address and the IP address(es) to be assigned to the interfaces plugged into them. When IP addresses are associated to a port, this also implies the port is associated with a subnet, as the IP address was taken from the allocation pool for a specific subnet.\nProperties\n* admin_state_up: boolean - The administrative state of this port.\n* allowed_address_pairs: list - Additional MAC/IP address pairs allowed to pass through the port.\n* binding:vnic_type: string - The vnic type to be bound on the neutron port. To support SR-IOV PCI passthrough networking, you can request that the neutron port to be realized as normal (virtual nic), direct (pci passthrough), or macvtap (virtual interface with a tap-like software interface). Note that this only works for Neutron deployments that support the bindings extension.\n* device_id: string - Device ID of this port.\n* device_owner: string - Name of the network owning the port. The value is typically network:floatingip or network:router_interface or network:dhcp.\n* dns_name: string - DNS name associated with the port.\n* fixed_ips: list - Desired IPs for this port.\n* mac_address: string - MAC address to give to this port. The default update policy of this property in neutron is that allow admin role only.\n* name: string - A symbolic name for this port.\n* network: string - Network this port belongs to. If you plan to use current port to assign Floating IP, you should specify fixed_ips with subnet. Note if this changes to a different network update, the port will be replaced.\n* port_security_enabled: boolean - Flag to enable/disable port security on the port. When disable this feature(set it to False), there will be no packages filtering, like security-group and address-pairs.\n* qos_policy: string - The name or ID of QoS policy to attach to this port.\n* replacement_policy: string - Policy on how to respond to a stack-update for this resource. REPLACE_ALWAYS will replace the port regardless of any property changes. AUTO will update the existing port for any changed update-allowed property.\n* security_groups: list - Security group IDs to associate with this port.\n* value_specs: map - Extra parameters to include in the request.\n\nOutput Attributes\n* admin_state_up: string - The administrative state of this port.\n* allowed_address_pairs: list - Additional MAC/IP address pairs allowed to pass through a port.\n* device_id: string - Unique identifier for the device.\n* device_owner: string - Name of the network owning the port.\n* dns_assignment: map - The DNS assigned to this port.\n* fixed_ips: list - Fixed IP addresses.\n* mac_address: string - MAC address of the port.\n* name: string - Friendly name of the port.\n* network_id: string - Unique identifier for the network owning the port.\n* port_security_enabled: boolean - Port security enabled of the port.\n* qos_policy_id: string - The QoS policy ID attached to this port.\n* security_groups: list - A list of security groups for the port.\n* show: map - Detailed information about resource.\n* status: string - The status of the port.\n* subnets: list - A list of all subnet attributes for the port.\n* tenant_id: string - Tenant owning the port.",
                    "markdownDescription": "A resource for managing Neutron ports.\n\nA port represents a virtual switch port on a logical network switch.\nVirtual instances attach their interfaces into ports. The logical port also\ndefines the MAC address and the IP address(es) to be assigned to the\ninterfaces plugged into them. When IP addresses are associated to a port,\nthis also implies the port is associated with a subnet, as the IP address\nwas taken from the allocation pool for a specific subnet.\n\n### Properties\n* **admin_state_up**: `boolean` - The administrative state of this port.\n* **allowed_address_pairs**: `list` - Additional MAC/IP address pairs allowed to pass through the port.\n* **binding:vnic_type**: `string` - The vnic type to be bound on the neutron port. To support SR-IOV PCI passthrough networking, you can request that the neutron port to be realized as normal (virtual nic), direct (pci passthrough), or macvtap (virtual interface with a tap-like software interface). Note that this only works for Neutron deployments that support the bindings extension.\n* **device_id**: `string` - Device ID of this port.\n* **device_owner**: `string` - Name of the network owning the port. The value is typically network:floatingip or network:router_interface or network:dhcp.\n* **dns_name**: `string` - DNS name associated with the port.\n* **fixed_ips**: `list` - Desired IPs for this port.\n* **mac_address**: `string` - MAC address to give to this port. The default update policy of this property in neutron is that allow admin role only.\n* **name**: `string` - A symbolic name for this port.\n* **network**: `string` - Network this port belongs to. If you plan to use current port to assign Floating IP, you should specify fixed_ips with subnet. Note if this changes to a different network update, the port will be replaced.\n* **port_security_enabled**: `boolean` - Flag to enable/disable port security on the port. When disable this feature(set it to False), there will be no packages filtering, like security-group and address-pairs.\n* **qos_policy**: `string` - The name or ID of QoS policy to attach to this port.\n* **replacement_policy**: `string` - Policy on how to respond to a stack-update for this resource. REPLACE_ALWAYS will replace the port regardless of any property changes. AUTO will update the existing port for any changed update-allowed property.\n* **security_groups**: `list` - Security group IDs to associate with this port.\n* **value_specs**: `map` - Extra parameters to include in the request.\n\n### Output Attributes\n* **admin_state_up**: `string` - The administrative state of this port.\n* **allowed_address_pairs**: `list` - Additional MAC/IP address pairs allowed to pass through a port.\n* **device_id**: `string` - Unique identifier for the device.\n* **device_owner**: `string` - Name of the network owning the port.\n* **dns_assignment**: `map` - The DNS assigned to this port.\n* **fixed_ips**: `list` - Fixed IP addresses.\n* **mac_address**: `string` - MAC address of the port.\n* **name**: `string` - Friendly name of the port.\n* **network_id**: `string` - Unique identifier for the network owning the port.\n* **port_security_enabled**: `boolean` - Port security enabled of the port.\n* **qos_policy_id**: `string` - The QoS policy ID attached to this port.\n* **security_groups**: `list` - A list of security groups for the port.\n* **show**: `map` - Detailed information about resource.\n* **status**: `string` - The status of the port.\n* **subnets**: `list` - A list of all subnet attributes for the port.\n* **tenant_id**: `string` - Tenant owning the port."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "replacement_policy": {
                        "description": "Policy on how to respond to a stack-update for this resource. REPLACE_ALWAYS will replace the port regardless of any property changes. AUTO will update the existing port for any changed update-allowed property.\ntype: string\ndefault: \"AUTO\"\nupdate_allowed: true",
                        "markdownDescription": "Policy on how to respond to a stack-update for this resource. REPLACE_ALWAYS will replace the port regardless of any property changes. AUTO will update the existing port for any changed update-allowed property.\n\n*type*: `string`\n\n*default*: `\"AUTO\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "A symbolic name for this port.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "A symbolic name for this port.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "allowed_address_pairs": {
                        "description": "Additional MAC/IP address pairs allowed to pass through the port.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "Additional MAC/IP address pairs allowed to pass through the port.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "ip_address": {
                                      "description": "IP address to allow through this port.\ntype: string\nrequired: true",
                                      "markdownDescription": "IP address to allow through this port.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "mac_address": {
                                      "description": "MAC address to allow through this port.\ntype: string",
                                      "markdownDescription": "MAC address to allow through this port.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "ip_address"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "admin_state_up": {
                        "description": "The administrative state of this port.\ntype: boolean\ndefault: true\nupdate_allowed: true",
                        "markdownDescription": "The administrative state of this port.\n\n*type*: `boolean`\n\n*default*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "dns_name": {
                        "description": "DNS name associated with the port.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "DNS name associated with the port.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "binding:vnic_type": {
                        "description": "The vnic type to be bound on the neutron port. To support SR-IOV PCI passthrough networking, you can request that the neutron port to be realized as normal (virtual nic), direct (pci passthrough), or macvtap (virtual interface with a tap-like software interface). Note that this only works for Neutron deployments that support the bindings extension.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The vnic type to be bound on the neutron port. To support SR-IOV PCI passthrough networking, you can request that the neutron port to be realized as normal (virtual nic), direct (pci passthrough), or macvtap (virtual interface with a tap-like software interface). Note that this only works for Neutron deployments that support the bindings extension.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "network": {
                        "description": "Network this port belongs to. If you plan to use current port to assign Floating IP, you should specify fixed_ips with subnet. Note if this changes to a different network update, the port will be replaced.\ntype: string\nrequired: true",
                        "markdownDescription": "Network this port belongs to. If you plan to use current port to assign Floating IP, you should specify fixed_ips with subnet. Note if this changes to a different network update, the port will be replaced.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "device_owner": {
                        "description": "Name of the network owning the port. The value is typically network:floatingip or network:router_interface or network:dhcp.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Name of the network owning the port. The value is typically network:floatingip or network:router_interface or network:dhcp.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "value_specs": {
                        "description": "Extra parameters to include in the request.\ntype: map\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Extra parameters to include in the request.\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "mac_address": {
                        "description": "MAC address to give to this port. The default update policy of this property in neutron is that allow admin role only.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "MAC address to give to this port. The default update policy of this property in neutron is that allow admin role only.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "port_security_enabled": {
                        "description": "Flag to enable/disable port security on the port. When disable this feature(set it to False), there will be no packages filtering, like security-group and address-pairs.\ntype: boolean\nupdate_allowed: true",
                        "markdownDescription": "Flag to enable/disable port security on the port. When disable this feature(set it to False), there will be no packages filtering, like security-group and address-pairs.\n\n*type*: `boolean`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "qos_policy": {
                        "description": "The name or ID of QoS policy to attach to this port.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The name or ID of QoS policy to attach to this port.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "fixed_ips": {
                        "description": "Desired IPs for this port.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "Desired IPs for this port.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "subnet_id": {
                                      "description": "type: string",
                                      "markdownDescription": "*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "subnet": {
                                      "description": "Subnet in which to allocate the IP address for this port.\ntype: string",
                                      "markdownDescription": "Subnet in which to allocate the IP address for this port.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "ip_address": {
                                      "description": "IP address desired in the subnet for this port.\ntype: string",
                                      "markdownDescription": "IP address desired in the subnet for this port.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "security_groups": {
                        "description": "Security group IDs to associate with this port.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "Security group IDs to associate with this port.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "device_id": {
                        "description": "Device ID of this port.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Device ID of this port.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "network"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::PortPair"
                    ],
                    "description": "A resource for neutron networking-sfc port-pair.\nThis plug-in requires networking-sfc>=1.0.0. So to enable this plug-in, install this library and restart the heat-engine.\nA Port Pair represents a service function instance. The ingress port and the egress port of the service function may be specified. If a service function has one bidirectional port, the ingress port has the same value as the egress port.\nProperties\n* description: string - Description for the Port Pair.\n* egress: string - ID or name of the egress neutron port.\n* ingress: string - ID or name of the ingress neutron port.\n* name: string - Name for the Port Pair.\n* service_function_parameters: map - Dictionary of service function parameter. Currently only correlation=None is supported.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for neutron networking-sfc port-pair.\n\nThis plug-in requires networking-sfc>=1.0.0. So to enable this\nplug-in, install this library and restart the heat-engine.\n\nA Port Pair represents a service function instance. The ingress port and\nthe egress port of the service function may be specified. If a service\nfunction has one bidirectional port, the ingress port has the same value\nas the egress port.\n\n### Properties\n* **description**: `string` - Description for the Port Pair.\n* **egress**: `string` - ID or name of the egress neutron port.\n* **ingress**: `string` - ID or name of the ingress neutron port.\n* **name**: `string` - Name for the Port Pair.\n* **service_function_parameters**: `map` - Dictionary of service function parameter. Currently only correlation=None is supported.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "ingress": {
                        "description": "ID or name of the ingress neutron port.\ntype: string\nrequired: true",
                        "markdownDescription": "ID or name of the ingress neutron port.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "egress": {
                        "description": "ID or name of the egress neutron port.\ntype: string\nrequired: true",
                        "markdownDescription": "ID or name of the egress neutron port.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "service_function_parameters": {
                        "description": "Dictionary of service function parameter. Currently only correlation=None is supported.\ntype: map\ndefault: {\n    \"correlation\": null\n}",
                        "markdownDescription": "Dictionary of service function parameter. Currently only correlation=None is supported.\n\n*type*: `map`\n\n*default*: `{\n    \"correlation\": null\n}`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name for the Port Pair.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Name for the Port Pair.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "description": {
                        "description": "Description for the Port Pair.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Description for the Port Pair.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "ingress",
                      "egress"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::ProviderNet"
                    ],
                    "description": "A resource for managing Neutron provider networks.\nProvider networks specify details of physical realisation of the existing network.\nProperties\n* admin_state_up: boolean - A boolean value specifying the administrative status of the network.\n* name: string - A string specifying a symbolic name for the network, which is not required to be unique.\n* network_type: string - A string specifying the provider network type for the network.\n* physical_network: string - A string specifying physical network mapping for the network.\n* port_security_enabled: boolean - Flag to enable/disable port security on the network. It provides the default value for the attribute of the ports created on this network.\n* router_external: boolean - Whether the network contains an external router.\n* segmentation_id: string - A string specifying the segmentation id for the network.\n* shared: boolean - Whether this network should be shared across all tenants.\n\nOutput Attributes\n* show: map - Detailed information about resource.\n* status: string - The status of the network.\n* subnets: list - Subnets of this network.",
                    "markdownDescription": "A resource for managing Neutron provider networks.\n\nProvider networks specify details of physical realisation of the existing\nnetwork.\n\n### Properties\n* **admin_state_up**: `boolean` - A boolean value specifying the administrative status of the network.\n* **name**: `string` - A string specifying a symbolic name for the network, which is not required to be unique.\n* **network_type**: `string` - A string specifying the provider network type for the network.\n* **physical_network**: `string` - A string specifying physical network mapping for the network.\n* **port_security_enabled**: `boolean` - Flag to enable/disable port security on the network. It provides the default value for the attribute of the ports created on this network.\n* **router_external**: `boolean` - Whether the network contains an external router.\n* **segmentation_id**: `string` - A string specifying the segmentation id for the network.\n* **shared**: `boolean` - Whether this network should be shared across all tenants.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource.\n* **status**: `string` - The status of the network.\n* **subnets**: `list` - Subnets of this network."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string specifying a symbolic name for the network, which is not required to be unique.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "A string specifying a symbolic name for the network, which is not required to be unique.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "admin_state_up": {
                        "description": "A boolean value specifying the administrative status of the network.\ntype: boolean\ndefault: true\nupdate_allowed: true",
                        "markdownDescription": "A boolean value specifying the administrative status of the network.\n\n*type*: `boolean`\n\n*default*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "router_external": {
                        "description": "Whether the network contains an external router.\ntype: boolean\ndefault: false\nupdate_allowed: true",
                        "markdownDescription": "Whether the network contains an external router.\n\n*type*: `boolean`\n\n*default*: `false`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "segmentation_id": {
                        "description": "A string specifying the segmentation id for the network.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "A string specifying the segmentation id for the network.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "physical_network": {
                        "description": "A string specifying physical network mapping for the network.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "A string specifying physical network mapping for the network.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "shared": {
                        "description": "Whether this network should be shared across all tenants.\ntype: boolean\ndefault: true\nupdate_allowed: true",
                        "markdownDescription": "Whether this network should be shared across all tenants.\n\n*type*: `boolean`\n\n*default*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "port_security_enabled": {
                        "description": "Flag to enable/disable port security on the network. It provides the default value for the attribute of the ports created on this network.\ntype: boolean\ndefault: true\nupdate_allowed: true",
                        "markdownDescription": "Flag to enable/disable port security on the network. It provides the default value for the attribute of the ports created on this network.\n\n*type*: `boolean`\n\n*default*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "network_type": {
                        "description": "A string specifying the provider network type for the network.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "A string specifying the provider network type for the network.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "network_type"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::RBACPolicy"
                    ],
                    "description": "A Resource for managing RBAC policy in Neutron.\nThis resource creates and manages Neutron RBAC policy, which allows to share Neutron networks to subsets of tenants.\nProperties\n* action: string - Action for the RBAC policy.\n* object_id: string - ID or name of the RBAC object.\n* object_type: string - Type of the object that RBAC policy affects.\n* target_tenant: string - ID of the tenant to which the RBAC policy will be enforced.\n* tenant_id: string - The owner tenant ID. Only required if the caller has an administrative role and wants to create a RBAC for another tenant.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A Resource for managing RBAC policy in Neutron.\n\nThis resource creates and manages Neutron RBAC policy,\nwhich allows to share Neutron networks to subsets of tenants.\n\n### Properties\n* **action**: `string` - Action for the RBAC policy.\n* **object_id**: `string` - ID or name of the RBAC object.\n* **object_type**: `string` - Type of the object that RBAC policy affects.\n* **target_tenant**: `string` - ID of the tenant to which the RBAC policy will be enforced.\n* **tenant_id**: `string` - The owner tenant ID. Only required if the caller has an administrative role and wants to create a RBAC for another tenant.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "Action for the RBAC policy.\ntype: string\nrequired: true",
                        "markdownDescription": "Action for the RBAC policy.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "tenant_id": {
                        "description": "The owner tenant ID. Only required if the caller has an administrative role and wants to create a RBAC for another tenant.\ntype: string",
                        "markdownDescription": "The owner tenant ID. Only required if the caller has an administrative role and wants to create a RBAC for another tenant.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "object_type": {
                        "description": "Type of the object that RBAC policy affects.\ntype: string\nrequired: true",
                        "markdownDescription": "Type of the object that RBAC policy affects.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "target_tenant": {
                        "description": "ID of the tenant to which the RBAC policy will be enforced.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "ID of the tenant to which the RBAC policy will be enforced.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "object_id": {
                        "description": "ID or name of the RBAC object.\ntype: string\nrequired: true",
                        "markdownDescription": "ID or name of the RBAC object.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "action",
                      "object_type",
                      "target_tenant",
                      "object_id"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::Router"
                    ],
                    "description": "A resource that implements Neutron router.\nRouter is a physical or virtual network device that passes network traffic between different networks.\nProperties\n* admin_state_up: boolean - The administrative state of the router.\n* distributed: boolean - Indicates whether or not to create a distributed router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only. This property can not be used in conjunction with the L3 agent ID.\n* external_gateway_info: map - External network gateway configuration for a router.\n* ha: boolean - Indicates whether or not to create a highly available router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only. And now neutron do not support distributed and ha at the same time.\n* l3_agent_ids: list - ID list of the L3 agent. User can specify multi-agents for highly available router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\n* name: string - The name of the router.\n* value_specs: map - Extra parameters to include in the creation request.\n\nOutput Attributes\n* admin_state_up: string - Administrative state of the router.\n* external_gateway_info: map - Gateway network for the router.\n* name: string - Friendly name of the router.\n* show: map - Detailed information about resource.\n* status: string - The status of the router.\n* tenant_id: string - Tenant owning the router.",
                    "markdownDescription": "A resource that implements Neutron router.\n\nRouter is a physical or virtual network device that passes network traffic\nbetween different networks.\n\n### Properties\n* **admin_state_up**: `boolean` - The administrative state of the router.\n* **distributed**: `boolean` - Indicates whether or not to create a distributed router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only. This property can not be used in conjunction with the L3 agent ID.\n* **external_gateway_info**: `map` - External network gateway configuration for a router.\n* **ha**: `boolean` - Indicates whether or not to create a highly available router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only. And now neutron do not support distributed and ha at the same time.\n* **l3_agent_ids**: `list` - ID list of the L3 agent. User can specify multi-agents for highly available router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\n* **name**: `string` - The name of the router.\n* **value_specs**: `map` - Extra parameters to include in the creation request.\n\n### Output Attributes\n* **admin_state_up**: `string` - Administrative state of the router.\n* **external_gateway_info**: `map` - Gateway network for the router.\n* **name**: `string` - Friendly name of the router.\n* **show**: `map` - Detailed information about resource.\n* **status**: `string` - The status of the router.\n* **tenant_id**: `string` - Tenant owning the router."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "external_gateway_info": {
                        "description": "External network gateway configuration for a router.\ntype: map\nupdate_allowed: true",
                        "markdownDescription": "External network gateway configuration for a router.\n\n*type*: `map`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "enable_snat": {
                                "description": "Enables Source NAT on the router gateway. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\ntype: boolean\nupdate_allowed: true",
                                "markdownDescription": "Enables Source NAT on the router gateway. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\n\n*type*: `boolean`\n\n*update_allowed*: `true`",
                                "oneOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "network": {
                                "description": "ID or name of the external network for the gateway.\ntype: string\nrequired: true\nupdate_allowed: true",
                                "markdownDescription": "ID or name of the external network for the gateway.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              },
                              "external_fixed_ips": {
                                "description": "External fixed IP addresses for the gateway.\ntype: list\nupdate_allowed: true",
                                "markdownDescription": "External fixed IP addresses for the gateway.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "description": "type: map",
                                      "markdownDescription": "*type*: `map`",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "subnet": {
                                              "description": "Subnet of external fixed IP address.\ntype: string",
                                              "markdownDescription": "Subnet of external fixed IP address.\n\n*type*: `string`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "ip_address": {
                                              "description": "External fixed IP address.\ntype: string",
                                              "markdownDescription": "External fixed IP address.\n\n*type*: `string`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [],
                                          "additionalProperties": false
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "$ref": "#/definitions/intrinsic-function"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "network"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "The name of the router.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The name of the router.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "admin_state_up": {
                        "description": "The administrative state of the router.\ntype: boolean\ndefault: true\nupdate_allowed: true",
                        "markdownDescription": "The administrative state of the router.\n\n*type*: `boolean`\n\n*default*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "distributed": {
                        "description": "Indicates whether or not to create a distributed router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only. This property can not be used in conjunction with the L3 agent ID.\ntype: boolean",
                        "markdownDescription": "Indicates whether or not to create a distributed router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only. This property can not be used in conjunction with the L3 agent ID.\n\n*type*: `boolean`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "value_specs": {
                        "description": "Extra parameters to include in the creation request.\ntype: map\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Extra parameters to include in the creation request.\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ha": {
                        "description": "Indicates whether or not to create a highly available router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only. And now neutron do not support distributed and ha at the same time.\ntype: boolean",
                        "markdownDescription": "Indicates whether or not to create a highly available router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only. And now neutron do not support distributed and ha at the same time.\n\n*type*: `boolean`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "l3_agent_ids": {
                        "description": "ID list of the L3 agent. User can specify multi-agents for highly available router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "ID list of the L3 agent. User can specify multi-agents for highly available router. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: string",
                              "markdownDescription": "*type*: `string`",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::RouterInterface"
                    ],
                    "description": "A resource for managing Neutron router interfaces.\nRouter interfaces associate routers with existing subnets or ports.\nProperties\n* port: string - The port, either subnet or port should be specified.\n* router: string - The router.\n* subnet: string - The subnet, either subnet or port should be specified.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for managing Neutron router interfaces.\n\nRouter interfaces associate routers with existing subnets or ports.\n\n### Properties\n* **port**: `string` - The port, either subnet or port should be specified.\n* **router**: `string` - The router.\n* **subnet**: `string` - The subnet, either subnet or port should be specified.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "subnet": {
                        "description": "The subnet, either subnet or port should be specified.\ntype: string",
                        "markdownDescription": "The subnet, either subnet or port should be specified.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "port": {
                        "description": "The port, either subnet or port should be specified.\ntype: string",
                        "markdownDescription": "The port, either subnet or port should be specified.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "router": {
                        "description": "The router.\ntype: string\nrequired: true",
                        "markdownDescription": "The router.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "router"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::SecurityGroup"
                    ],
                    "description": "A resource for managing Neutron security groups.\nSecurity groups are sets of IP filter rules that are applied to an instance's networking. They are project specific, and project members can edit the default rules for their group and add new rules sets. All projects have a \"default\" security group, which is applied to instances that have no other security group defined.\nProperties\n* description: string - Description of the security group.\n* name: string - A string specifying a symbolic name for the security group, which is not required to be unique.\n* rules: list - List of security group rules.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for managing Neutron security groups.\n\nSecurity groups are sets of IP filter rules that are applied to an\ninstance's networking. They are project specific, and project members can\nedit the default rules for their group and add new rules sets. All projects\nhave a \"default\" security group, which is applied to instances that have no\nother security group defined.\n\n### Properties\n* **description**: `string` - Description of the security group.\n* **name**: `string` - A string specifying a symbolic name for the security group, which is not required to be unique.\n* **rules**: `list` - List of security group rules.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "rules": {
                        "description": "List of security group rules.\ntype: list\ndefault: []\nupdate_allowed: true",
                        "markdownDescription": "List of security group rules.\n\n*type*: `list`\n\n*default*: `[]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "remote_group_id": {
                                      "description": "The remote group ID to be associated with this security group rule. If no value is specified then this rule will use this security group for the remote_group_id. The remote mode parameter must be set to \"remote_group_id\".\ntype: string",
                                      "markdownDescription": "The remote group ID to be associated with this security group rule. If no value is specified then this rule will use this security group for the remote_group_id. The remote mode parameter must be set to \"remote_group_id\".\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "direction": {
                                      "description": "The direction in which the security group rule is applied. For a compute instance, an ingress security group rule matches traffic that is incoming (ingress) for that instance. An egress rule is applied to traffic leaving the instance.\ntype: string\ndefault: \"ingress\"",
                                      "markdownDescription": "The direction in which the security group rule is applied. For a compute instance, an ingress security group rule matches traffic that is incoming (ingress) for that instance. An egress rule is applied to traffic leaving the instance.\n\n*type*: `string`\n\n*default*: `\"ingress\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "remote_ip_prefix": {
                                      "description": "The remote IP prefix (CIDR) to be associated with this security group rule.\ntype: string",
                                      "markdownDescription": "The remote IP prefix (CIDR) to be associated with this security group rule.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "protocol": {
                                      "description": "The protocol that is matched by the security group rule. Valid values include tcp, udp, and icmp.\ntype: string",
                                      "markdownDescription": "The protocol that is matched by the security group rule. Valid values include tcp, udp, and icmp.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "ethertype": {
                                      "description": "Ethertype of the traffic.\ntype: string\ndefault: \"IPv4\"",
                                      "markdownDescription": "Ethertype of the traffic.\n\n*type*: `string`\n\n*default*: `\"IPv4\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "port_range_max": {
                                      "description": "The maximum port number in the range that is matched by the security group rule. The port_range_min attribute constrains the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.\ntype: integer",
                                      "markdownDescription": "The maximum port number in the range that is matched by the security group rule. The port_range_min attribute constrains the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.\n\n*type*: `integer`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "port_range_min": {
                                      "description": "The minimum port number in the range that is matched by the security group rule. If the protocol is TCP or UDP, this value must be less than or equal to the value of the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.\ntype: integer",
                                      "markdownDescription": "The minimum port number in the range that is matched by the security group rule. If the protocol is TCP or UDP, this value must be less than or equal to the value of the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.\n\n*type*: `integer`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "remote_mode": {
                                      "description": "Whether to specify a remote group or a remote IP prefix.\ntype: string\ndefault: \"remote_ip_prefix\"",
                                      "markdownDescription": "Whether to specify a remote group or a remote IP prefix.\n\n*type*: `string`\n\n*default*: `\"remote_ip_prefix\"`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "A string specifying a symbolic name for the security group, which is not required to be unique.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "A string specifying a symbolic name for the security group, which is not required to be unique.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "description": {
                        "description": "Description of the security group.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Description of the security group.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::SecurityGroupRule"
                    ],
                    "description": "A resource for managing Neutron security group rules.\nRules to use in security group resource.\nProperties\n* description: string - Description of the security group rule.\n* direction: string - The direction in which the security group rule is applied. For a compute instance, an ingress security group rule matches traffic that is incoming (ingress) for that instance. An egress rule is applied to traffic leaving the instance.\n* ethertype: string - Ethertype of the traffic.\n* port_range_max: integer - The maximum port number in the range that is matched by the security group rule. The port_range_min attribute constrains the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP code.\n* port_range_min: integer - The minimum port number in the range that is matched by the security group rule. If the protocol is TCP or UDP, this value must be less than or equal to the value of the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.\n* protocol: string - The protocol that is matched by the security group rule. Allowed values are ah, dccp, egp, esp, gre, icmp, icmpv6, igmp, ipv6-encap, ipv6-frag, ipv6-icmp, ipv6-nonxt, ipv6-opts, ipv6-route, ospf, pgm, rsvp, sctp, tcp, udp, udplite, vrrp and integer representations [0-255].\n* remote_group: string - The remote group name or ID to be associated with this security group rule.\n* remote_ip_prefix: string - The remote IP prefix (CIDR) to be associated with this security group rule.\n* security_group: string - Security group name or ID to add rule.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for managing Neutron security group rules.\n\nRules to use in security group resource.\n\n### Properties\n* **description**: `string` - Description of the security group rule.\n* **direction**: `string` - The direction in which the security group rule is applied. For a compute instance, an ingress security group rule matches traffic that is incoming (ingress) for that instance. An egress rule is applied to traffic leaving the instance.\n* **ethertype**: `string` - Ethertype of the traffic.\n* **port_range_max**: `integer` - The maximum port number in the range that is matched by the security group rule. The port_range_min attribute constrains the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP code.\n* **port_range_min**: `integer` - The minimum port number in the range that is matched by the security group rule. If the protocol is TCP or UDP, this value must be less than or equal to the value of the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.\n* **protocol**: `string` - The protocol that is matched by the security group rule. Allowed values are ah, dccp, egp, esp, gre, icmp, icmpv6, igmp, ipv6-encap, ipv6-frag, ipv6-icmp, ipv6-nonxt, ipv6-opts, ipv6-route, ospf, pgm, rsvp, sctp, tcp, udp, udplite, vrrp and integer representations [0-255].\n* **remote_group**: `string` - The remote group name or ID to be associated with this security group rule.\n* **remote_ip_prefix**: `string` - The remote IP prefix (CIDR) to be associated with this security group rule.\n* **security_group**: `string` - Security group name or ID to add rule.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "direction": {
                        "description": "The direction in which the security group rule is applied. For a compute instance, an ingress security group rule matches traffic that is incoming (ingress) for that instance. An egress rule is applied to traffic leaving the instance.\ntype: string\ndefault: \"ingress\"",
                        "markdownDescription": "The direction in which the security group rule is applied. For a compute instance, an ingress security group rule matches traffic that is incoming (ingress) for that instance. An egress rule is applied to traffic leaving the instance.\n\n*type*: `string`\n\n*default*: `\"ingress\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "protocol": {
                        "description": "The protocol that is matched by the security group rule. Allowed values are ah, dccp, egp, esp, gre, icmp, icmpv6, igmp, ipv6-encap, ipv6-frag, ipv6-icmp, ipv6-nonxt, ipv6-opts, ipv6-route, ospf, pgm, rsvp, sctp, tcp, udp, udplite, vrrp and integer representations [0-255].\ntype: string\ndefault: \"tcp\"",
                        "markdownDescription": "The protocol that is matched by the security group rule. Allowed values are ah, dccp, egp, esp, gre, icmp, icmpv6, igmp, ipv6-encap, ipv6-frag, ipv6-icmp, ipv6-nonxt, ipv6-opts, ipv6-route, ospf, pgm, rsvp, sctp, tcp, udp, udplite, vrrp and integer representations [0-255].\n\n*type*: `string`\n\n*default*: `\"tcp\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "description": {
                        "description": "Description of the security group rule.\ntype: string",
                        "markdownDescription": "Description of the security group rule.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "remote_ip_prefix": {
                        "description": "The remote IP prefix (CIDR) to be associated with this security group rule.\ntype: string",
                        "markdownDescription": "The remote IP prefix (CIDR) to be associated with this security group rule.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "port_range_max": {
                        "description": "The maximum port number in the range that is matched by the security group rule. The port_range_min attribute constrains the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP code.\ntype: integer",
                        "markdownDescription": "The maximum port number in the range that is matched by the security group rule. The port_range_min attribute constrains the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP code.\n\n*type*: `integer`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "port_range_min": {
                        "description": "The minimum port number in the range that is matched by the security group rule. If the protocol is TCP or UDP, this value must be less than or equal to the value of the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.\ntype: integer",
                        "markdownDescription": "The minimum port number in the range that is matched by the security group rule. If the protocol is TCP or UDP, this value must be less than or equal to the value of the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.\n\n*type*: `integer`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ethertype": {
                        "description": "Ethertype of the traffic.\ntype: string\ndefault: \"IPv4\"",
                        "markdownDescription": "Ethertype of the traffic.\n\n*type*: `string`\n\n*default*: `\"IPv4\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "security_group": {
                        "description": "Security group name or ID to add rule.\ntype: string\nrequired: true",
                        "markdownDescription": "Security group name or ID to add rule.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "remote_group": {
                        "description": "The remote group name or ID to be associated with this security group rule.\ntype: string",
                        "markdownDescription": "The remote group name or ID to be associated with this security group rule.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "security_group"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::Subnet"
                    ],
                    "description": "A resource for managing Neutron subnets.\nA subnet represents an IP address block that can be used for assigning IP addresses to virtual instances. Each subnet must have a CIDR and must be associated with a network. IPs can be either selected from the whole subnet CIDR, or from \"allocation pools\" that can be specified by the user.\nProperties\n* allocation_pools: list - The start and end addresses for the allocation pools.\n* cidr: string - The CIDR.\n* dns_nameservers: list - A specified set of DNS name servers to be used.\n* enable_dhcp: boolean - Set to true if DHCP is enabled and false if DHCP is disabled.\n* gateway_ip: string - The gateway IP address. Set to any of [ null | ~ | \"\" ] to create/update a subnet without a gateway. If omitted when creation, neutron will assign the first free IP address within the subnet to the gateway automatically. If remove this from template when update, the old gateway IP address will be detached.\n* host_routes: list - A list of host route dictionaries for the subnet.\n* ip_version: integer - The IP version, which is 4 or 6.\n* ipv6_address_mode: string - IPv6 address mode.\n* ipv6_ra_mode: string - IPv6 RA (Router Advertisement) mode.\n* name: string - The name of the subnet.\n* network: string - The ID of the attached network.\n* prefixlen: integer - Prefix length for subnet allocation from subnet pool.\n* subnetpool: string - The name or ID of the subnet pool.\n* tenant_id: string - The ID of the tenant who owns the network. Only administrative users can specify a tenant ID other than their own.\n* value_specs: map - Extra parameters to include in the request.\n\nOutput Attributes\n* allocation_pools: list - Ip allocation pools and their ranges.\n* cidr: string - CIDR block notation for this subnet.\n* dns_nameservers: list - List of dns nameservers.\n* enable_dhcp: string - 'true' if DHCP is enabled for this subnet; 'false' otherwise.\n* gateway_ip: string - Ip of the subnet's gateway.\n* host_routes: list - Additional routes for this subnet.\n* ip_version: string - Ip version for the subnet.\n* name: string - Friendly name of the subnet.\n* network_id: string - Parent network of the subnet.\n* show: map - Detailed information about resource.\n* tenant_id: string - Tenant owning the subnet.",
                    "markdownDescription": "A resource for managing Neutron subnets.\n\nA subnet represents an IP address block that can be used for assigning IP\naddresses to virtual instances. Each subnet must have a CIDR and must be\nassociated with a network. IPs can be either selected from the whole subnet\nCIDR, or from \"allocation pools\" that can be specified by the user.\n\n### Properties\n* **allocation_pools**: `list` - The start and end addresses for the allocation pools.\n* **cidr**: `string` - The CIDR.\n* **dns_nameservers**: `list` - A specified set of DNS name servers to be used.\n* **enable_dhcp**: `boolean` - Set to true if DHCP is enabled and false if DHCP is disabled.\n* **gateway_ip**: `string` - The gateway IP address. Set to any of [ null | ~ | \"\" ] to create/update a subnet without a gateway. If omitted when creation, neutron will assign the first free IP address within the subnet to the gateway automatically. If remove this from template when update, the old gateway IP address will be detached.\n* **host_routes**: `list` - A list of host route dictionaries for the subnet.\n* **ip_version**: `integer` - The IP version, which is 4 or 6.\n* **ipv6_address_mode**: `string` - IPv6 address mode.\n* **ipv6_ra_mode**: `string` - IPv6 RA (Router Advertisement) mode.\n* **name**: `string` - The name of the subnet.\n* **network**: `string` - The ID of the attached network.\n* **prefixlen**: `integer` - Prefix length for subnet allocation from subnet pool.\n* **subnetpool**: `string` - The name or ID of the subnet pool.\n* **tenant_id**: `string` - The ID of the tenant who owns the network. Only administrative users can specify a tenant ID other than their own.\n* **value_specs**: `map` - Extra parameters to include in the request.\n\n### Output Attributes\n* **allocation_pools**: `list` - Ip allocation pools and their ranges.\n* **cidr**: `string` - CIDR block notation for this subnet.\n* **dns_nameservers**: `list` - List of dns nameservers.\n* **enable_dhcp**: `string` - 'true' if DHCP is enabled for this subnet; 'false' otherwise.\n* **gateway_ip**: `string` - Ip of the subnet's gateway.\n* **host_routes**: `list` - Additional routes for this subnet.\n* **ip_version**: `string` - Ip version for the subnet.\n* **name**: `string` - Friendly name of the subnet.\n* **network_id**: `string` - Parent network of the subnet.\n* **show**: `map` - Detailed information about resource.\n* **tenant_id**: `string` - Tenant owning the subnet."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "network": {
                        "description": "The ID of the attached network.\ntype: string\nrequired: true",
                        "markdownDescription": "The ID of the attached network.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "enable_dhcp": {
                        "description": "Set to true if DHCP is enabled and false if DHCP is disabled.\ntype: boolean\ndefault: true\nupdate_allowed: true",
                        "markdownDescription": "Set to true if DHCP is enabled and false if DHCP is disabled.\n\n*type*: `boolean`\n\n*default*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "tenant_id": {
                        "description": "The ID of the tenant who owns the network. Only administrative users can specify a tenant ID other than their own.\ntype: string",
                        "markdownDescription": "The ID of the tenant who owns the network. Only administrative users can specify a tenant ID other than their own.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "subnetpool": {
                        "description": "The name or ID of the subnet pool.\ntype: string",
                        "markdownDescription": "The name or ID of the subnet pool.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "dns_nameservers": {
                        "description": "A specified set of DNS name servers to be used.\ntype: list\ndefault: []\nupdate_allowed: true",
                        "markdownDescription": "A specified set of DNS name servers to be used.\n\n*type*: `list`\n\n*default*: `[]`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "gateway_ip": {
                        "description": "The gateway IP address. Set to any of [ null | ~ | \"\" ] to create/update a subnet without a gateway. If omitted when creation, neutron will assign the first free IP address within the subnet to the gateway automatically. If remove this from template when update, the old gateway IP address will be detached.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The gateway IP address. Set to any of [ null | ~ | \"\" ] to create/update a subnet without a gateway. If omitted when creation, neutron will assign the first free IP address within the subnet to the gateway automatically. If remove this from template when update, the old gateway IP address will be detached.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ipv6_ra_mode": {
                        "description": "IPv6 RA (Router Advertisement) mode.\ntype: string",
                        "markdownDescription": "IPv6 RA (Router Advertisement) mode.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "allocation_pools": {
                        "description": "The start and end addresses for the allocation pools.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "The start and end addresses for the allocation pools.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "start": {
                                      "description": "Start address for the allocation pool.\ntype: string\nrequired: true",
                                      "markdownDescription": "Start address for the allocation pool.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "end": {
                                      "description": "End address for the allocation pool.\ntype: string\nrequired: true",
                                      "markdownDescription": "End address for the allocation pool.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "host_routes": {
                        "description": "A list of host route dictionaries for the subnet.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "A list of host route dictionaries for the subnet.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "destination": {
                                      "description": "The destination for static route.\ntype: string\nrequired: true",
                                      "markdownDescription": "The destination for static route.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "nexthop": {
                                      "description": "The next hop for the destination.\ntype: string\nrequired: true",
                                      "markdownDescription": "The next hop for the destination.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "destination",
                                    "nexthop"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "value_specs": {
                        "description": "Extra parameters to include in the request.\ntype: map\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Extra parameters to include in the request.\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "prefixlen": {
                        "description": "Prefix length for subnet allocation from subnet pool.\ntype: integer",
                        "markdownDescription": "Prefix length for subnet allocation from subnet pool.\n\n*type*: `integer`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ipv6_address_mode": {
                        "description": "IPv6 address mode.\ntype: string",
                        "markdownDescription": "IPv6 address mode.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "cidr": {
                        "description": "The CIDR.\ntype: string",
                        "markdownDescription": "The CIDR.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "ip_version": {
                        "description": "The IP version, which is 4 or 6.\ntype: integer\ndefault: 4",
                        "markdownDescription": "The IP version, which is 4 or 6.\n\n*type*: `integer`\n\n*default*: `4`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "The name of the subnet.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The name of the subnet.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "network"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Neutron::SubnetPool"
                    ],
                    "description": "A resource that implements neutron subnet pool.\nThis resource can be used to create a subnet pool with a large block of addresses and create subnets from it.\nProperties\n* address_scope: string - An address scope ID to assign to the subnet pool.\n* default_prefixlen: integer - The size of the prefix to allocate when the cidr or prefixlen attributes are not specified while creating a subnet.\n* default_quota: integer - A per-tenant quota on the prefix space that can be allocated from the subnet pool for tenant subnets.\n* is_default: boolean - Whether this is default IPv4/IPv6 subnet pool. There can only be one default subnet pool for each IP family. Note that the default policy setting restricts administrative users to set this to True.\n* max_prefixlen: integer - Maximum prefix size that can be allocated from the subnet pool.\n* min_prefixlen: integer - Smallest prefix size that can be allocated from the subnet pool.\n* name: string - Name of the subnet pool.\n* prefixes: list - List of subnet prefixes to assign.\n* shared: boolean - Whether the subnet pool will be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.\n* tenant_id: string - The ID of the tenant who owns the subnet pool. Only administrative users can specify a tenant ID other than their own.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource that implements neutron subnet pool.\n\nThis resource can be used to create a subnet pool with a large block\nof addresses and create subnets from it.\n\n### Properties\n* **address_scope**: `string` - An address scope ID to assign to the subnet pool.\n* **default_prefixlen**: `integer` - The size of the prefix to allocate when the cidr or prefixlen attributes are not specified while creating a subnet.\n* **default_quota**: `integer` - A per-tenant quota on the prefix space that can be allocated from the subnet pool for tenant subnets.\n* **is_default**: `boolean` - Whether this is default IPv4/IPv6 subnet pool. There can only be one default subnet pool for each IP family. Note that the default policy setting restricts administrative users to set this to True.\n* **max_prefixlen**: `integer` - Maximum prefix size that can be allocated from the subnet pool.\n* **min_prefixlen**: `integer` - Smallest prefix size that can be allocated from the subnet pool.\n* **name**: `string` - Name of the subnet pool.\n* **prefixes**: `list` - List of subnet prefixes to assign.\n* **shared**: `boolean` - Whether the subnet pool will be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.\n* **tenant_id**: `string` - The ID of the tenant who owns the subnet pool. Only administrative users can specify a tenant ID other than their own.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "is_default": {
                        "description": "Whether this is default IPv4/IPv6 subnet pool. There can only be one default subnet pool for each IP family. Note that the default policy setting restricts administrative users to set this to True.\ntype: boolean\ndefault: false\nupdate_allowed: true",
                        "markdownDescription": "Whether this is default IPv4/IPv6 subnet pool. There can only be one default subnet pool for each IP family. Note that the default policy setting restricts administrative users to set this to True.\n\n*type*: `boolean`\n\n*default*: `false`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Name of the subnet pool.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Name of the subnet pool.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "default_quota": {
                        "description": "A per-tenant quota on the prefix space that can be allocated from the subnet pool for tenant subnets.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "A per-tenant quota on the prefix space that can be allocated from the subnet pool for tenant subnets.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "tenant_id": {
                        "description": "The ID of the tenant who owns the subnet pool. Only administrative users can specify a tenant ID other than their own.\ntype: string",
                        "markdownDescription": "The ID of the tenant who owns the subnet pool. Only administrative users can specify a tenant ID other than their own.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "prefixes": {
                        "description": "List of subnet prefixes to assign.\ntype: list\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "List of subnet prefixes to assign.\n\n*type*: `list`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: string",
                              "markdownDescription": "*type*: `string`",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "min_prefixlen": {
                        "description": "Smallest prefix size that can be allocated from the subnet pool.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Smallest prefix size that can be allocated from the subnet pool.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "shared": {
                        "description": "Whether the subnet pool will be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.\ntype: boolean\ndefault: false",
                        "markdownDescription": "Whether the subnet pool will be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.\n\n*type*: `boolean`\n\n*default*: `false`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "default_prefixlen": {
                        "description": "The size of the prefix to allocate when the cidr or prefixlen attributes are not specified while creating a subnet.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "The size of the prefix to allocate when the cidr or prefixlen attributes are not specified while creating a subnet.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "address_scope": {
                        "description": "An address scope ID to assign to the subnet pool.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "An address scope ID to assign to the subnet pool.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "max_prefixlen": {
                        "description": "Maximum prefix size that can be allocated from the subnet pool.\ntype: integer\nupdate_allowed: true",
                        "markdownDescription": "Maximum prefix size that can be allocated from the subnet pool.\n\n*type*: `integer`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "prefixes"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Nova::FloatingIP"
                    ],
                    "description": "A resource for managing Nova floating IPs.\nFloating IP addresses can change their association between instances by action of the user. One of the most common use cases for floating IPs is to provide public IP addresses to a private cloud, where there are a limited number of IP addresses available. Another is for a public cloud user to have a \"static\" IP address that can be reassigned when an instance is upgraded or moved.\nProperties\n* pool: string - Allocate a floating IP from a given floating IP pool.\n\nOutput Attributes\n* ip: string - Allocated floating IP address.\n* pool: string - Pool from which floating IP is allocated.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for managing Nova floating IPs.\n\nFloating IP addresses can change their association between instances by\naction of the user. One of the most common use cases for floating IPs is\nto provide public IP addresses to a private cloud, where there are a\nlimited number of IP addresses available. Another is for a public cloud\nuser to have a \"static\" IP address that can be reassigned when an instance\nis upgraded or moved.\n\n### Properties\n* **pool**: `string` - Allocate a floating IP from a given floating IP pool.\n\n### Output Attributes\n* **ip**: `string` - Allocated floating IP address.\n* **pool**: `string` - Pool from which floating IP is allocated.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "pool": {
                        "description": "Allocate a floating IP from a given floating IP pool.\ntype: string",
                        "markdownDescription": "Allocate a floating IP from a given floating IP pool.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Nova::FloatingIPAssociation"
                    ],
                    "description": "A resource associates Nova floating IP with Nova server resource.\nResource for associating existing Nova floating IP and Nova server.\nProperties\n* floating_ip: string - ID of the floating IP to assign to the server.\n* server_id: string - Server to assign floating IP to.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource associates Nova floating IP with Nova server resource.\n\nResource for associating existing Nova floating IP and Nova server.\n\n### Properties\n* **floating_ip**: `string` - ID of the floating IP to assign to the server.\n* **server_id**: `string` - Server to assign floating IP to.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "server_id": {
                        "description": "Server to assign floating IP to.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "Server to assign floating IP to.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "floating_ip": {
                        "description": "ID of the floating IP to assign to the server.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "ID of the floating IP to assign to the server.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "server_id",
                      "floating_ip"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Nova::KeyPair"
                    ],
                    "description": "A resource for creating Nova key pairs.\nA keypair is a ssh key that can be injected into a server on launch.\n**Note** that if a new key is generated setting `save_private_key` to `True` results in the system saving the private key which can then be retrieved via the `private_key` attribute of this resource.\nSetting the `public_key` property means that the `private_key` attribute of this resource will always return an empty string regardless of the `save_private_key` setting since there will be no private key data to save.\nProperties\n* name: string - The name of the key pair.\n* public_key: string - The optional public key. This allows users to supply the public key from a pre-existing key pair. If not supplied, a new key pair will be generated.\n* save_private_key: boolean - True if the system should remember a generated private key; False otherwise.\n* type: string - Keypair type. Supported since Nova api version 2.2.\n\nOutput Attributes\n* private_key: string - The private key if it has been saved.\n* public_key: string - The public key.\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for creating Nova key pairs.\n\nA keypair is a ssh key that can be injected into a server on launch.\n\n**Note** that if a new key is generated setting `save_private_key` to\n`True` results in the system saving the private key which can then be\nretrieved via the `private_key` attribute of this resource.\n\nSetting the `public_key` property means that the `private_key` attribute\nof this resource will always return an empty string regardless of the\n`save_private_key` setting since there will be no private key data to\nsave.\n\n### Properties\n* **name**: `string` - The name of the key pair.\n* **public_key**: `string` - The optional public key. This allows users to supply the public key from a pre-existing key pair. If not supplied, a new key pair will be generated.\n* **save_private_key**: `boolean` - True if the system should remember a generated private key; False otherwise.\n* **type**: `string` - Keypair type. Supported since Nova api version 2.2.\n\n### Output Attributes\n* **private_key**: `string` - The private key if it has been saved.\n* **public_key**: `string` - The public key.\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "public_key": {
                        "description": "The optional public key. This allows users to supply the public key from a pre-existing key pair. If not supplied, a new key pair will be generated.\ntype: string",
                        "markdownDescription": "The optional public key. This allows users to supply the public key from a pre-existing key pair. If not supplied, a new key pair will be generated.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "type": {
                        "description": "Keypair type. Supported since Nova api version 2.2.\ntype: string",
                        "markdownDescription": "Keypair type. Supported since Nova api version 2.2.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "The name of the key pair.\ntype: string\nrequired: true",
                        "markdownDescription": "The name of the key pair.\n\n*type*: `string`\n\n*required*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "save_private_key": {
                        "description": "True if the system should remember a generated private key; False otherwise.\ntype: boolean\ndefault: false",
                        "markdownDescription": "True if the system should remember a generated private key; False otherwise.\n\n*type*: `boolean`\n\n*default*: `false`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Nova::Server"
                    ],
                    "description": "A resource for managing Nova instances.\nA Server resource manages the running virtual machine instance within an OpenStack cloud.\nProperties\n* admin_pass: string - The administrator password for the server.\n* availability_zone: string - Name of the availability zone for server placement.\n* block_device_mapping: list - Block device mappings for this server.\n* block_device_mapping_v2: list - Block device mappings v2 for this server.\n* config_drive: boolean - If True, enable config drive on the server.\n* diskConfig: string - Control how the disk is partitioned when the server is created.\n* flavor: string - The ID or name of the flavor to boot onto.\n* flavor_update_policy: string - Policy on how to apply a flavor update; either by requesting a server resize or by replacing the entire server.\n* image: string - The ID or name of the image to boot with.\n* image_update_policy: string - Policy on how to apply an image-id update; either by requesting a server rebuild or by replacing the entire server.\n* key_name: string - Name of keypair to inject into the server.\n* metadata: map - Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).\n* name: string - Server name.\n* networks: list - An ordered list of nics to be added to this server, with information about connected networks, fixed ips, port etc.\n* personality: map - A map of files to create/overwrite on the server upon boot. Keys are file names and values are the file contents.\n* reservation_id: string - A UUID for the set of servers being requested.\n* scheduler_hints: map - Arbitrary key-value pairs specified by the client to help boot a server.\n* security_groups: list - List of security group names or IDs. Cannot be used if neutron ports are associated with this server; assign security groups to the ports instead.\n* software_config_transport: string - How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials. POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling.\n* tags: list - Server tags. Supported since client version 2.26.\n* user_data: string - User data script to be executed by cloud-init.\n* user_data_format: string - How the user_data should be formatted for the server. For HEAT_CFNTOOLS, the user_data is bundled as part of the heat-cfntools cloud-init boot configuration data. For RAW the user_data is passed to Nova unmodified. For SOFTWARE_CONFIG user_data is bundled as part of the software config data, and metadata is derived from any associated SoftwareDeployment resources.\n* user_data_update_policy: string - Policy on how to apply a user_data update; either by ignoring it or by replacing the entire server.\n\nOutput Attributes\n* accessIPv4: string - The manually assigned alternative public IPv4 address of the server.\n* accessIPv6: string - The manually assigned alternative public IPv6 address of the server.\n* addresses: map - A dict of all network addresses with corresponding port_id. Each network will have two keys in dict, they are network name and network id. The port ID may be obtained through the following expression: \"{get_attr: [<server>, addresses, <network name_or_id>, 0, port]}\".\n* console_urls: map - URLs of server's consoles. To get a specific console type, the requested type can be specified as parameter to the get_attr function, e.g. get_attr: [ <server>, console_urls, novnc ]. Currently supported types are novnc, xvpvnc, spice-html5, rdp-html5, serial.\n* instance_name: string - AWS compatible instance name.\n* name: string - Name of the server.\n* networks: map - A dict of assigned network addresses of the form: {\"public\": [ip1, ip2...], \"private\": [ip3, ip4], \"public_uuid\": [ip1, ip2...], \"private_uuid\": [ip3, ip4]}. Each network will have two keys in dict, they are network name and network id.\n* show: map - Detailed information about resource.\n* tags: list - Tags from the server. Supported since client version 2.26.",
                    "markdownDescription": "A resource for managing Nova instances.\n\nA Server resource manages the running virtual machine instance within an\nOpenStack cloud.\n\n### Properties\n* **admin_pass**: `string` - The administrator password for the server.\n* **availability_zone**: `string` - Name of the availability zone for server placement.\n* **block_device_mapping**: `list` - Block device mappings for this server.\n* **block_device_mapping_v2**: `list` - Block device mappings v2 for this server.\n* **config_drive**: `boolean` - If True, enable config drive on the server.\n* **diskConfig**: `string` - Control how the disk is partitioned when the server is created.\n* **flavor**: `string` - The ID or name of the flavor to boot onto.\n* **flavor_update_policy**: `string` - Policy on how to apply a flavor update; either by requesting a server resize or by replacing the entire server.\n* **image**: `string` - The ID or name of the image to boot with.\n* **image_update_policy**: `string` - Policy on how to apply an image-id update; either by requesting a server rebuild or by replacing the entire server.\n* **key_name**: `string` - Name of keypair to inject into the server.\n* **metadata**: `map` - Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).\n* **name**: `string` - Server name.\n* **networks**: `list` - An ordered list of nics to be added to this server, with information about connected networks, fixed ips, port etc.\n* **personality**: `map` - A map of files to create/overwrite on the server upon boot. Keys are file names and values are the file contents.\n* **reservation_id**: `string` - A UUID for the set of servers being requested.\n* **scheduler_hints**: `map` - Arbitrary key-value pairs specified by the client to help boot a server.\n* **security_groups**: `list` - List of security group names or IDs. Cannot be used if neutron ports are associated with this server; assign security groups to the ports instead.\n* **software_config_transport**: `string` - How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials. POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling.\n* **tags**: `list` - Server tags. Supported since client version 2.26.\n* **user_data**: `string` - User data script to be executed by cloud-init.\n* **user_data_format**: `string` - How the user_data should be formatted for the server. For HEAT_CFNTOOLS, the user_data is bundled as part of the heat-cfntools cloud-init boot configuration data. For RAW the user_data is passed to Nova unmodified. For SOFTWARE_CONFIG user_data is bundled as part of the software config data, and metadata is derived from any associated SoftwareDeployment resources.\n* **user_data_update_policy**: `string` - Policy on how to apply a user_data update; either by ignoring it or by replacing the entire server.\n\n### Output Attributes\n* **accessIPv4**: `string` - The manually assigned alternative public IPv4 address of the server.\n* **accessIPv6**: `string` - The manually assigned alternative public IPv6 address of the server.\n* **addresses**: `map` - A dict of all network addresses with corresponding port_id. Each network will have two keys in dict, they are network name and network id. The port ID may be obtained through the following expression: \"{get_attr: [<server>, addresses, <network name_or_id>, 0, port]}\".\n* **console_urls**: `map` - URLs of server's consoles. To get a specific console type, the requested type can be specified as parameter to the get_attr function, e.g. get_attr: [ <server>, console_urls, novnc ]. Currently supported types are novnc, xvpvnc, spice-html5, rdp-html5, serial.\n* **instance_name**: `string` - AWS compatible instance name.\n* **name**: `string` - Name of the server.\n* **networks**: `map` - A dict of assigned network addresses of the form: {\"public\": [ip1, ip2...], \"private\": [ip3, ip4], \"public_uuid\": [ip1, ip2...], \"private_uuid\": [ip3, ip4]}. Each network will have two keys in dict, they are network name and network id.\n* **show**: `map` - Detailed information about resource.\n* **tags**: `list` - Tags from the server. Supported since client version 2.26."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "admin_pass": {
                        "description": "The administrator password for the server.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The administrator password for the server.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "user_data_update_policy": {
                        "description": "Policy on how to apply a user_data update; either by ignoring it or by replacing the entire server.\ntype: string\ndefault: \"REPLACE\"\nupdate_allowed: true",
                        "markdownDescription": "Policy on how to apply a user_data update; either by ignoring it or by replacing the entire server.\n\n*type*: `string`\n\n*default*: `\"REPLACE\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "availability_zone": {
                        "description": "Name of the availability zone for server placement.\ntype: string",
                        "markdownDescription": "Name of the availability zone for server placement.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "image": {
                        "description": "The ID or name of the image to boot with.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "The ID or name of the image to boot with.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "user_data": {
                        "description": "User data script to be executed by cloud-init.\ntype: string\ndefault: \"\"\nupdate_allowed: true",
                        "markdownDescription": "User data script to be executed by cloud-init.\n\n*type*: `string`\n\n*default*: `\"\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "diskConfig": {
                        "description": "Control how the disk is partitioned when the server is created.\ntype: string",
                        "markdownDescription": "Control how the disk is partitioned when the server is created.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "flavor_update_policy": {
                        "description": "Policy on how to apply a flavor update; either by requesting a server resize or by replacing the entire server.\ntype: string\ndefault: \"RESIZE\"\nupdate_allowed: true",
                        "markdownDescription": "Policy on how to apply a flavor update; either by requesting a server resize or by replacing the entire server.\n\n*type*: `string`\n\n*default*: `\"RESIZE\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "flavor": {
                        "description": "The ID or name of the flavor to boot onto.\ntype: string\nrequired: true\nupdate_allowed: true",
                        "markdownDescription": "The ID or name of the flavor to boot onto.\n\n*type*: `string`\n\n*required*: `true`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "reservation_id": {
                        "description": "A UUID for the set of servers being requested.\ntype: string",
                        "markdownDescription": "A UUID for the set of servers being requested.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "networks": {
                        "description": "An ordered list of nics to be added to this server, with information about connected networks, fixed ips, port etc.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "An ordered list of nics to be added to this server, with information about connected networks, fixed ips, port etc.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "subnet": {
                                      "description": "Subnet in which to allocate the IP address for port. Used for creating port, based on derived properties. If subnet is specified, network property becomes optional.\ntype: string",
                                      "markdownDescription": "Subnet in which to allocate the IP address for port. Used for creating port, based on derived properties. If subnet is specified, network property becomes optional.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "uuid": {
                                      "description": "ID of network to create a port on.\ntype: string",
                                      "markdownDescription": "ID of network to create a port on.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "fixed_ip": {
                                      "description": "Fixed IP address to specify for the port created on the requested network.\ntype: string",
                                      "markdownDescription": "Fixed IP address to specify for the port created on the requested network.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "floating_ip": {
                                      "description": "ID of the floating IP to associate.\ntype: string",
                                      "markdownDescription": "ID of the floating IP to associate.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "port_extra_properties": {
                                      "description": "Dict, which has expand properties for port. Used only if port property is not specified for creating port.\ntype: map",
                                      "markdownDescription": "Dict, which has expand properties for port. Used only if port property is not specified for creating port.\n\n*type*: `map`",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "allowed_address_pairs": {
                                              "description": "Additional MAC/IP address pairs allowed to pass through the port.\ntype: list\nupdate_allowed: true",
                                              "markdownDescription": "Additional MAC/IP address pairs allowed to pass through the port.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                                              "oneOf": [
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "description": "type: map",
                                                    "markdownDescription": "*type*: `map`",
                                                    "oneOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "ip_address": {
                                                            "description": "IP address to allow through this port.\ntype: string\nrequired: true",
                                                            "markdownDescription": "IP address to allow through this port.\n\n*type*: `string`\n\n*required*: `true`",
                                                            "oneOf": [
                                                              {
                                                                "type": "string"
                                                              },
                                                              {
                                                                "$ref": "#/definitions/intrinsic-function"
                                                              }
                                                            ]
                                                          },
                                                          "mac_address": {
                                                            "description": "MAC address to allow through this port.\ntype: string",
                                                            "markdownDescription": "MAC address to allow through this port.\n\n*type*: `string`",
                                                            "oneOf": [
                                                              {
                                                                "type": "string"
                                                              },
                                                              {
                                                                "$ref": "#/definitions/intrinsic-function"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "ip_address"
                                                        ],
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "$ref": "#/definitions/intrinsic-function"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "admin_state_up": {
                                              "description": "The administrative state of this port.\ntype: boolean\ndefault: true\nupdate_allowed: true",
                                              "markdownDescription": "The administrative state of this port.\n\n*type*: `boolean`\n\n*default*: `true`\n\n*update_allowed*: `true`",
                                              "oneOf": [
                                                {
                                                  "type": "boolean"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "binding:vnic_type": {
                                              "description": "The vnic type to be bound on the neutron port. To support SR-IOV PCI passthrough networking, you can request that the neutron port to be realized as normal (virtual nic), direct (pci passthrough), or macvtap (virtual interface with a tap-like software interface). Note that this only works for Neutron deployments that support the bindings extension.\ntype: string\nupdate_allowed: true",
                                              "markdownDescription": "The vnic type to be bound on the neutron port. To support SR-IOV PCI passthrough networking, you can request that the neutron port to be realized as normal (virtual nic), direct (pci passthrough), or macvtap (virtual interface with a tap-like software interface). Note that this only works for Neutron deployments that support the bindings extension.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "value_specs": {
                                              "description": "Extra parameters to include in the request.\ntype: map\ndefault: {}\nupdate_allowed: true",
                                              "markdownDescription": "Extra parameters to include in the request.\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                                              "oneOf": [
                                                {
                                                  "$ref": "#/definitions/object-with-intrinsic-functions"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "mac_address": {
                                              "description": "MAC address to give to this port. The default update policy of this property in neutron is that allow admin role only.\ntype: string\nupdate_allowed: true",
                                              "markdownDescription": "MAC address to give to this port. The default update policy of this property in neutron is that allow admin role only.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "port_security_enabled": {
                                              "description": "Flag to enable/disable port security on the port. When disable this feature(set it to False), there will be no packages filtering, like security-group and address-pairs.\ntype: boolean\nupdate_allowed: true",
                                              "markdownDescription": "Flag to enable/disable port security on the port. When disable this feature(set it to False), there will be no packages filtering, like security-group and address-pairs.\n\n*type*: `boolean`\n\n*update_allowed*: `true`",
                                              "oneOf": [
                                                {
                                                  "type": "boolean"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            },
                                            "qos_policy": {
                                              "description": "The name or ID of QoS policy to attach to this port.\ntype: string\nupdate_allowed: true",
                                              "markdownDescription": "The name or ID of QoS policy to attach to this port.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "$ref": "#/definitions/intrinsic-function"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [],
                                          "additionalProperties": false
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "port": {
                                      "description": "ID of an existing port to associate with this server.\ntype: string",
                                      "markdownDescription": "ID of an existing port to associate with this server.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "network": {
                                      "description": "Name or ID of network to create a port on.\ntype: string",
                                      "markdownDescription": "Name or ID of network to create a port on.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "security_groups": {
                        "description": "List of security group names or IDs. Cannot be used if neutron ports are associated with this server; assign security groups to the ports instead.\ntype: list\ndefault: []",
                        "markdownDescription": "List of security group names or IDs. Cannot be used if neutron ports are associated with this server; assign security groups to the ports instead.\n\n*type*: `list`\n\n*default*: `[]`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/array-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "scheduler_hints": {
                        "description": "Arbitrary key-value pairs specified by the client to help boot a server.\ntype: map",
                        "markdownDescription": "Arbitrary key-value pairs specified by the client to help boot a server.\n\n*type*: `map`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "tags": {
                        "description": "Server tags. Supported since client version 2.26.\ntype: list\nupdate_allowed: true",
                        "markdownDescription": "Server tags. Supported since client version 2.26.\n\n*type*: `list`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: string",
                              "markdownDescription": "*type*: `string`",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "config_drive": {
                        "description": "If True, enable config drive on the server.\ntype: boolean",
                        "markdownDescription": "If True, enable config drive on the server.\n\n*type*: `boolean`",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "personality": {
                        "description": "A map of files to create/overwrite on the server upon boot. Keys are file names and values are the file contents.\ntype: map\ndefault: {}",
                        "markdownDescription": "A map of files to create/overwrite on the server upon boot. Keys are file names and values are the file contents.\n\n*type*: `map`\n\n*default*: `{}`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "user_data_format": {
                        "description": "How the user_data should be formatted for the server. For HEAT_CFNTOOLS, the user_data is bundled as part of the heat-cfntools cloud-init boot configuration data. For RAW the user_data is passed to Nova unmodified. For SOFTWARE_CONFIG user_data is bundled as part of the software config data, and metadata is derived from any associated SoftwareDeployment resources.\ntype: string\ndefault: \"HEAT_CFNTOOLS\"",
                        "markdownDescription": "How the user_data should be formatted for the server. For HEAT_CFNTOOLS, the user_data is bundled as part of the heat-cfntools cloud-init boot configuration data. For RAW the user_data is passed to Nova unmodified. For SOFTWARE_CONFIG user_data is bundled as part of the software config data, and metadata is derived from any associated SoftwareDeployment resources.\n\n*type*: `string`\n\n*default*: `\"HEAT_CFNTOOLS\"`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "block_device_mapping": {
                        "description": "Block device mappings for this server.\ntype: list",
                        "markdownDescription": "Block device mappings for this server.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "device_name": {
                                      "description": "A device name where the volume will be attached in the system at /dev/device_name. This value is typically vda.\ntype: string\nrequired: true",
                                      "markdownDescription": "A device name where the volume will be attached in the system at /dev/device_name. This value is typically vda.\n\n*type*: `string`\n\n*required*: `true`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "volume_size": {
                                      "description": "The size of the volume, in GB. It is safe to leave this blank and have the Compute service infer the size.\ntype: integer",
                                      "markdownDescription": "The size of the volume, in GB. It is safe to leave this blank and have the Compute service infer the size.\n\n*type*: `integer`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "volume_id": {
                                      "description": "The ID of the volume to boot from. Only one of volume_id or snapshot_id should be provided.\ntype: string",
                                      "markdownDescription": "The ID of the volume to boot from. Only one of volume_id or snapshot_id should be provided.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "delete_on_termination": {
                                      "description": "Indicate whether the volume should be deleted when the server is terminated.\ntype: boolean",
                                      "markdownDescription": "Indicate whether the volume should be deleted when the server is terminated.\n\n*type*: `boolean`",
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "snapshot_id": {
                                      "description": "The ID of the snapshot to create a volume from.\ntype: string",
                                      "markdownDescription": "The ID of the snapshot to create a volume from.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "device_name"
                                  ],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "key_name": {
                        "description": "Name of keypair to inject into the server.\ntype: string",
                        "markdownDescription": "Name of keypair to inject into the server.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "software_config_transport": {
                        "description": "How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials. POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling.\ntype: string\ndefault: \"POLL_SERVER_CFN\"\nupdate_allowed: true",
                        "markdownDescription": "How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials. POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling. ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling.\n\n*type*: `string`\n\n*default*: `\"POLL_SERVER_CFN\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "name": {
                        "description": "Server name.\ntype: string\nupdate_allowed: true",
                        "markdownDescription": "Server name.\n\n*type*: `string`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "block_device_mapping_v2": {
                        "description": "Block device mappings v2 for this server.\ntype: list",
                        "markdownDescription": "Block device mappings v2 for this server.\n\n*type*: `list`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: map",
                              "markdownDescription": "*type*: `map`",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "ephemeral_format": {
                                      "description": "The format of the local ephemeral block device. If no format is specified, uses default value, defined in nova configuration file.\ntype: string",
                                      "markdownDescription": "The format of the local ephemeral block device. If no format is specified, uses default value, defined in nova configuration file.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "boot_index": {
                                      "description": "Integer used for ordering the boot disks.\ntype: integer",
                                      "markdownDescription": "Integer used for ordering the boot disks.\n\n*type*: `integer`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "ephemeral_size": {
                                      "description": "The size of the local ephemeral block device, in GB.\ntype: integer",
                                      "markdownDescription": "The size of the local ephemeral block device, in GB.\n\n*type*: `integer`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "volume_size": {
                                      "description": "Size of the block device in GB. If it is omitted, hypervisor driver calculates size.\ntype: integer",
                                      "markdownDescription": "Size of the block device in GB. If it is omitted, hypervisor driver calculates size.\n\n*type*: `integer`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "image": {
                                      "description": "The ID or name of the image to create a volume from.\ntype: string",
                                      "markdownDescription": "The ID or name of the image to create a volume from.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "volume_id": {
                                      "description": "The volume_id can be boot or non-boot device to the server.\ntype: string",
                                      "markdownDescription": "The volume_id can be boot or non-boot device to the server.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "device_type": {
                                      "description": "Device type: at the moment we can make distinction only between disk and cdrom.\ntype: string",
                                      "markdownDescription": "Device type: at the moment we can make distinction only between disk and cdrom.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "device_name": {
                                      "description": "A device name where the volume will be attached in the system at /dev/device_name. This value is typically vda.\ntype: string",
                                      "markdownDescription": "A device name where the volume will be attached in the system at /dev/device_name. This value is typically vda.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "disk_bus": {
                                      "description": "Bus of the device: hypervisor driver chooses a suitable default if omitted.\ntype: string",
                                      "markdownDescription": "Bus of the device: hypervisor driver chooses a suitable default if omitted.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "image_id": {
                                      "description": "The ID of the image to create a volume from.\ntype: string",
                                      "markdownDescription": "The ID of the image to create a volume from.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "swap_size": {
                                      "description": "The size of the swap, in MB.\ntype: integer",
                                      "markdownDescription": "The size of the swap, in MB.\n\n*type*: `integer`",
                                      "oneOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "snapshot_id": {
                                      "description": "The ID of the snapshot to create a volume from.\ntype: string",
                                      "markdownDescription": "The ID of the snapshot to create a volume from.\n\n*type*: `string`",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    },
                                    "delete_on_termination": {
                                      "description": "Indicate whether the volume should be deleted when the server is terminated.\ntype: boolean",
                                      "markdownDescription": "Indicate whether the volume should be deleted when the server is terminated.\n\n*type*: `boolean`",
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/intrinsic-function"
                                        }
                                      ]
                                    }
                                  },
                                  "required": [],
                                  "additionalProperties": false
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "image_update_policy": {
                        "description": "Policy on how to apply an image-id update; either by requesting a server rebuild or by replacing the entire server.\ntype: string\ndefault: \"REBUILD\"\nupdate_allowed: true",
                        "markdownDescription": "Policy on how to apply an image-id update; either by requesting a server rebuild or by replacing the entire server.\n\n*type*: `string`\n\n*default*: `\"REBUILD\"`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "metadata": {
                        "description": "Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).\ntype: map\ndefault: {}\nupdate_allowed: true",
                        "markdownDescription": "Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).\n\n*type*: `map`\n\n*default*: `{}`\n\n*update_allowed*: `true`",
                        "oneOf": [
                          {
                            "$ref": "#/definitions/object-with-intrinsic-functions"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [
                      "flavor"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "OS::Nova::ServerGroup"
                    ],
                    "description": "A resource for managing a Nova server group.\nServer groups allow you to make sure instances (VM/VPS) are on the same hypervisor host or on a different one.\nProperties\n* name: string - Server Group name.\n* policies: list - A list of string policies to apply. Defaults to anti-affinity.\n\nOutput Attributes\n* show: map - Detailed information about resource.",
                    "markdownDescription": "A resource for managing a Nova server group.\n\nServer groups allow you to make sure instances (VM/VPS) are on the same\nhypervisor host or on a different one.\n\n### Properties\n* **name**: `string` - Server Group name.\n* **policies**: `list` - A list of string policies to apply. Defaults to anti-affinity.\n\n### Output Attributes\n* **show**: `map` - Detailed information about resource."
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Server Group name.\ntype: string",
                        "markdownDescription": "Server Group name.\n\n*type*: `string`",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      },
                      "policies": {
                        "description": "A list of string policies to apply. Defaults to anti-affinity.\ntype: list\ndefault: [\n    \"anti-affinity\"\n]",
                        "markdownDescription": "A list of string policies to apply. Defaults to anti-affinity.\n\n*type*: `list`\n\n*default*: `[\n    \"anti-affinity\"\n]`",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "description": "type: string",
                              "markdownDescription": "*type*: `string`",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "$ref": "#/definitions/intrinsic-function"
                                }
                              ]
                            }
                          },
                          {
                            "$ref": "#/definitions/intrinsic-function"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/definitions/abstract-resource"
              }
            ]
          }
        ]
      }
    },
    "outputs": {
      "description": "This section allows for specifying output parameters available to users once the template has been instantiated. This section is optional and can be omitted when no output values are required.",
      "markdownDescription": "This section allows for specifying output parameters available to users once the template has been instantiated. This section is optional and can be omitted when no output values are required.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "description": {
            "description": "A short description of the output parameter. This attribute is optional.",
            "markdownDescription": "A short description of the output parameter. This attribute is optional.",
            "type": "string"
          },
          "value": {
            "description": "The value of the output parameter. This value is usually resolved by means of a function. See Intrinsic functions for details about the functions. This attribute is required.",
            "markdownDescription": "The value of the output parameter. This value is usually resolved by means of a function. See Intrinsic functions for details about the functions. This attribute is required.",
            "$ref": "#/definitions/value-with-intrinsic-function"
          },
          "condition": {
            "description": "To conditionally define an output value. None value will be shown if the condition is False. This attribute is optional. Note: Support `condition` for output is added in the Newton version.",
            "markdownDescription": "To conditionally define an output value. None value will be shown if the condition is False. This attribute is optional. Note: Support `condition` for output is added in the Newton version.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/intrinsic-function"
              }
            ]
          }
        },
        "required": [
          "value"
        ],
        "additionalProperties": false
      }
    },
    "conditions": {
      "description": "This optional section includes statements which can be used to restrict when a resource is created or when a property is defined. They can be associated with resources and resource properties in the `resources` section, also can be associated with outputs in the `outputs` sections of a template. Note: Support for this section is added in the Newton version.",
      "markdownDescription": "This optional section includes statements which can be used to restrict when a resource is created or when a property is defined. They can be associated with resources and resource properties in the `resources` section, also can be associated with outputs in the `outputs` sections of a template. Note: Support for this section is added in the Newton version.",
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "type": "boolean"
          },
          {
            "$ref": "#/definitions/intrinsic-function"
          }
        ]
      }
    }
  },
  "required": [
    "heat_template_version",
    "resources"
  ],
  "additionalProperties": false,
  "definitions": {
    "abstract-resource": {
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Resource-specific metadata. This section is optional.",
          "markdownDescription": "Resource-specific metadata. This section is optional."
        },
        "depends_on": {
          "description": "Dependencies of the resource on one or more resources of the template. See Resource dependencies for details. This attribute is optional.",
          "markdownDescription": "Dependencies of the resource on one or more resources of the template. See Resource dependencies for details. This attribute is optional.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "update_policy": {
          "description": "Update policy for the resource, in the form of a nested dictionary. Whether update policies are supported and what the exact semantics are depends on the type of the current resource. This attribute is optional.",
          "markdownDescription": "Update policy for the resource, in the form of a nested dictionary. Whether update policies are supported and what the exact semantics are depends on the type of the current resource. This attribute is optional.",
          "type": "object"
        },
        "deletion_policy": {
          "description": "Deletion policy for the resource. The allowed deletion policies are `Delete`, `Retain`, and `Snapshot`. Beginning with `heat_template_version` `2016-10-14`, the lowercase equivalents `delete`, `retain`, and `snapshot` are also allowed. This attribute is optional; the default policy is to delete the physical resource when deleting a resource from the stack.",
          "markdownDescription": "Deletion policy for the resource. The allowed deletion policies are `Delete`, `Retain`, and `Snapshot`. Beginning with `heat_template_version` `2016-10-14`, the lowercase equivalents `delete`, `retain`, and `snapshot` are also allowed. This attribute is optional; the default policy is to delete the physical resource when deleting a resource from the stack.",
          "type": "string",
          "enum": [
            "Delete",
            "Retain",
            "Snapshot",
            "delete",
            "retain",
            "snapshot"
          ]
        },
        "external_id": {
          "description": "Allows for specifying the resource_id for an existing external (to the stack) resource. External resources can not depend on other resources, but we allow other resources depend on external resource. This attribute is optional. Note: when this is specified, properties will not be used for building the resource and the resource is not managed by Heat. This is not possible to update that attribute. Also resource won’t be deleted by heat when stack is deleted.",
          "markdownDescription": "Allows for specifying the resource_id for an existing external (to the stack) resource. External resources can not depend on other resources, but we allow other resources depend on external resource. This attribute is optional. Note: when this is specified, properties will not be used for building the resource and the resource is not managed by Heat. This is not possible to update that attribute. Also resource won’t be deleted by heat when stack is deleted.",
          "type": "string"
        },
        "condition": {
          "description": "Condition for the resource. Which decides whether to create the resource or not. This attribute is optional. Note: Support `condition` for resource is added in the Newton version.",
          "markdownDescription": "Condition for the resource. Which decides whether to create the resource or not. This attribute is optional. Note: Support `condition` for resource is added in the Newton version.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/intrinsic-function"
            }
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "intrinsic-function": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "get_attr": {
              "description": "The `get_attr` function references an attribute of a resource. The attribute value is resolved at runtime using the resource instance created from the respective resource definition.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#get-attr",
              "markdownDescription": "The `get_attr` function references an attribute of a resource. The attribute value is resolved at runtime using the resource instance created from the respective resource definition.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#get-attr",
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "minItems": 1,
              "additionalItems": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "get_file": {
              "description": "The `get_file` function returns the content of a file into the template. It is generally used as a file inclusion mechanism for files containing scripts or configuration files.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#get-file",
              "markdownDescription": "The `get_file` function returns the content of a file into the template. It is generally used as a file inclusion mechanism for files containing scripts or configuration files.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#get-file",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "get_param": {
              "description": "The `get_param` function references an input parameter of a template. It resolves to the value provided for this input parameter at runtime.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#get-param",
              "markdownDescription": "The `get_param` function references an input parameter of a template. It resolves to the value provided for this input parameter at runtime.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#get-param",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": [
                    {
                      "type": "string"
                    }
                  ],
                  "minItems": 1,
                  "additionalItems": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "get_resource": {
              "description": "The `get_resource` function references another resource within the same template. At runtime, it is resolved to reference the ID of the referenced resource, which is resource type specific. For example, a reference to a floating IP resource returns the respective IP address at runtime.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#get-resource",
              "markdownDescription": "The `get_resource` function references another resource within the same template. At runtime, it is resolved to reference the ID of the referenced resource, which is resource type specific. For example, a reference to a floating IP resource returns the respective IP address at runtime.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#get-resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "list_join": {
              "description": "The `list_join` function joins a list of strings with the given delimiter.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#list-join",
              "markdownDescription": "The `list_join` function joins a list of strings with the given delimiter.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#list-join",
              "type": "array",
              "items": [
                {
                  "type": "string"
                }
              ],
              "minItems": 2,
              "additionalItems": {
                "$ref": "#/definitions/array-with-intrinsic-functions"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "digest": {
              "description": "The `digest` function allows for performing digest operations on a given value.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#digest",
              "markdownDescription": "The `digest` function allows for performing digest operations on a given value.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#digest",
              "type": "array",
              "items": [
                {
                  "type": "string",
                  "enum": [
                    "md5",
                    "sha1",
                    "sha224",
                    "sha256",
                    "sha384",
                    "sha512"
                  ]
                },
                {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/definitions/intrinsic-function"
                    }
                  ]
                }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "repeat": {
              "description": "The `repeat` function allows for dynamically transforming lists by iterating over the contents of one or more source lists and replacing the list elements into a template. The result of this function is a new list, where the elements are set to the template, rendered for each list item.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#repeat",
              "markdownDescription": "The `repeat` function allows for dynamically transforming lists by iterating over the contents of one or more source lists and replacing the list elements into a template. The result of this function is a new list, where the elements are set to the template, rendered for each list item.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#repeat",
              "type": "object",
              "properties": {
                "template": {
                  "$ref": "#/definitions/value-with-intrinsic-function"
                },
                "for_each": {
                  "type": "object",
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/array-with-intrinsic-functions"
                      },
                      {
                        "$ref": "#/definitions/intrinsic-function"
                      }
                    ]
                  }
                }
              },
              "required": [
                "template",
                "for_each"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "resource_facade": {
              "description": "The `resource_facade` function retrieves data in a parent provider template.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#resource-facade",
              "markdownDescription": "The `resource_facade` function retrieves data in a parent provider template.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#resource-facade",
              "type": "string",
              "enum": [
                "metadata",
                "deletion_policy",
                "update_policy"
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "str_replace": {
              "description": "The `str_replace` function dynamically constructs strings by providing a template string with placeholders and a list of mappings to assign values to those placeholders at runtime. The placeholders are replaced with mapping values wherever a mapping key exactly matches a placeholder.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#str-replace",
              "markdownDescription": "The `str_replace` function dynamically constructs strings by providing a template string with placeholders and a list of mappings to assign values to those placeholders at runtime. The placeholders are replaced with mapping values wherever a mapping key exactly matches a placeholder.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#str-replace",
              "$ref": "#/definitions/str_replace-functions"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "str_replace_strict": {
              "description": "`str_replace_strict` behaves identically to the `str_replace` function, only an error is raised if any of the params are not present in the template. This may help catch typo’s or other issues sooner rather than later when processing a template.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#str-replace-strict",
              "markdownDescription": "`str_replace_strict` behaves identically to the `str_replace` function, only an error is raised if any of the params are not present in the template. This may help catch typo’s or other issues sooner rather than later when processing a template.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#str-replace-strict",
              "$ref": "#/definitions/str_replace-functions"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "str_replace_vstrict": {
              "description": "`str_replace_vstrict` behaves identically to the `str_replace_strict` function, only an error is raised if any of the params are empty. This may help catch issues (i.e., prevent resources from being created with bogus values) sooner rather than later if it is known that all the params should be non-empty.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#str-replace-vstrict",
              "markdownDescription": "`str_replace_vstrict` behaves identically to the `str_replace_strict` function, only an error is raised if any of the params are empty. This may help catch issues (i.e., prevent resources from being created with bogus values) sooner rather than later if it is known that all the params should be non-empty.\nhttps://docs.openstack.org/heat/latest/template_guide/hot_spec.html#str-replace-vstrict",
              "$ref": "#/definitions/str_replace-functions"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "str_replace-functions": {
      "type": "object",
      "properties": {
        "template": {
          "type": "string"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/value-with-intrinsic-function"
          }
        }
      },
      "required": [
        "template",
        "params"
      ],
      "additionalProperties": false
    },
    "value-with-intrinsic-function": {
      "oneOf": [
        {
          "$ref": "#/definitions/object-with-intrinsic-functions"
        },
        {
          "$ref": "#/definitions/array-with-intrinsic-functions"
        },
        {
          "$ref": "#/definitions/intrinsic-function"
        },
        {
          "type": [
            "string",
            "integer",
            "number",
            "boolean",
            "null"
          ]
        }
      ]
    },
    "object-with-intrinsic-functions": {
      "type": "object",
      "not": {
        "anyOf": [
          {
            "required": [
              "get_attr"
            ]
          },
          {
            "required": [
              "get_file"
            ]
          },
          {
            "required": [
              "get_param"
            ]
          },
          {
            "required": [
              "get_resource"
            ]
          },
          {
            "required": [
              "list_join"
            ]
          },
          {
            "required": [
              "digest"
            ]
          },
          {
            "required": [
              "repeat"
            ]
          },
          {
            "required": [
              "resource_facade"
            ]
          },
          {
            "required": [
              "str_replace"
            ]
          },
          {
            "required": [
              "str_replace_strict"
            ]
          },
          {
            "required": [
              "str_replace_vstrict"
            ]
          }
        ]
      },
      "additionalProperties": {
        "$ref": "#/definitions/value-with-intrinsic-function"
      }
    },
    "array-with-intrinsic-functions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/value-with-intrinsic-function"
      }
    }
  }
}